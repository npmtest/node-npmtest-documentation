{"/home/travis/build/npmtest/node-npmtest-documentation/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-documentation/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":2,"38":2,"39":1,"40":2,"41":2,"42":1,"43":2,"44":2,"45":1,"46":2,"47":2,"48":1,"49":1,"50":1,"51":1,"52":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1,1],"10":[1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":2,"9":2,"10":2,"11":2,"12":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":102,"loc":{"start":{"line":102,"column":83},"end":{"line":105,"column":10}},"skip":true},"7":{"name":"(anonymous_7)","line":113,"loc":{"start":{"line":113,"column":77},"end":{"line":116,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":129,"loc":{"start":{"line":129,"column":12},"end":{"line":129,"column":40}},"skip":true},"9":{"name":"(anonymous_9)","line":137,"loc":{"start":{"line":137,"column":77},"end":{"line":140,"column":10}},"skip":true},"10":{"name":"(anonymous_10)","line":148,"loc":{"start":{"line":148,"column":83},"end":{"line":151,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":159,"loc":{"start":{"line":159,"column":79},"end":{"line":162,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":170,"loc":{"start":{"line":170,"column":75},"end":{"line":173,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":185,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":46}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":184,"column":5}},"24":{"start":{"line":92,"column":8},"end":{"line":94,"column":63}},"25":{"start":{"line":95,"column":8},"end":{"line":95,"column":14}},"26":{"start":{"line":102,"column":8},"end":{"line":111,"column":10},"skip":true},"27":{"start":{"line":109,"column":12},"end":{"line":109,"column":55},"skip":true},"28":{"start":{"line":110,"column":12},"end":{"line":110,"column":48},"skip":true},"29":{"start":{"line":113,"column":8},"end":{"line":126,"column":10},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":76},"skip":true},"31":{"start":{"line":121,"column":12},"end":{"line":121,"column":73},"skip":true},"32":{"start":{"line":122,"column":12},"end":{"line":122,"column":74},"skip":true},"33":{"start":{"line":123,"column":12},"end":{"line":123,"column":79},"skip":true},"34":{"start":{"line":124,"column":12},"end":{"line":124,"column":25},"skip":true},"35":{"start":{"line":125,"column":12},"end":{"line":125,"column":45},"skip":true},"36":{"start":{"line":128,"column":8},"end":{"line":135,"column":14},"skip":true},"37":{"start":{"line":133,"column":16},"end":{"line":133,"column":29},"skip":true},"38":{"start":{"line":134,"column":16},"end":{"line":134,"column":55},"skip":true},"39":{"start":{"line":137,"column":8},"end":{"line":146,"column":10},"skip":true},"40":{"start":{"line":144,"column":12},"end":{"line":144,"column":25},"skip":true},"41":{"start":{"line":145,"column":12},"end":{"line":145,"column":45},"skip":true},"42":{"start":{"line":148,"column":8},"end":{"line":157,"column":10},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":25},"skip":true},"44":{"start":{"line":156,"column":12},"end":{"line":156,"column":48},"skip":true},"45":{"start":{"line":159,"column":8},"end":{"line":168,"column":10},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":25},"skip":true},"47":{"start":{"line":167,"column":12},"end":{"line":167,"column":46},"skip":true},"48":{"start":{"line":170,"column":8},"end":{"line":179,"column":10},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":94},"skip":true},"50":{"start":{"line":178,"column":12},"end":{"line":178,"column":48},"skip":true},"51":{"start":{"line":182,"column":8},"end":{"line":182,"column":35},"skip":true},"52":{"start":{"line":183,"column":8},"end":{"line":183,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":95,"column":14}},{"start":{"line":101,"column":4},"end":{"line":183,"column":14},"skip":true}]},"9":{"line":92,"type":"binary-expr","locations":[{"start":{"line":92,"column":18},"end":{"line":92,"column":32}},{"start":{"line":93,"column":12},"end":{"line":93,"column":53}},{"start":{"line":94,"column":12},"end":{"line":94,"column":61}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":45},"end":{"line":102,"column":79},"skip":true},{"start":{"line":102,"column":83},"end":{"line":111,"column":9},"skip":true}]},"11":{"line":113,"type":"binary-expr","locations":[{"start":{"line":113,"column":42},"end":{"line":113,"column":73},"skip":true},{"start":{"line":113,"column":77},"end":{"line":126,"column":9},"skip":true}]},"12":{"line":128,"type":"binary-expr","locations":[{"start":{"line":128,"column":48},"end":{"line":128,"column":85},"skip":true},{"start":{"line":129,"column":12},"end":{"line":135,"column":13},"skip":true}]},"13":{"line":137,"type":"binary-expr","locations":[{"start":{"line":137,"column":42},"end":{"line":137,"column":73},"skip":true},{"start":{"line":137,"column":77},"end":{"line":146,"column":9},"skip":true}]},"14":{"line":148,"type":"binary-expr","locations":[{"start":{"line":148,"column":45},"end":{"line":148,"column":79},"skip":true},{"start":{"line":148,"column":83},"end":{"line":157,"column":9},"skip":true}]},"15":{"line":159,"type":"binary-expr","locations":[{"start":{"line":159,"column":43},"end":{"line":159,"column":75},"skip":true},{"start":{"line":159,"column":79},"end":{"line":168,"column":9},"skip":true}]},"16":{"line":170,"type":"binary-expr","locations":[{"start":{"line":170,"column":41},"end":{"line":170,"column":71},"skip":true},{"start":{"line":170,"column":75},"end":{"line":179,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_documentation */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireExampleJsFromReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"92":1,"95":1,"102":1,"109":1,"110":1,"113":1,"120":1,"121":1,"122":1,"123":1,"124":1,"125":1,"128":1,"133":2,"134":2,"137":1,"144":2,"145":2,"148":1,"155":2,"156":2,"159":1,"166":2,"167":2,"170":1,"177":1,"178":1,"182":1,"183":1}},"/home/travis/build/npmtest/node-npmtest-documentation/lib.npmtest_documentation.js":{"path":"/home/travis/build/npmtest/node-npmtest-documentation/lib.npmtest_documentation.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":58}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":64}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_documentation */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_documentation = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_documentation = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-documentation/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-documentation/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":2,"38":2,"39":2,"40":2,"41":0,"42":2,"43":2,"44":2,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,2],"16":[2,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":2,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":314,"loc":{"start":{"line":314,"column":32},"end":{"line":314,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":325,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":324,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":294,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":302,"column":8},"end":{"line":302,"column":82},"skip":true},"70":{"start":{"line":305,"column":8},"end":{"line":307,"column":9},"skip":true},"71":{"start":{"line":306,"column":12},"end":{"line":306,"column":82},"skip":true},"72":{"start":{"line":309,"column":8},"end":{"line":311,"column":9},"skip":true},"73":{"start":{"line":310,"column":12},"end":{"line":310,"column":18},"skip":true},"74":{"start":{"line":312,"column":8},"end":{"line":312,"column":54},"skip":true},"75":{"start":{"line":313,"column":8},"end":{"line":313,"column":69},"skip":true},"76":{"start":{"line":314,"column":8},"end":{"line":322,"column":36},"skip":true},"77":{"start":{"line":315,"column":12},"end":{"line":315,"column":61},"skip":true},"78":{"start":{"line":316,"column":12},"end":{"line":319,"column":13},"skip":true},"79":{"start":{"line":317,"column":16},"end":{"line":317,"column":75},"skip":true},"80":{"start":{"line":318,"column":16},"end":{"line":318,"column":23},"skip":true},"81":{"start":{"line":320,"column":12},"end":{"line":320,"column":38},"skip":true},"82":{"start":{"line":321,"column":12},"end":{"line":321,"column":27},"skip":true},"83":{"start":{"line":323,"column":8},"end":{"line":323,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":57}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":323,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":295,"type":"binary-expr","locations":[{"start":{"line":295,"column":12},"end":{"line":295,"column":71},"skip":true},{"start":{"line":296,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":302,"type":"binary-expr","locations":[{"start":{"line":302,"column":43},"end":{"line":302,"column":75},"skip":true},{"start":{"line":302,"column":79},"end":{"line":302,"column":81},"skip":true}]},"25":{"line":305,"type":"if","locations":[{"start":{"line":305,"column":8},"end":{"line":305,"column":8},"skip":true},{"start":{"line":305,"column":8},"end":{"line":305,"column":8},"skip":true}]},"26":{"line":309,"type":"if","locations":[{"start":{"line":309,"column":8},"end":{"line":309,"column":8},"skip":true},{"start":{"line":309,"column":8},"end":{"line":309,"column":8},"skip":true}]},"27":{"line":312,"type":"binary-expr","locations":[{"start":{"line":312,"column":27},"end":{"line":312,"column":43},"skip":true},{"start":{"line":312,"column":47},"end":{"line":312,"column":53},"skip":true}]},"28":{"line":316,"type":"if","locations":[{"start":{"line":316,"column":12},"end":{"line":316,"column":12},"skip":true},{"start":{"line":316,"column":12},"end":{"line":316,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-documentation && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_documentation */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_documentation","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_documentation.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        local.assetsDict['/assets.npmtest_documentation.rollup.js'] =","            local.assetsDict['/assets.npmtest_documentation.rollup.js'] ||","            local.fs.readFileSync(","                // buildCustomOrg-hack","                local.npmtest_documentation.__dirname +","                    '/lib.npmtest_documentation.js',","                'utf8'","            ).replace((/^#!/), '//');","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":2,"127":2,"128":2,"129":2,"130":1,"133":2,"134":2,"139":2,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"294":1,"302":1,"305":1,"306":1,"309":1,"310":1,"312":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"320":1,"321":1,"323":1}},"/home/travis/build/npmtest/node-npmtest-documentation/node_modules/documentation/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-documentation/node_modules/documentation/index.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":1,"9":0,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"pipeline","line":28,"loc":{"start":{"line":28,"column":0},"end":{"line":28,"column":20}}},"2":{"name":"(anonymous_2)","line":30,"loc":{"start":{"line":30,"column":9},"end":{"line":30,"column":28}}},"3":{"name":"noop","line":44,"loc":{"start":{"line":44,"column":0},"end":{"line":44,"column":23}}},"4":{"name":"(anonymous_4)","line":71,"loc":{"start":{"line":71,"column":17},"end":{"line":71,"column":55}}},"5":{"name":"(anonymous_5)","line":81,"loc":{"start":{"line":81,"column":35},"end":{"line":81,"column":60}}},"6":{"name":"(anonymous_6)","line":92,"loc":{"start":{"line":92,"column":22},"end":{"line":92,"column":44}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":19,"column":31}},"2":{"start":{"line":28,"column":0},"end":{"line":36,"column":1}},"3":{"start":{"line":29,"column":2},"end":{"line":29,"column":27}},"4":{"start":{"line":30,"column":2},"end":{"line":35,"column":3}},"5":{"start":{"line":31,"column":4},"end":{"line":33,"column":5}},"6":{"start":{"line":32,"column":6},"end":{"line":32,"column":37}},"7":{"start":{"line":34,"column":4},"end":{"line":34,"column":19}},"8":{"start":{"line":44,"column":0},"end":{"line":46,"column":1}},"9":{"start":{"line":45,"column":2},"end":{"line":45,"column":17}},"10":{"start":{"line":71,"column":0},"end":{"line":112,"column":2}},"11":{"start":{"line":72,"column":2},"end":{"line":72,"column":26}},"12":{"start":{"line":74,"column":2},"end":{"line":76,"column":3}},"13":{"start":{"line":75,"column":4},"end":{"line":75,"column":24}},"14":{"start":{"line":78,"column":2},"end":{"line":78,"column":77}},"15":{"start":{"line":79,"column":2},"end":{"line":79,"column":64}},"16":{"start":{"line":81,"column":2},"end":{"line":111,"column":5}},"17":{"start":{"line":82,"column":4},"end":{"line":84,"column":5}},"18":{"start":{"line":83,"column":6},"end":{"line":83,"column":29}},"19":{"start":{"line":85,"column":4},"end":{"line":110,"column":5}},"20":{"start":{"line":86,"column":6},"end":{"line":107,"column":60}},"21":{"start":{"line":93,"column":16},"end":{"line":93,"column":50}},"22":{"start":{"line":109,"column":6},"end":{"line":109,"column":18}},"23":{"start":{"line":114,"column":0},"end":{"line":118,"column":2}}},"branchMap":{"1":{"line":31,"type":"binary-expr","locations":[{"start":{"line":31,"column":20},"end":{"line":31,"column":27}},{"start":{"line":31,"column":31},"end":{"line":31,"column":50}}]},"2":{"line":72,"type":"binary-expr","locations":[{"start":{"line":72,"column":12},"end":{"line":72,"column":19}},{"start":{"line":72,"column":23},"end":{"line":72,"column":25}}]},"3":{"line":74,"type":"if","locations":[{"start":{"line":74,"column":2},"end":{"line":74,"column":2}},{"start":{"line":74,"column":2},"end":{"line":74,"column":2}}]},"4":{"line":78,"type":"cond-expr","locations":[{"start":{"line":78,"column":56},"end":{"line":78,"column":63}},{"start":{"line":78,"column":66},"end":{"line":78,"column":76}}]},"5":{"line":78,"type":"binary-expr","locations":[{"start":{"line":78,"column":17},"end":{"line":78,"column":33}},{"start":{"line":78,"column":37},"end":{"line":78,"column":52}}]},"6":{"line":79,"type":"cond-expr","locations":[{"start":{"line":79,"column":37},"end":{"line":79,"column":45}},{"start":{"line":79,"column":48},"end":{"line":79,"column":63}}]},"7":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":4},"end":{"line":82,"column":4}},{"start":{"line":82,"column":4},"end":{"line":82,"column":4}}]},"8":{"line":88,"type":"cond-expr","locations":[{"start":{"line":88,"column":46},"end":{"line":88,"column":48}},{"start":{"line":88,"column":51},"end":{"line":88,"column":60}}]},"9":{"line":88,"type":"binary-expr","locations":[{"start":{"line":88,"column":11},"end":{"line":88,"column":26}},{"start":{"line":88,"column":30},"end":{"line":88,"column":42}}]},"10":{"line":104,"type":"cond-expr","locations":[{"start":{"line":104,"column":33},"end":{"line":104,"column":39}},{"start":{"line":104,"column":42},"end":{"line":104,"column":46}}]}},"code":["'use strict';","","var sort = require('./lib/sort'),","  nest = require('./lib/nest'),","  filterAccess = require('./lib/filter_access'),","  filterJS = require('./lib/filter_js'),","  dependency = require('./lib/input/dependency'),","  shallow = require('./lib/input/shallow'),","  parseJavaScript = require('./lib/parsers/javascript'),","  polyglot = require('./lib/parsers/polyglot'),","  github = require('./lib/github'),","  hierarchy = require('./lib/hierarchy'),","  inferName = require('./lib/infer/name'),","  inferKind = require('./lib/infer/kind'),","  inferParams = require('./lib/infer/params'),","  inferProperties = require('./lib/infer/properties'),","  inferMembership = require('./lib/infer/membership'),","  inferReturn = require('./lib/infer/return'),","  lint = require('./lib/lint');","","/**"," * Build a pipeline of comment handlers."," * @param {...Function} args - Pipeline elements. Each is a function that accepts"," *  a comment and can return a comment or undefined (to drop that comment)."," * @returns {Function} pipeline"," * @private"," */","function pipeline() {","  var elements = arguments;","  return function (comment) {","    for (var i = 0; comment && i < elements.length; i++) {","      comment = elements[i](comment);","    }","    return comment;","  }","}","","/**"," * A comment handler that returns the comment unchanged."," * @param {Object} comment parsed comment"," * @returns {Object} comment"," * @private"," */","function noop(comment) {","  return comment;","}","","/**"," * Generate JavaScript documentation as a list of parsed JSDoc"," * comments, given a root file as a path."," *"," * @name documentation"," * @param {Array<string>|string} indexes files to process"," * @param {Object} options options"," * @param {Array<string>} options.external a string regex / glob match pattern"," * that defines what external modules will be whitelisted and included in the"," * generated documentation."," * @param {Array<string>} options.transform source transforms given as strings"," * passed to [the module-deps transform option](https://github.com/substack/module-deps)"," * @param {boolean} [options.polyglot=false] parse comments with a regex rather than"," * a proper parser. This enables support of non-JavaScript languages but"," * reduces documentation's ability to infer structure of code."," * @param {boolean} [options.shallow=false] whether to avoid dependency parsing"," * even in JavaScript code. With the polyglot option set, this has no effect."," * @param {Array<string|Object>} [options.order=[]] optional array that"," * defines sorting order of documentation"," * @param {Function} callback to be called when the documentation generation"," * is complete, with (err, result) argumentsj"," * @returns {undefined} calls callback"," */","module.exports = function (indexes, options, callback) {","  options = options || {};","","  if (typeof indexes === 'string') {","    indexes = [indexes];","  }","","  var inputFn = (options.polyglot || options.shallow) ? shallow : dependency;","  var parseFn = (options.polyglot) ? polyglot : parseJavaScript;","","  return inputFn(indexes, options, function (error, inputs) {","    if (error) {","      return callback(error);","    }","    try {","      callback(null,","        filterAccess(","          (options.private || options.lint) ? [] : undefined,","          hierarchy(","            inputs","              .filter(filterJS)","              .reduce(function (memo, file) {","                return memo.concat(parseFn(file));","              }, [])","              .map(pipeline(","                lint.lint,","                inferName(),","                inferKind(),","                inferParams(),","                inferProperties(),","                inferReturn(),","                inferMembership(),","                nest,","                options.github ? github : noop","              ))","              .filter(Boolean)","              .sort(sort.bind(undefined, options.order)))));","    } catch (e) {","      callback(e);","    }","  });","};","","module.exports.formats = {","  html: require('./lib/output/html'),","  md: require('./lib/output/markdown'),","  json: require('./lib/output/json')","};",""],"l":{"3":1,"28":1,"29":0,"30":0,"31":0,"32":0,"34":0,"44":1,"45":0,"71":1,"72":0,"74":0,"75":0,"78":0,"79":0,"81":0,"82":0,"83":0,"85":0,"86":0,"93":0,"109":0,"114":1}},"/home/travis/build/npmtest/node-npmtest-documentation/node_modules/documentation/lib/sort.js":{"path":"/home/travis/build/npmtest/node-npmtest-documentation/node_modules/documentation/lib/sort.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"getSortKey","line":13,"loc":{"start":{"line":13,"column":0},"end":{"line":13,"column":36}}},"2":{"name":"sortDocs","line":34,"loc":{"start":{"line":34,"column":17},"end":{"line":34,"column":48}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":21,"column":1}},"2":{"start":{"line":14,"column":2},"end":{"line":14,"column":49}},"3":{"start":{"line":16,"column":2},"end":{"line":18,"column":3}},"4":{"start":{"line":17,"column":4},"end":{"line":17,"column":30}},"5":{"start":{"line":20,"column":2},"end":{"line":20,"column":13}},"6":{"start":{"line":34,"column":0},"end":{"line":49,"column":2}},"7":{"start":{"line":35,"column":2},"end":{"line":35,"column":27}},"8":{"start":{"line":36,"column":2},"end":{"line":36,"column":27}},"9":{"start":{"line":38,"column":2},"end":{"line":40,"column":3}},"10":{"start":{"line":39,"column":4},"end":{"line":39,"column":17}},"11":{"start":{"line":41,"column":2},"end":{"line":43,"column":3}},"12":{"start":{"line":42,"column":4},"end":{"line":42,"column":14}},"13":{"start":{"line":44,"column":2},"end":{"line":46,"column":3}},"14":{"start":{"line":45,"column":4},"end":{"line":45,"column":13}},"15":{"start":{"line":48,"column":2},"end":{"line":48,"column":28}}},"branchMap":{"1":{"line":14,"type":"binary-expr","locations":[{"start":{"line":14,"column":12},"end":{"line":14,"column":24}},{"start":{"line":14,"column":28},"end":{"line":14,"column":48}}]},"2":{"line":16,"type":"if","locations":[{"start":{"line":16,"column":2},"end":{"line":16,"column":2}},{"start":{"line":16,"column":2},"end":{"line":16,"column":2}}]},"3":{"line":16,"type":"binary-expr","locations":[{"start":{"line":16,"column":6},"end":{"line":16,"column":11}},{"start":{"line":16,"column":15},"end":{"line":16,"column":40}}]},"4":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":2},"end":{"line":38,"column":2}},{"start":{"line":38,"column":2},"end":{"line":38,"column":2}}]},"5":{"line":38,"type":"binary-expr","locations":[{"start":{"line":38,"column":6},"end":{"line":38,"column":27}},{"start":{"line":38,"column":31},"end":{"line":38,"column":52}}]},"6":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":2},"end":{"line":41,"column":2}},{"start":{"line":41,"column":2},"end":{"line":41,"column":2}}]},"7":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":2},"end":{"line":44,"column":2}},{"start":{"line":44,"column":2},"end":{"line":44,"column":2}}]}},"code":["'use strict';","","/**"," * Given a comment, get its sorting key: this is either the comment's"," * name tag, or a hardcoded sorting index given by a user-provided"," * `order` array."," *"," * @param {Object} comment parsed documentation object"," * @param {Array<string>} [order=[]] an optional list of namepaths"," * @returns {string} sortable key"," * @private"," */","function getSortKey(comment, order) {","  var key = comment.name || comment.context.file;","","  if (order && order.indexOf(key) !== -1) {","    return order.indexOf(key);","  }","","  return key;","}","","/**"," * Sort two documentation objects, given an optional order object. Returns"," * a numeric sorting value that is compatible with stream-sort."," *"," * @param {Array<string>} order an array of namepaths that will be sorted"," * in the order given."," * @param {Object} a documentation object"," * @param {Object} b documentation object"," * @return {number} sorting value"," * @private"," */","module.exports = function sortDocs(order, a, b) {","  a = getSortKey(a, order);","  b = getSortKey(b, order);","","  if (typeof a === 'number' && typeof b === 'number') {","    return a - b;","  }","  if (typeof a === 'number') {","    return -1;","  }","  if (typeof b === 'number') {","    return 1;","  }","","  return a.localeCompare(b);","};",""],"l":{"13":1,"14":0,"16":0,"17":0,"20":0,"34":1,"35":0,"36":0,"38":0,"39":0,"41":0,"42":0,"44":0,"45":0,"48":0}},"/home/travis/build/npmtest/node-npmtest-documentation/node_modules/documentation/lib/nest.js":{"path":"/home/travis/build/npmtest/node-npmtest-documentation/node_modules/documentation/lib/nest.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":1,"21":0,"22":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"nestTag","line":3,"loc":{"start":{"line":3,"column":0},"end":{"line":3,"column":43}}},"2":{"name":"(anonymous_2)","line":11,"loc":{"start":{"line":11,"column":26},"end":{"line":11,"column":41}}},"3":{"name":"(anonymous_3)","line":14,"loc":{"start":{"line":14,"column":14},"end":{"line":14,"column":30}}},"4":{"name":"nest","line":51,"loc":{"start":{"line":51,"column":0},"end":{"line":51,"column":23}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":37,"column":1}},"2":{"start":{"line":4,"column":2},"end":{"line":6,"column":3}},"3":{"start":{"line":5,"column":4},"end":{"line":5,"column":19}},"4":{"start":{"line":8,"column":2},"end":{"line":9,"column":15}},"5":{"start":{"line":11,"column":2},"end":{"line":32,"column":5}},"6":{"start":{"line":12,"column":4},"end":{"line":12,"column":26}},"7":{"start":{"line":13,"column":4},"end":{"line":16,"column":9}},"8":{"start":{"line":15,"column":8},"end":{"line":15,"column":37}},"9":{"start":{"line":17,"column":4},"end":{"line":31,"column":5}},"10":{"start":{"line":18,"column":6},"end":{"line":18,"column":55}},"11":{"start":{"line":19,"column":6},"end":{"line":26,"column":7}},"12":{"start":{"line":20,"column":8},"end":{"line":23,"column":11}},"13":{"start":{"line":24,"column":8},"end":{"line":24,"column":25}},"14":{"start":{"line":25,"column":8},"end":{"line":25,"column":15}},"15":{"start":{"line":27,"column":6},"end":{"line":27,"column":50}},"16":{"start":{"line":28,"column":6},"end":{"line":28,"column":34}},"17":{"start":{"line":30,"column":6},"end":{"line":30,"column":23}},"18":{"start":{"line":34,"column":2},"end":{"line":34,"column":27}},"19":{"start":{"line":36,"column":2},"end":{"line":36,"column":17}},"20":{"start":{"line":51,"column":0},"end":{"line":54,"column":1}},"21":{"start":{"line":52,"column":2},"end":{"line":53,"column":30}},"22":{"start":{"line":56,"column":0},"end":{"line":56,"column":22}}},"branchMap":{"1":{"line":4,"type":"if","locations":[{"start":{"line":4,"column":2},"end":{"line":4,"column":2}},{"start":{"line":4,"column":2},"end":{"line":4,"column":2}}]},"2":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":15},"end":{"line":15,"column":19}},{"start":{"line":15,"column":23},"end":{"line":15,"column":36}}]},"3":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":4},"end":{"line":17,"column":4}},{"start":{"line":17,"column":4},"end":{"line":17,"column":4}}]},"4":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":6},"end":{"line":19,"column":6}},{"start":{"line":19,"column":6},"end":{"line":19,"column":6}}]},"5":{"line":27,"type":"binary-expr","locations":[{"start":{"line":27,"column":26},"end":{"line":27,"column":43}},{"start":{"line":27,"column":47},"end":{"line":27,"column":49}}]}},"code":["'use strict';","","function nestTag(comment, tagName, target) {","  if (!comment[target]) {","    return comment;","  }","","  var result = [],","    index = {};","","  comment[target].forEach(function (tag) {","    index[tag.name] = tag;","    var parts = tag.name.split(/(\\[\\])?\\./)","      .filter(function (part) {","        return part && part !== '[]';","      });","    if (parts.length > 1) {","      var parent = index[parts.slice(0, -1).join('.')];","      if (parent === undefined) {","        comment.errors.push({","          message: '@' + tagName + ' ' + tag.name + '\\'s parent ' + parts[0] + ' not found',","          commentLineNumber: tag.lineNumber","        });","        result.push(tag);","        return;","      }","      parent.properties = parent.properties || [];","      parent.properties.push(tag);","    } else {","      result.push(tag);","    }","  });","","  comment[target] = result;","","  return comment;","}","","/**"," * Nests"," * [parameters with properties](http://usejsdoc.org/tags-param.html#parameters-with-properties)."," *"," * A parameter `employee.name` will be attached to the parent parameter `employee` in"," * a `properties` array."," *"," * This assumes that incoming comments have been flattened."," *"," * @param {Object} comment input comment"," * @return {Object} nested comment"," */","function nest(comment) {","  return nestTag(nestTag(comment, 'param', 'params'),","    'property', 'properties');","}","","module.exports = nest;",""],"l":{"3":1,"4":0,"5":0,"8":0,"11":0,"12":0,"13":0,"15":0,"17":0,"18":0,"19":0,"20":0,"24":0,"25":0,"27":0,"28":0,"30":0,"34":0,"36":0,"51":1,"52":0,"56":1}},"/home/travis/build/npmtest/node-npmtest-documentation/node_modules/documentation/lib/filter_access.js":{"path":"/home/travis/build/npmtest/node-npmtest-documentation/node_modules/documentation/lib/filter_access.js","s":{"1":1,"2":1,"3":0,"4":1,"5":0,"6":1,"7":0,"8":0,"9":0,"10":1},"b":{"1":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"filterAccess","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":40}}},"2":{"name":"filter","line":18,"loc":{"start":{"line":18,"column":2},"end":{"line":18,"column":27}}},"3":{"name":"recurse","line":22,"loc":{"start":{"line":22,"column":2},"end":{"line":22,"column":28}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":29}},"2":{"start":{"line":15,"column":0},"end":{"line":29,"column":1}},"3":{"start":{"line":16,"column":2},"end":{"line":16,"column":33}},"4":{"start":{"line":18,"column":2},"end":{"line":20,"column":3}},"5":{"start":{"line":19,"column":4},"end":{"line":19,"column":49}},"6":{"start":{"line":22,"column":2},"end":{"line":26,"column":3}},"7":{"start":{"line":23,"column":4},"end":{"line":25,"column":5}},"8":{"start":{"line":24,"column":6},"end":{"line":24,"column":69}},"9":{"start":{"line":28,"column":2},"end":{"line":28,"column":48}},"10":{"start":{"line":31,"column":0},"end":{"line":31,"column":30}}},"branchMap":{"1":{"line":16,"type":"binary-expr","locations":[{"start":{"line":16,"column":11},"end":{"line":16,"column":17}},{"start":{"line":16,"column":21},"end":{"line":16,"column":32}}]}},"code":["'use strict';","","var walk = require('./walk');","","/**"," * Exclude given access levels from the generated documentation: this allows"," * users to write documentation for non-public members by using the"," * `@private` tag."," *"," * @public"," * @param {Array<string>} [levels=['private']] excluded access levels."," * @param {Array<Object>} comments parsed comments (can be nested)"," * @return {Array<Object>} filtered comments"," */","function filterAccess(levels, comments) {","  levels = levels || ['private'];","","  function filter(comment) {","    return levels.indexOf(comment.access) === -1;","  }","","  function recurse(comment) {","    for (var scope in comment.members) {","      comment.members[scope] = comment.members[scope].filter(filter);","    }","  }","","  return walk(comments.filter(filter), recurse);","}","","module.exports = filterAccess;",""],"l":{"3":1,"15":1,"16":0,"18":1,"19":0,"22":1,"23":0,"24":0,"28":0,"31":1}},"/home/travis/build/npmtest/node-npmtest-documentation/node_modules/documentation/lib/walk.js":{"path":"/home/travis/build/npmtest/node-npmtest-documentation/node_modules/documentation/lib/walk.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":1},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"walk","line":9,"loc":{"start":{"line":9,"column":0},"end":{"line":9,"column":28}}},"2":{"name":"(anonymous_2)","line":10,"loc":{"start":{"line":10,"column":19},"end":{"line":10,"column":38}}}},"statementMap":{"1":{"start":{"line":9,"column":0},"end":{"line":17,"column":1}},"2":{"start":{"line":10,"column":2},"end":{"line":15,"column":5}},"3":{"start":{"line":11,"column":4},"end":{"line":11,"column":16}},"4":{"start":{"line":12,"column":4},"end":{"line":14,"column":5}},"5":{"start":{"line":13,"column":6},"end":{"line":13,"column":39}},"6":{"start":{"line":16,"column":2},"end":{"line":16,"column":18}},"7":{"start":{"line":19,"column":0},"end":{"line":19,"column":22}}},"branchMap":{},"code":["/**"," * Apply a function to all comments within a hierarchy: this iterates"," * through children in the 'members' property."," *"," * @param {Array<Object>} comments an array of nested comments"," * @param {Function} fn a walker function"," * @returns {Array<Object>} comments"," */","function walk(comments, fn) {","  comments.forEach(function (comment) {","    fn(comment);","    for (var scope in comment.members) {","      walk(comment.members[scope], fn);","    }","  });","  return comments;","}","","module.exports = walk;",""],"l":{"9":1,"10":0,"11":0,"12":0,"13":0,"16":0,"19":1}},"/home/travis/build/npmtest/node-npmtest-documentation/node_modules/documentation/lib/filter_js.js":{"path":"/home/travis/build/npmtest/node-npmtest-documentation/node_modules/documentation/lib/filter_js.js","s":{"1":1,"2":0,"3":1},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"filterJS","line":12,"loc":{"start":{"line":12,"column":0},"end":{"line":12,"column":24}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":14,"column":1}},"2":{"start":{"line":13,"column":2},"end":{"line":13,"column":37}},"3":{"start":{"line":16,"column":0},"end":{"line":16,"column":26}}},"branchMap":{},"code":["'use strict';","","/**"," * Node & browserify support requiring JSON files. JSON files can't be documented"," * with JSDoc or parsed with espree, so we filter them out before"," * they reach documentation's machinery."," *"," * @public"," * @param {Object} data a file as an object with 'file' property"," * @return {boolean} whether the file is json"," */","function filterJS(data) {","  return !data.file.match(/\\.json$/);","}","","module.exports = filterJS;",""],"l":{"12":1,"13":0,"16":1}},"/home/travis/build/npmtest/node-npmtest-documentation/node_modules/documentation/lib/input/dependency.js":{"path":"/home/travis/build/npmtest/node-npmtest-documentation/node_modules/documentation/lib/input/dependency.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":1},"b":{"1":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"dependencyStream","line":22,"loc":{"start":{"line":22,"column":0},"end":{"line":22,"column":54}}},"2":{"name":"(anonymous_2)","line":24,"loc":{"start":{"line":24,"column":12},"end":{"line":24,"column":26}}},"3":{"name":"(anonymous_3)","line":33,"loc":{"start":{"line":33,"column":18},"end":{"line":33,"column":35}}},"4":{"name":"(anonymous_4)","line":37,"loc":{"start":{"line":37,"column":19},"end":{"line":37,"column":36}}},"5":{"name":"(anonymous_5)","line":40,"loc":{"start":{"line":40,"column":17},"end":{"line":40,"column":35}}},"6":{"name":"(anonymous_6)","line":41,"loc":{"start":{"line":41,"column":30},"end":{"line":41,"column":47}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":8,"column":54}},"2":{"start":{"line":22,"column":0},"end":{"line":47,"column":1}},"3":{"start":{"line":23,"column":2},"end":{"line":32,"column":5}},"4":{"start":{"line":25,"column":6},"end":{"line":25,"column":66}},"5":{"start":{"line":33,"column":2},"end":{"line":35,"column":5}},"6":{"start":{"line":34,"column":4},"end":{"line":34,"column":34}},"7":{"start":{"line":36,"column":2},"end":{"line":36,"column":11}},"8":{"start":{"line":37,"column":2},"end":{"line":39,"column":5}},"9":{"start":{"line":38,"column":4},"end":{"line":38,"column":27}},"10":{"start":{"line":40,"column":2},"end":{"line":46,"column":6}},"11":{"start":{"line":41,"column":4},"end":{"line":45,"column":8}},"12":{"start":{"line":43,"column":6},"end":{"line":43,"column":57}},"13":{"start":{"line":44,"column":6},"end":{"line":44,"column":18}},"14":{"start":{"line":49,"column":0},"end":{"line":49,"column":34}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":13},"end":{"line":25,"column":31}},{"start":{"line":25,"column":35},"end":{"line":25,"column":65}}]}},"code":["'use strict';","","var mdeps = require('module-deps'),","  fs = require('fs'),","  path = require('path'),","  babelify = require('babelify'),","  concat = require('concat-stream'),","  moduleFilters = require('../../lib/module_filters');","","/**"," * Returns a readable stream of dependencies, given an array of entry"," * points and an object of options to provide to module-deps."," *"," * This stream requires filesystem access, and thus isn't suitable"," * for a browser environment."," *"," * @param {Array<string>} indexes paths to entry files as strings"," * @param {Object} options optional options passed"," * @param {Function} callback called with (err, inputs)"," * @returns {undefined} calls callback"," */","function dependencyStream(indexes, options, callback) {","  var md = mdeps({","    filter: function (id) {","      return !!options.external || moduleFilters.internalOnly(id);","    },","    transform: [babelify.configure({","      sourceMap: false,","      stage: 0","    })],","    postFilter: moduleFilters.externals(indexes, options)","  });","  indexes.forEach(function (index) {","    md.write(path.resolve(index));","  });","  md.end();","  md.once('error', function (error) {","    return callback(error);","  });","  md.pipe(concat(function (inputs) {","    callback(null, inputs.map(function (input) {","      // un-transform babelify transformed source","      input.source = fs.readFileSync(input.file, 'utf8');","      return input","    }));","  }));","}","","module.exports = dependencyStream;",""],"l":{"3":1,"22":1,"23":0,"25":0,"33":0,"34":0,"36":0,"37":0,"38":0,"40":0,"41":0,"43":0,"44":0,"49":1}},"/home/travis/build/npmtest/node-npmtest-documentation/node_modules/documentation/lib/module_filters.js":{"path":"/home/travis/build/npmtest/node-npmtest-documentation/node_modules/documentation/lib/module_filters.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0},"b":{"1":[0,1],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"externalModuleFilter","line":26,"loc":{"start":{"line":26,"column":13},"end":{"line":26,"column":61}}},"2":{"name":"(anonymous_2)","line":30,"loc":{"start":{"line":30,"column":36},"end":{"line":30,"column":53}}},"3":{"name":"matchGlob","line":33,"loc":{"start":{"line":33,"column":15},"end":{"line":33,"column":45}}},"4":{"name":"(anonymous_4)","line":53,"loc":{"start":{"line":53,"column":11},"end":{"line":53,"column":36}}},"5":{"name":"(anonymous_5)","line":57,"loc":{"start":{"line":57,"column":14},"end":{"line":57,"column":27}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":27}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":39}},"3":{"start":{"line":6,"column":0},"end":{"line":9,"column":11}},"4":{"start":{"line":11,"column":0},"end":{"line":62,"column":2}},"5":{"start":{"line":27,"column":4},"end":{"line":27,"column":32}},"6":{"start":{"line":28,"column":4},"end":{"line":51,"column":5}},"7":{"start":{"line":29,"column":6},"end":{"line":29,"column":54}},"8":{"start":{"line":30,"column":6},"end":{"line":50,"column":9}},"9":{"start":{"line":32,"column":8},"end":{"line":32,"column":76}},"10":{"start":{"line":33,"column":8},"end":{"line":49,"column":10}},"11":{"start":{"line":35,"column":10},"end":{"line":37,"column":11}},"12":{"start":{"line":36,"column":12},"end":{"line":36,"column":25}},"13":{"start":{"line":41,"column":10},"end":{"line":45,"column":11}},"14":{"start":{"line":42,"column":12},"end":{"line":42,"column":67}},"15":{"start":{"line":44,"column":12},"end":{"line":44,"column":38}},"16":{"start":{"line":47,"column":10},"end":{"line":47,"column":54}},"17":{"start":{"line":48,"column":10},"end":{"line":48,"column":25}},"18":{"start":{"line":53,"column":4},"end":{"line":60,"column":6}},"19":{"start":{"line":54,"column":6},"end":{"line":54,"column":51}},"20":{"start":{"line":55,"column":6},"end":{"line":59,"column":12}},"21":{"start":{"line":58,"column":10},"end":{"line":58,"column":30}}},"branchMap":{"1":{"line":6,"type":"cond-expr","locations":[{"start":{"line":8,"column":2},"end":{"line":8,"column":13},"skip":true},{"start":{"line":9,"column":2},"end":{"line":9,"column":10}}]},"2":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":4},"end":{"line":28,"column":4}},{"start":{"line":28,"column":4},"end":{"line":28,"column":4}}]},"3":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":10},"end":{"line":35,"column":10}},{"start":{"line":35,"column":10},"end":{"line":35,"column":10}}]},"4":{"line":35,"type":"binary-expr","locations":[{"start":{"line":35,"column":14},"end":{"line":35,"column":19}},{"start":{"line":35,"column":23},"end":{"line":35,"column":27}}]},"5":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":10},"end":{"line":41,"column":10}},{"start":{"line":41,"column":10},"end":{"line":41,"column":10}}]},"6":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":13},"end":{"line":55,"column":21}},{"start":{"line":55,"column":26},"end":{"line":55,"column":41}},{"start":{"line":56,"column":8},"end":{"line":59,"column":10}}]}},"code":["'use strict';","var path = require('path');","var micromatch = require('micromatch');","","// Skip external modules. Based on http://git.io/pzPO.","var internalModuleRegexp = process.platform === 'win32' ?","  /* istanbul ignore next */","  /^(\\.|\\w:)/ :","  /^[\\/.]/;","","module.exports = {","  internalOnly: internalModuleRegexp.test.bind(internalModuleRegexp),","","  /**","   * Create a filter function for use with module-deps, allowing the specified","   * external modules through.","   *","   * @param {Array<string>} indexes - the list of entry points that will be","   * used by module-deps","   * @param {Object} options - An options object with `external` being a","   * micromatch-compaitible glob. *NOTE:* the glob will be matched relative to","   * the top-level node_modules directory for each entry point.","   * @return {function} - A function for use as the module-deps `postFilter`","   * options.","   */","  externals: function externalModuleFilter(indexes, options) {","    var externalFilters = false;","    if (options.external) {","      var test = micromatch.matcher(options.external);","      externalFilters = indexes.map(function (index) {","        // grab the path of the top-level node_modules directory.","        var topNodeModules = path.join(path.dirname(index), 'node_modules');","        return function matchGlob(file, pkg) {","          // if a module is not found, don't include it.","          if (!file || !pkg) {","            return false;","          }","          // if package.json specifies a 'main' script, strip that path off","          // the file to get the module's directory.","          // otherwise, just use the dirname of the file.","          if (pkg.main) {","            file = file.slice(0, -path.normalize(pkg.main).length);","          } else {","            file = path.dirname(file);","          }","          // test the path relative to the top node_modules dir.","          var p = path.relative(topNodeModules, file);","          return test(p);","        };","      });","    }","","    return function (id, file, pkg) {","      var internal = internalModuleRegexp.test(id);","      return internal || (externalFilters &&","        externalFilters","        .some(function (f) {","          return f(file, pkg);","        }));","    };","  }","};","",""],"l":{"2":1,"3":1,"6":1,"11":1,"27":0,"28":0,"29":0,"30":0,"32":0,"33":0,"35":0,"36":0,"41":0,"42":0,"44":0,"47":0,"48":0,"53":0,"54":0,"55":0,"58":0}},"/home/travis/build/npmtest/node-npmtest-documentation/node_modules/documentation/lib/input/shallow.js":{"path":"/home/travis/build/npmtest/node-npmtest-documentation/node_modules/documentation/lib/input/shallow.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":22,"loc":{"start":{"line":22,"column":17},"end":{"line":22,"column":55}}},"2":{"name":"(anonymous_2)","line":23,"loc":{"start":{"line":23,"column":36},"end":{"line":23,"column":53}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":23}},"2":{"start":{"line":22,"column":0},"end":{"line":32,"column":2}},"3":{"start":{"line":23,"column":2},"end":{"line":31,"column":6}},"4":{"start":{"line":24,"column":4},"end":{"line":29,"column":5}},"5":{"start":{"line":25,"column":6},"end":{"line":28,"column":8}},"6":{"start":{"line":30,"column":4},"end":{"line":30,"column":17}}},"branchMap":{"1":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":4},"end":{"line":24,"column":4}},{"start":{"line":24,"column":4},"end":{"line":24,"column":4}}]}},"code":["'use strict';","","var fs = require('fs');","","/**"," * A readable source for content that doesn't do dependency resolution, but"," * simply reads files and pushes them onto a stream."," *"," * If an array of strings is provided as input to this method, then"," * they will be treated as filenames and read into the stream."," *"," * If an array of objects is provided, then we assume that they are valid"," * objects with `source` and `file` properties, and don't use the filesystem"," * at all. This is one way of getting documentation.js to run in a browser"," * or without fs access."," *"," * @param {Array<string|Object>} indexes entry points"," * @param {Object} options parsing options"," * @param {Function} callback called with (err, inputs)"," * @return {undefined} calls callback"," */","module.exports = function (indexes, options, callback) {","  return callback(null, indexes.map(function (index) {","    if (typeof index === 'string') {","      return {","        source: fs.readFileSync(index, 'utf8'),","        file: index","      };","    }","    return index;","  }));","};",""],"l":{"3":1,"22":1,"23":0,"24":0,"25":0,"30":0}},"/home/travis/build/npmtest/node-npmtest-documentation/node_modules/documentation/lib/parsers/javascript.js":{"path":"/home/travis/build/npmtest/node-npmtest-documentation/node_modules/documentation/lib/parsers/javascript.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":1,"7":0,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"parseJavaScript","line":16,"loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":31}}},"2":{"name":"walkComments","line":27,"loc":{"start":{"line":27,"column":2},"end":{"line":27,"column":51}}},"3":{"name":"(anonymous_3)","line":29,"loc":{"start":{"line":29,"column":17},"end":{"line":29,"column":33}}},"4":{"name":"parseComment","line":36,"loc":{"start":{"line":36,"column":8},"end":{"line":36,"column":39}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":7,"column":37}},"2":{"start":{"line":16,"column":0},"end":{"line":84,"column":1}},"3":{"start":{"line":17,"column":2},"end":{"line":17,"column":19}},"4":{"start":{"line":18,"column":2},"end":{"line":23,"column":5}},"5":{"start":{"line":25,"column":2},"end":{"line":25,"column":19}},"6":{"start":{"line":27,"column":2},"end":{"line":77,"column":3}},"7":{"start":{"line":28,"column":4},"end":{"line":76,"column":7}},"8":{"start":{"line":36,"column":8},"end":{"line":68,"column":9}},"9":{"start":{"line":37,"column":10},"end":{"line":40,"column":12}},"10":{"start":{"line":43,"column":10},"end":{"line":43,"column":48}},"11":{"start":{"line":44,"column":10},"end":{"line":67,"column":11}},"12":{"start":{"line":45,"column":12},"end":{"line":45,"column":32}},"13":{"start":{"line":46,"column":12},"end":{"line":65,"column":13}},"14":{"start":{"line":49,"column":14},"end":{"line":52,"column":17}},"15":{"start":{"line":54,"column":14},"end":{"line":57,"column":15}},"16":{"start":{"line":55,"column":16},"end":{"line":56,"column":62}},"17":{"start":{"line":61,"column":14},"end":{"line":64,"column":17}},"18":{"start":{"line":66,"column":12},"end":{"line":66,"column":69}},"19":{"start":{"line":70,"column":8},"end":{"line":72,"column":33}},"20":{"start":{"line":74,"column":8},"end":{"line":74,"column":28}},"21":{"start":{"line":79,"column":2},"end":{"line":79,"column":45}},"22":{"start":{"line":80,"column":2},"end":{"line":80,"column":44}},"23":{"start":{"line":81,"column":2},"end":{"line":81,"column":47}},"24":{"start":{"line":83,"column":2},"end":{"line":83,"column":17}},"25":{"start":{"line":86,"column":0},"end":{"line":86,"column":33}}},"branchMap":{"1":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":10},"end":{"line":44,"column":10}},{"start":{"line":44,"column":10},"end":{"line":44,"column":10}}]},"2":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":12},"end":{"line":46,"column":12}},{"start":{"line":46,"column":12},"end":{"line":46,"column":12}}]},"3":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":14},"end":{"line":54,"column":14}},{"start":{"line":54,"column":14},"end":{"line":54,"column":14}}]},"4":{"line":54,"type":"binary-expr","locations":[{"start":{"line":54,"column":18},"end":{"line":54,"column":29}},{"start":{"line":54,"column":33},"end":{"line":54,"column":49}}]},"5":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":9},"end":{"line":70,"column":25}},{"start":{"line":70,"column":29},"end":{"line":70,"column":31}}]}},"code":["'use strict';","","var babel = require('babel-core'),","  types = require('ast-types'),","  extend = require('extend'),","  isJSDocComment = require('../../lib/is_jsdoc_comment'),","  parse = require('../../lib/parse');","","/**"," * Receives a module-dep item,"," * reads the file, parses the JavaScript, and parses the JSDoc."," *"," * @param {Object} data a chunk of data provided by module-deps"," * @return {Array<Object>} an array of parsed comments"," */","function parseJavaScript(data) {","  var results = [];","  var ast = babel.parse(data.source, {","    code: false,","    stage: 0,","    locations: true,","    ranges: true","  });","","  var visited = {};","","  function walkComments(ast, type, includeContext) {","    types.visit(ast, {","      visitNode: function (path) {","        /**","         * Parse a comment with doctrine and decorate the result with file position and code context.","         *","         * @param {Object} comment the current state of the parsed JSDoc comment","         * @return {undefined} this emits data","         */","        function parseComment(comment) {","          var context = {","            loc: extend({}, path.value.loc),","            file: data.file","          };","          // Avoid visiting the same comment twice as a leading","          // and trailing node","          var key = JSON.stringify(comment.loc);","          if (!visited[key]) {","            visited[key] = true;","            if (includeContext) {","              // This is non-enumerable so that it doesn't get stringified in","              // output; e.g. by the documentation binary.","              Object.defineProperty(context, 'ast', {","                enumerable: false,","                value: path","              });","","              if (path.parent && path.parent.node) {","                context.code = data.source.substring","                  .apply(data.source, path.parent.node.range);","              }","            } else {","              // Avoid the invariant of a comment with no AST by providing","              // an empty one.","              Object.defineProperty(context, 'ast', {","                enumerable: false,","                value: {}","              });","            }","            results.push(parse(comment.value, comment.loc, context));","          }","        }","","        (path.value[type] || [])","          .filter(isJSDocComment)","          .forEach(parseComment);","","        this.traverse(path);","      }","    });","  }","","  walkComments(ast, 'leadingComments', true);","  walkComments(ast, 'innerComments', false);","  walkComments(ast, 'trailingComments', false);","","  return results;","}","","module.exports = parseJavaScript;",""],"l":{"3":1,"16":1,"17":0,"18":0,"25":0,"27":1,"28":0,"36":1,"37":0,"43":0,"44":0,"45":0,"46":0,"49":0,"54":0,"55":0,"61":0,"66":0,"70":0,"74":0,"79":0,"80":0,"81":0,"83":0,"86":1}},"/home/travis/build/npmtest/node-npmtest-documentation/node_modules/documentation/lib/is_jsdoc_comment.js":{"path":"/home/travis/build/npmtest/node-npmtest-documentation/node_modules/documentation/lib/is_jsdoc_comment.js","s":{"1":1,"2":0,"3":0},"b":{"1":[0,0,0,0]},"f":{"1":0},"fnMap":{"1":{"name":"isJSDocComment","line":15,"loc":{"start":{"line":15,"column":17},"end":{"line":15,"column":50}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":20,"column":2}},"2":{"start":{"line":16,"column":2},"end":{"line":16,"column":48}},"3":{"start":{"line":17,"column":2},"end":{"line":19,"column":48}}},"branchMap":{"1":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":10},"end":{"line":17,"column":41}},{"start":{"line":18,"column":4},"end":{"line":18,"column":28}},{"start":{"line":19,"column":7},"end":{"line":19,"column":16}},{"start":{"line":19,"column":20},"end":{"line":19,"column":47}}]}},"code":["'use strict';","","/**"," * Detect whether a comment is a JSDoc comment: it must be a block"," * comment which starts with two asterisks, not any other number of asterisks."," *"," * The code parser automatically strips out the first asterisk that's"," * required for the comment to be a comment at all, so we count the remaining"," * comments."," *"," * @name isJSDocComment"," * @param {Object} comment an ast-types node of the comment"," * @return {boolean} whether it is valid"," */","module.exports = function isJSDocComment(comment) {","  var asterisks = comment.value.match(/^(\\*+)/);","  return (comment.type === 'CommentBlock' || // estree","    comment.type === 'Block') // get-comments / traditional","    && asterisks && asterisks[ 1 ].length === 1;","};",""],"l":{"15":1,"16":0,"17":0}},"/home/travis/build/npmtest/node-npmtest-documentation/node_modules/documentation/lib/parse.js":{"path":"/home/travis/build/npmtest/node-npmtest-documentation/node_modules/documentation/lib/parse.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"parseJSDoc","line":18,"loc":{"start":{"line":18,"column":0},"end":{"line":18,"column":43}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":37}},"2":{"start":{"line":18,"column":0},"end":{"line":48,"column":1}},"3":{"start":{"line":19,"column":2},"end":{"line":28,"column":5}},"4":{"start":{"line":30,"column":2},"end":{"line":30,"column":19}},"5":{"start":{"line":31,"column":2},"end":{"line":31,"column":27}},"6":{"start":{"line":32,"column":2},"end":{"line":32,"column":21}},"7":{"start":{"line":34,"column":2},"end":{"line":34,"column":12}},"8":{"start":{"line":35,"column":2},"end":{"line":45,"column":3}},"9":{"start":{"line":36,"column":4},"end":{"line":36,"column":29}},"10":{"start":{"line":37,"column":4},"end":{"line":44,"column":5}},"11":{"start":{"line":38,"column":6},"end":{"line":40,"column":7}},"12":{"start":{"line":39,"column":8},"end":{"line":39,"column":42}},"13":{"start":{"line":41,"column":6},"end":{"line":41,"column":31}},"14":{"start":{"line":43,"column":6},"end":{"line":43,"column":10}},"15":{"start":{"line":47,"column":2},"end":{"line":47,"column":36}},"16":{"start":{"line":50,"column":0},"end":{"line":50,"column":28}}},"branchMap":{"1":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":4},"end":{"line":37,"column":4}},{"start":{"line":37,"column":4},"end":{"line":37,"column":4}}]}},"code":["'use strict';","","var doctrine = require('doctrine'),","  flatten = require('./flatten'),","  normalize = require('./normalize');","","/**"," * Parse a comment with doctrine, decorate the result with file position and code"," * context, handle parsing errors, and fix up various infelicities in the structure"," * outputted by doctrine."," *"," * @param {string} comment input to be parsed"," * @param {Object} loc location of the input"," * @param {Object} context code context of the input"," * @return {Object} an object conforming to the"," * [documentation JSON API](https://github.com/documentationjs/api-json) schema"," */","function parseJSDoc(comment, loc, context) {","  var result = doctrine.parse(comment, {","    // have doctrine itself remove the comment asterisks from content","    unwrap: true,","    // enable parsing of optional parameters in brackets, JSDoc3 style","    sloppy: true,","    // `recoverable: true` is the only way to get error information out","    recoverable: true,","    // include line numbers","    lineNumbers: true","  });","","  result.loc = loc;","  result.context = context;","  result.errors = [];","","  var i = 0;","  while (i < result.tags.length) {","    var tag = result.tags[i];","    if (tag.errors) {","      for (var j = 0; j < tag.errors.length; j++) {","        result.errors.push(tag.errors[j]);","      }","      result.tags.splice(i, 1);","    } else {","      i++;","    }","  }","","  return flatten(normalize(result));","}","","module.exports = parseJSDoc;",""],"l":{"3":1,"18":1,"19":0,"30":0,"31":0,"32":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"41":0,"43":0,"47":0,"50":1}},"/home/travis/build/npmtest/node-npmtest-documentation/node_modules/documentation/lib/flatten.js":{"path":"/home/travis/build/npmtest/node-npmtest-documentation/node_modules/documentation/lib/flatten.js","s":{"1":1,"2":1,"3":0,"4":1,"5":0,"6":1,"7":0,"8":0,"9":0,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":1,"39":0,"40":0,"41":0,"42":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0},"fnMap":{"1":{"name":"flattenName","line":5,"loc":{"start":{"line":5,"column":0},"end":{"line":5,"column":34}}},"2":{"name":"flattenDescription","line":9,"loc":{"start":{"line":9,"column":0},"end":{"line":9,"column":41}}},"3":{"name":"flattenTypedName","line":13,"loc":{"start":{"line":13,"column":0},"end":{"line":13,"column":39}}},"4":{"name":"(anonymous_4)","line":40,"loc":{"start":{"line":40,"column":10},"end":{"line":40,"column":33}}},"5":{"name":"(anonymous_5)","line":43,"loc":{"start":{"line":43,"column":14},"end":{"line":43,"column":37}}},"6":{"name":"(anonymous_6)","line":49,"loc":{"start":{"line":49,"column":11},"end":{"line":49,"column":34}}},"7":{"name":"(anonymous_7)","line":55,"loc":{"start":{"line":55,"column":12},"end":{"line":55,"column":35}}},"8":{"name":"(anonymous_8)","line":61,"loc":{"start":{"line":61,"column":13},"end":{"line":61,"column":36}}},"9":{"name":"(anonymous_9)","line":67,"loc":{"start":{"line":67,"column":14},"end":{"line":67,"column":37}}},"10":{"name":"(anonymous_10)","line":73,"loc":{"start":{"line":73,"column":13},"end":{"line":73,"column":36}}},"11":{"name":"(anonymous_11)","line":79,"loc":{"start":{"line":79,"column":12},"end":{"line":79,"column":30}}},"12":{"name":"(anonymous_12)","line":82,"loc":{"start":{"line":82,"column":12},"end":{"line":82,"column":30}}},"13":{"name":"(anonymous_13)","line":85,"loc":{"start":{"line":85,"column":14},"end":{"line":85,"column":32}}},"14":{"name":"(anonymous_14)","line":88,"loc":{"start":{"line":88,"column":11},"end":{"line":88,"column":29}}},"15":{"name":"(anonymous_15)","line":91,"loc":{"start":{"line":91,"column":12},"end":{"line":91,"column":35}}},"16":{"name":"(anonymous_16)","line":94,"loc":{"start":{"line":94,"column":12},"end":{"line":94,"column":30}}},"17":{"name":"(anonymous_17)","line":97,"loc":{"start":{"line":97,"column":15},"end":{"line":97,"column":33}}},"18":{"name":"(anonymous_18)","line":100,"loc":{"start":{"line":100,"column":13},"end":{"line":100,"column":31}}},"19":{"name":"(anonymous_19)","line":152,"loc":{"start":{"line":152,"column":17},"end":{"line":152,"column":36}}},"20":{"name":"(anonymous_20)","line":155,"loc":{"start":{"line":155,"column":23},"end":{"line":155,"column":38}}},"21":{"name":"(anonymous_21)","line":156,"loc":{"start":{"line":156,"column":30},"end":{"line":156,"column":42}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":31}},"2":{"start":{"line":5,"column":0},"end":{"line":7,"column":1}},"3":{"start":{"line":6,"column":2},"end":{"line":6,"column":31}},"4":{"start":{"line":9,"column":0},"end":{"line":11,"column":1}},"5":{"start":{"line":10,"column":2},"end":{"line":10,"column":38}},"6":{"start":{"line":13,"column":0},"end":{"line":21,"column":1}},"7":{"start":{"line":14,"column":2},"end":{"line":16,"column":4}},"8":{"start":{"line":18,"column":2},"end":{"line":20,"column":3}},"9":{"start":{"line":19,"column":4},"end":{"line":19,"column":38}},"10":{"start":{"line":23,"column":0},"end":{"line":103,"column":2}},"11":{"start":{"line":41,"column":4},"end":{"line":41,"column":27}},"12":{"start":{"line":44,"column":4},"end":{"line":46,"column":5}},"13":{"start":{"line":45,"column":6},"end":{"line":45,"column":29}},"14":{"start":{"line":47,"column":4},"end":{"line":47,"column":32}},"15":{"start":{"line":50,"column":4},"end":{"line":52,"column":5}},"16":{"start":{"line":51,"column":6},"end":{"line":51,"column":25}},"17":{"start":{"line":53,"column":4},"end":{"line":53,"column":28}},"18":{"start":{"line":56,"column":4},"end":{"line":58,"column":5}},"19":{"start":{"line":57,"column":6},"end":{"line":57,"column":25}},"20":{"start":{"line":59,"column":4},"end":{"line":59,"column":28}},"21":{"start":{"line":62,"column":4},"end":{"line":64,"column":5}},"22":{"start":{"line":63,"column":6},"end":{"line":63,"column":26}},"23":{"start":{"line":65,"column":4},"end":{"line":65,"column":29}},"24":{"start":{"line":68,"column":4},"end":{"line":70,"column":5}},"25":{"start":{"line":69,"column":6},"end":{"line":69,"column":27}},"26":{"start":{"line":71,"column":4},"end":{"line":71,"column":30}},"27":{"start":{"line":74,"column":4},"end":{"line":76,"column":5}},"28":{"start":{"line":75,"column":6},"end":{"line":75,"column":27}},"29":{"start":{"line":77,"column":4},"end":{"line":77,"column":42}},"30":{"start":{"line":80,"column":4},"end":{"line":80,"column":28}},"31":{"start":{"line":83,"column":4},"end":{"line":83,"column":28}},"32":{"start":{"line":86,"column":4},"end":{"line":86,"column":30}},"33":{"start":{"line":89,"column":4},"end":{"line":89,"column":27}},"34":{"start":{"line":92,"column":4},"end":{"line":92,"column":31}},"35":{"start":{"line":95,"column":4},"end":{"line":95,"column":29}},"36":{"start":{"line":98,"column":4},"end":{"line":98,"column":32}},"37":{"start":{"line":101,"column":4},"end":{"line":101,"column":30}},"38":{"start":{"line":152,"column":0},"end":{"line":160,"column":2}},"39":{"start":{"line":153,"column":2},"end":{"line":153,"column":35}},"40":{"start":{"line":155,"column":2},"end":{"line":157,"column":5}},"41":{"start":{"line":156,"column":4},"end":{"line":156,"column":59}},"42":{"start":{"line":159,"column":2},"end":{"line":159,"column":16}}},"branchMap":{"1":{"line":18,"type":"if","locations":[{"start":{"line":18,"column":2},"end":{"line":18,"column":2}},{"start":{"line":18,"column":2},"end":{"line":18,"column":2}}]},"2":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":4},"end":{"line":44,"column":4}},{"start":{"line":44,"column":4},"end":{"line":44,"column":4}}]},"3":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":4},"end":{"line":50,"column":4}},{"start":{"line":50,"column":4},"end":{"line":50,"column":4}}]},"4":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":4},"end":{"line":56,"column":4}},{"start":{"line":56,"column":4},"end":{"line":56,"column":4}}]},"5":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":4},"end":{"line":62,"column":4}},{"start":{"line":62,"column":4},"end":{"line":62,"column":4}}]},"6":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":4},"end":{"line":68,"column":4}},{"start":{"line":68,"column":4},"end":{"line":68,"column":4}}]},"7":{"line":74,"type":"if","locations":[{"start":{"line":74,"column":4},"end":{"line":74,"column":4}},{"start":{"line":74,"column":4},"end":{"line":74,"column":4}}]},"8":{"line":156,"type":"binary-expr","locations":[{"start":{"line":156,"column":5},"end":{"line":156,"column":26}},{"start":{"line":156,"column":30},"end":{"line":156,"column":44}}]}},"code":["'use strict';","","var extend = require('extend');","","function flattenName(result, tag) {","  result[tag.title] = tag.name;","}","","function flattenDescription(result, tag) {","  result[tag.title] = tag.description;","}","","function flattenTypedName(result, tag) {","  result[tag.title] = {","    name: tag.name","  };","","  if (tag.type) {","    result[tag.title].type = tag.type;","  }","}","","var flatteners = {","  'name': flattenName,","  'function': flattenName,","  'mixin': flattenName,","  'memberof': flattenDescription,","  'classdesc': flattenDescription,","  'lends': flattenDescription,","  'event': flattenDescription,","  'external': flattenDescription,","  'file': flattenDescription,","  'callback': flattenDescription,","  'class': flattenTypedName,","  'constant': flattenTypedName,","  'member': flattenTypedName,","  'module': flattenTypedName,","  'namespace': flattenTypedName,","  'typedef': flattenTypedName,","  'kind': function (result, tag) {","    result.kind = tag.kind;","  },","  'property': function (result, tag) {","    if (!result.properties) {","      result.properties = [];","    }","    result.properties.push(tag);","  },","  'param': function (result, tag) {","    if (!result.params) {","      result.params = [];","    }","    result.params.push(tag);","  },","  'throws': function (result, tag) {","    if (!result.throws) {","      result.throws = [];","    }","    result.throws.push(tag);","  },","  'returns': function (result, tag) {","    if (!result.returns) {","      result.returns = [];","    }","    result.returns.push(tag);","  },","  'augments': function (result, tag) {","    if (!result.augments) {","      result.augments = [];","    }","    result.augments.push(tag);","  },","  'example': function (result, tag) {","    if (!result.examples) {","      result.examples = [];","    }","    result.examples.push(tag.description);","  },","  'global': function (result) {","    result.scope = 'global';","  },","  'static': function (result) {","    result.scope = 'static';","  },","  'instance': function (result) {","    result.scope = 'instance';","  },","  'inner': function (result) {","    result.scope = 'inner';","  },","  'access': function (result, tag) {","    result.access = tag.access;","  },","  'public': function (result) {","    result.access = 'public';","  },","  'protected': function (result) {","    result.access = 'protected';","  },","  'private': function (result) {","    result.access = 'private';","  }","};","","/**"," * Flattens tags in an opinionated way."," *"," * The following tags are assumed to be singletons, and are flattened"," * to a top-level property on the result whose value is extracted from"," * the tag:"," *"," *  * `@name`"," *  * `@memberof`"," *  * `@classdesc`"," *  * `@kind`"," *  * `@class`"," *  * `@constant`"," *  * `@event`"," *  * `@external`"," *  * `@file`"," *  * `@function`"," *  * `@member`"," *  * `@mixin`"," *  * `@module`"," *  * `@namespace`"," *  * `@typedef`"," *  * `@access`"," *  * `@lends`"," *"," * The following tags are flattened to a top-level array-valued property:"," *"," *  * `@param` (to `params` property)"," *  * `@property` (to `properties` property)"," *  * `@returns` (to `returns` property)"," *  * `@augments` (to `augments` property)"," *  * `@example` (to `examples` property)"," *  * `@throws` (to `throws` property)"," *"," * The `@global`, `@static`, `@instance`, and `@inner` tags are flattened"," * to a `scope` property whose value is `\"global\"`, `\"static\"`, `\"instance\"`,"," * or `\"inner\"`."," *"," * The `@access`, `@public`, `@protected`, and `@private` tags are flattened"," * to an `access` property whose value is `\"protected\"` or `\"private\"`."," * The assumed default value is `\"public\"`, so `@access public` or `@public`"," * tags result in no `access` property."," *"," * @name flatten"," * @param {Object} comment a parsed comment"," * @return {Object} comment with tags flattened"," */","module.exports = function (comment) {","  var result = extend({}, comment);","","  comment.tags.forEach(function (tag) {","    (flatteners[tag.title] || function () {})(result, tag);","  });","","  return result;","};",""],"l":{"3":1,"5":1,"6":0,"9":1,"10":0,"13":1,"14":0,"18":0,"19":0,"23":1,"41":0,"44":0,"45":0,"47":0,"50":0,"51":0,"53":0,"56":0,"57":0,"59":0,"62":0,"63":0,"65":0,"68":0,"69":0,"71":0,"74":0,"75":0,"77":0,"80":0,"83":0,"86":0,"89":0,"92":0,"95":0,"98":0,"101":0,"152":1,"153":0,"155":0,"156":0,"159":0}},"/home/travis/build/npmtest/node-npmtest-documentation/node_modules/documentation/lib/normalize.js":{"path":"/home/travis/build/npmtest/node-npmtest-documentation/node_modules/documentation/lib/normalize.js","s":{"1":1,"2":1,"3":0,"4":1,"5":1,"6":0,"7":0},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":45,"loc":{"start":{"line":45,"column":17},"end":{"line":45,"column":36}}},"2":{"name":"normalize","line":74,"loc":{"start":{"line":74,"column":0},"end":{"line":74,"column":24}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":31}},"2":{"start":{"line":45,"column":0},"end":{"line":49,"column":2}},"3":{"start":{"line":46,"column":2},"end":{"line":48,"column":5}},"4":{"start":{"line":51,"column":0},"end":{"line":72,"column":2}},"5":{"start":{"line":74,"column":0},"end":{"line":77,"column":1}},"6":{"start":{"line":75,"column":2},"end":{"line":75,"column":38}},"7":{"start":{"line":76,"column":2},"end":{"line":76,"column":65}}},"branchMap":{"1":{"line":76,"type":"cond-expr","locations":[{"start":{"line":76,"column":21},"end":{"line":76,"column":58}},{"start":{"line":76,"column":61},"end":{"line":76,"column":64}}]}},"code":["'use strict';","","var extend = require('extend');","","/**"," * Normalizes synonymous tags to the canonical tag type listed on http://usejsdoc.org/."," *"," * For example, given the input object:"," *"," *     { tags: ["," *       { title: \"virtual\" },"," *       { title: \"return\", ... }"," *     ]}"," *"," * The output object will be:"," *"," *     { tags: ["," *       { title: \"abstract\" },"," *       { title: \"returns\", ... }"," *     ]}"," *"," * The following synonyms are normalized:"," *"," *  * virtual -> abstract"," *  * extends -> augments"," *  * constructor -> class"," *  * const -> constant"," *  * defaultvalue -> default"," *  * desc -> description"," *  * host -> external"," *  * fileoverview, overview -> file"," *  * emits -> fires"," *  * func, method -> function"," *  * var -> member"," *  * arg, argument -> param"," *  * prop -> property"," *  * return -> returns"," *  * exception -> throws"," *  * linkcode, linkplain -> link"," *"," * @name normalize"," * @param {Object} comment parsed comment"," * @return {Object} comment with normalized properties"," */","module.exports = function (comment) {","  return extend({}, comment, {","    tags: comment.tags.map(normalize)","  });","};","","var synonyms = {","  'virtual': 'abstract',","  'extends': 'augments',","  'constructor': 'class',","  'const': 'constant',","  'defaultvalue': 'default',","  'desc': 'description',","  'host': 'external',","  'fileoverview': 'file',","  'overview': 'file',","  'emits': 'fires',","  'func': 'function',","  'method': 'function',","  'var': 'member',","  'arg': 'param',","  'argument': 'param',","  'prop': 'property',","  'return': 'returns',","  'exception': 'throws',","  'linkcode': 'link',","  'linkplain': 'link'","};","","function normalize(tag) {","  var canonical = synonyms[tag.title];","  return canonical ? extend({}, tag, { title: canonical }) : tag;","}",""],"l":{"3":1,"45":1,"46":0,"51":1,"74":1,"75":0,"76":0}},"/home/travis/build/npmtest/node-npmtest-documentation/node_modules/documentation/lib/parsers/polyglot.js":{"path":"/home/travis/build/npmtest/node-npmtest-documentation/node_modules/documentation/lib/parsers/polyglot.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":1},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"parsePolyglot","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":29}}},"2":{"name":"(anonymous_2)","line":18,"loc":{"start":{"line":18,"column":9},"end":{"line":18,"column":28}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":6,"column":37}},"2":{"start":{"line":15,"column":0},"end":{"line":25,"column":1}},"3":{"start":{"line":16,"column":2},"end":{"line":24,"column":7}},"4":{"start":{"line":19,"column":6},"end":{"line":22,"column":8}},"5":{"start":{"line":23,"column":6},"end":{"line":23,"column":56}},"6":{"start":{"line":27,"column":0},"end":{"line":27,"column":31}}},"branchMap":{},"code":["'use strict';","","var getComments = require('get-comments'),","  extend = require('extend'),","  isJSDocComment = require('../../lib/is_jsdoc_comment'),","  parse = require('../../lib/parse');","","/**"," * Documentation stream parser: this receives a module-dep item,"," * reads the file, parses the JavaScript, parses the JSDoc, and"," * emits parsed comments."," * @param {Object} data a chunk of data provided by module-deps"," * @return {Array<Object>} adds to memo"," */","function parsePolyglot(data) {","  return getComments(data.source, true)","    .filter(isJSDocComment)","    .map(function (comment) {","      var context = {","        loc: extend({}, comment.loc),","        file: data.file","      };","      return parse(comment.value, comment.loc, context);","    });","}","","module.exports = parsePolyglot;",""],"l":{"3":1,"15":1,"16":0,"19":0,"23":0,"27":1}},"/home/travis/build/npmtest/node-npmtest-documentation/node_modules/documentation/lib/github.js":{"path":"/home/travis/build/npmtest/node-npmtest-documentation/node_modules/documentation/lib/github.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"getFileRoot","line":7,"loc":{"start":{"line":7,"column":0},"end":{"line":7,"column":27}}},"2":{"name":"(anonymous_2)","line":18,"loc":{"start":{"line":18,"column":17},"end":{"line":18,"column":36}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":27}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":45}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":58}},"4":{"start":{"line":7,"column":0},"end":{"line":9,"column":1}},"5":{"start":{"line":8,"column":2},"end":{"line":8,"column":37}},"6":{"start":{"line":18,"column":0},"end":{"line":27,"column":2}},"7":{"start":{"line":19,"column":2},"end":{"line":19,"column":47}},"8":{"start":{"line":20,"column":2},"end":{"line":20,"column":43}},"9":{"start":{"line":21,"column":2},"end":{"line":21,"column":70}},"10":{"start":{"line":22,"column":2},"end":{"line":25,"column":39}},"11":{"start":{"line":26,"column":2},"end":{"line":26,"column":17}}},"branchMap":{},"code":["'use strict';","","var path = require('path');","var findGit = require('../lib/git/find_git');","var getGithubURLPrefix = require('../lib/git/url_prefix');","","function getFileRoot(file) {","  return path.dirname(findGit(file));","}","","/**"," * Attempts to link code to its place on GitHub."," *"," * @name linkGitHub"," * @param {Object} comment parsed comment"," * @return {Object} comment with github inferred"," */","module.exports = function (comment) {","  var root = getFileRoot(comment.context.file);","  var urlPrefix = getGithubURLPrefix(root);","  comment.context.path = comment.context.file.replace(root + '/', '');","  comment.context.github = urlPrefix +","    comment.context.file.replace(root + '/', '') +","    '#L' + comment.context.loc.start.line + '-' +","    'L' + comment.context.loc.end.line;","  return comment;","};",""],"l":{"3":1,"4":1,"5":1,"7":1,"8":0,"18":1,"19":0,"20":0,"21":0,"22":0,"26":0}},"/home/travis/build/npmtest/node-npmtest-documentation/node_modules/documentation/lib/git/find_git.js":{"path":"/home/travis/build/npmtest/node-npmtest-documentation/node_modules/documentation/lib/git/find_git.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":1},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"findGit","line":12,"loc":{"start":{"line":12,"column":0},"end":{"line":12,"column":27}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":27}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":23}},"3":{"start":{"line":12,"column":0},"end":{"line":20,"column":1}},"4":{"start":{"line":13,"column":2},"end":{"line":13,"column":39}},"5":{"start":{"line":14,"column":2},"end":{"line":19,"column":3}},"6":{"start":{"line":15,"column":4},"end":{"line":15,"column":79}},"7":{"start":{"line":16,"column":4},"end":{"line":18,"column":5}},"8":{"start":{"line":17,"column":6},"end":{"line":17,"column":15}},"9":{"start":{"line":22,"column":0},"end":{"line":22,"column":25}}},"branchMap":{"1":{"line":16,"type":"if","locations":[{"start":{"line":16,"column":4},"end":{"line":16,"column":4}},{"start":{"line":16,"column":4},"end":{"line":16,"column":4}}]}},"code":["'use strict';","","var path = require('path');","var fs = require('fs');","","/**"," * Given a full path to a single file, iterate upwards through the filesystem"," * to find a directory with a .git file indicating that it is a git repository"," * @param {string} filename any file within a repository"," * @returns {string} repository path"," */","function findGit(filename) {","  var paths = filename.split(path.sep);","  for (var i = paths.length; i > 0; i--) {","    var p = path.resolve(paths.slice(0, i).join(path.sep) + path.sep + '.git');","    if (fs.existsSync(p)) {","      return p;","    }","  }","}","","module.exports = findGit;",""],"l":{"3":1,"4":1,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"22":1}},"/home/travis/build/npmtest/node-npmtest-documentation/node_modules/documentation/lib/git/url_prefix.js":{"path":"/home/travis/build/npmtest/node-npmtest-documentation/node_modules/documentation/lib/git/url_prefix.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":1},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"getGithubURLPrefix","line":14,"loc":{"start":{"line":14,"column":0},"end":{"line":14,"column":34}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":23}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":27}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":48}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":51}},"5":{"start":{"line":14,"column":0},"end":{"line":19,"column":1}},"6":{"start":{"line":15,"column":2},"end":{"line":18,"column":55}},"7":{"start":{"line":21,"column":0},"end":{"line":21,"column":36}}},"branchMap":{},"code":["var fs = require('fs');","var path = require('path');","var urlFromGit = require('github-url-from-git');","var getRemoteOrigin = require('remote-origin-url');","","/**"," * Given a a root directory, find its git configuration and figure out"," * the HTTPS URL at the base of that GitHub repository."," *"," * @param {string} root path at the base of this local repo"," * @returns {string} base HTTPS url of the GitHub repository"," * @throws {Error} if the root is not a git repo"," */","function getGithubURLPrefix(root) {","  return urlFromGit(getRemoteOrigin.sync(root)) + '/blob/' +","    fs.readFileSync(path.join(root, '.git',","      fs.readFileSync(path.join(root, '.git', 'HEAD'), 'utf8')","        .match(/ref\\: (.*)/)[1]), 'utf8').trim() + '/';","}","","module.exports = getGithubURLPrefix;",""],"l":{"1":1,"2":1,"3":1,"4":1,"14":1,"15":0,"21":1}},"/home/travis/build/npmtest/node-npmtest-documentation/node_modules/documentation/lib/hierarchy.js":{"path":"/home/travis/build/npmtest/node-npmtest-documentation/node_modules/documentation/lib/hierarchy.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"(anonymous_1)","line":8,"loc":{"start":{"line":8,"column":17},"end":{"line":8,"column":37}}},"2":{"name":"(anonymous_2)","line":17,"loc":{"start":{"line":17,"column":19},"end":{"line":17,"column":38}}},"3":{"name":"(anonymous_3)","line":24,"loc":{"start":{"line":24,"column":13},"end":{"line":24,"column":32}}},"4":{"name":"toComments","line":80,"loc":{"start":{"line":80,"column":2},"end":{"line":80,"column":61}}},"5":{"name":"(anonymous_5)","line":102,"loc":{"start":{"line":102,"column":32},"end":{"line":102,"column":45}}},"6":{"name":"(anonymous_6)","line":107,"loc":{"start":{"line":107,"column":48},"end":{"line":107,"column":63}}}},"statementMap":{"1":{"start":{"line":8,"column":0},"end":{"line":128,"column":2}},"2":{"start":{"line":9,"column":2},"end":{"line":15,"column":6}},"3":{"start":{"line":17,"column":2},"end":{"line":61,"column":5}},"4":{"start":{"line":18,"column":4},"end":{"line":18,"column":18}},"5":{"start":{"line":20,"column":4},"end":{"line":27,"column":5}},"6":{"start":{"line":22,"column":6},"end":{"line":26,"column":11}},"7":{"start":{"line":25,"column":10},"end":{"line":25,"column":37}},"8":{"start":{"line":29,"column":4},"end":{"line":33,"column":5}},"9":{"start":{"line":30,"column":6},"end":{"line":32,"column":9}},"10":{"start":{"line":35,"column":4},"end":{"line":38,"column":7}},"11":{"start":{"line":40,"column":4},"end":{"line":40,"column":20}},"12":{"start":{"line":42,"column":4},"end":{"line":58,"column":5}},"13":{"start":{"line":43,"column":6},"end":{"line":45,"column":26}},"14":{"start":{"line":47,"column":6},"end":{"line":55,"column":7}},"15":{"start":{"line":48,"column":8},"end":{"line":54,"column":10}},"16":{"start":{"line":57,"column":6},"end":{"line":57,"column":39}},"17":{"start":{"line":60,"column":4},"end":{"line":60,"column":32}},"18":{"start":{"line":80,"column":2},"end":{"line":125,"column":3}},"19":{"start":{"line":81,"column":4},"end":{"line":81,"column":27}},"20":{"start":{"line":83,"column":4},"end":{"line":83,"column":22}},"21":{"start":{"line":85,"column":4},"end":{"line":122,"column":5}},"22":{"start":{"line":86,"column":6},"end":{"line":86,"column":29}},"23":{"start":{"line":88,"column":6},"end":{"line":92,"column":7}},"24":{"start":{"line":89,"column":8},"end":{"line":91,"column":69}},"25":{"start":{"line":94,"column":6},"end":{"line":121,"column":7}},"26":{"start":{"line":95,"column":8},"end":{"line":95,"column":39}},"27":{"start":{"line":97,"column":8},"end":{"line":97,"column":29}},"28":{"start":{"line":98,"column":8},"end":{"line":100,"column":9}},"29":{"start":{"line":99,"column":10},"end":{"line":99,"column":55}},"30":{"start":{"line":102,"column":8},"end":{"line":104,"column":32}},"31":{"start":{"line":103,"column":10},"end":{"line":103,"column":24}},"32":{"start":{"line":106,"column":8},"end":{"line":120,"column":9}},"33":{"start":{"line":107,"column":10},"end":{"line":109,"column":16}},"34":{"start":{"line":108,"column":12},"end":{"line":108,"column":43}},"35":{"start":{"line":110,"column":10},"end":{"line":110,"column":83}},"36":{"start":{"line":112,"column":10},"end":{"line":115,"column":13}},"37":{"start":{"line":117,"column":10},"end":{"line":117,"column":29}},"38":{"start":{"line":119,"column":10},"end":{"line":119,"column":31}},"39":{"start":{"line":124,"column":4},"end":{"line":124,"column":18}},"40":{"start":{"line":127,"column":2},"end":{"line":127,"column":41}}},"branchMap":{"1":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":4},"end":{"line":20,"column":4}},{"start":{"line":20,"column":4},"end":{"line":20,"column":4}}]},"2":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":4},"end":{"line":29,"column":4}},{"start":{"line":29,"column":4},"end":{"line":29,"column":4}}]},"3":{"line":36,"type":"binary-expr","locations":[{"start":{"line":36,"column":6},"end":{"line":36,"column":19}},{"start":{"line":36,"column":23},"end":{"line":36,"column":31}}]},"4":{"line":37,"type":"binary-expr","locations":[{"start":{"line":37,"column":6},"end":{"line":37,"column":18}},{"start":{"line":37,"column":23},"end":{"line":37,"column":40}}]},"5":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":6},"end":{"line":47,"column":6}},{"start":{"line":47,"column":6},"end":{"line":47,"column":6}}]},"6":{"line":83,"type":"binary-expr","locations":[{"start":{"line":83,"column":11},"end":{"line":83,"column":15}},{"start":{"line":83,"column":19},"end":{"line":83,"column":21}}]},"7":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":62},"end":{"line":89,"column":66}},{"start":{"line":89,"column":70},"end":{"line":89,"column":76}}]},"8":{"line":91,"type":"cond-expr","locations":[{"start":{"line":91,"column":33},"end":{"line":91,"column":62}},{"start":{"line":91,"column":65},"end":{"line":91,"column":67}}]},"9":{"line":106,"type":"if","locations":[{"start":{"line":106,"column":8},"end":{"line":106,"column":8}},{"start":{"line":106,"column":8},"end":{"line":106,"column":8}}]},"10":{"line":110,"type":"binary-expr","locations":[{"start":{"line":110,"column":39},"end":{"line":110,"column":50}},{"start":{"line":110,"column":54},"end":{"line":110,"column":76}},{"start":{"line":110,"column":81},"end":{"line":110,"column":82}}]}},"code":["'use strict';","","/**"," * @param {Array<Object>} comments an array of parsed comments"," * @returns {Array<Object>} nested comments, with only root comments"," * at the top level."," */","module.exports = function (comments) {","  var id = 0,","    root = {","      members: {","        instance: {},","        static: {}","      }","    };","","  comments.forEach(function (comment) {","    var path = [];","","    if (comment.memberof) {","      // TODO: full namepath parsing","      path = comment.memberof","        .split('.')","        .map(function (segment) {","          return ['static', segment];","        });","    }","","    if (!comment.name) {","      comment.errors.push({","        message: 'could not determine @name for hierarchy'","      });","    }","","    path.push([","      comment.scope || 'static',","      comment.name || ('unknown_' + id++)","    ]);","","    var node = root;","","    while (path.length) {","      var segment = path.shift(),","        scope = segment[0],","        name = segment[1];","","      if (!node.members[scope].hasOwnProperty(name)) {","        node.members[scope][name] = {","          comments: [],","          members: {","            instance: {},","            static: {}","          }","        };","      }","","      node = node.members[scope][name];","    }","","    node.comments.push(comment);","  });","","  /*","   * Massage the hierarchy into a format more suitable for downstream consumers:","   *","   * * Individual top-level scopes are collapsed to a single array","   * * Members at intermediate nodes are copied over to the corresponding comments,","   *   with multisignature comments allowed.","   * * Intermediate nodes without corresponding comments indicate an undefined","   *   @memberof reference. Emit an error, and reparent the offending comment to","   *   the root.","   * * Add paths to each comment, making it possible to generate permalinks","   *   that differentiate between instance functions with the same name but","   *   different `@memberof` values.","   *","   *     Person#say  // the instance method named \"say.\"","   *     Person.say  // the static method named \"say.\"","   *     Person~say  // the inner method named \"say.\"","   */","  function toComments(nodes, root, hasUndefinedParent, path) {","    var result = [], scope;","","    path = path || [];","","    for (var name in nodes) {","      var node = nodes[name];","","      for (scope in node.members) {","        node.members[scope] = toComments(node.members[scope], root || result,","          !node.comments.length,","          node.comments.length ? path.concat(node.comments[0]) : []);","      }","","      for (var i = 0; i < node.comments.length; i++) {","        var comment = node.comments[i];","","        comment.members = {};","        for (scope in node.members) {","          comment.members[scope] = node.members[scope];","        }","","        comment.path = path.map(function (n) {","          return n.name;","        }).concat(comment.name);","","        if (hasUndefinedParent) {","          var memberOfTag = comment.tags.filter(function (tag) {","            return tag.title === 'memberof'","          })[0];","          var memberOfTagLineNumber = (memberOfTag && memberOfTag.lineNumber) || 0;","","          comment.errors.push({","            message: '@memberof reference to ' + comment.memberof + ' not found',","            commentLineNumber: memberOfTagLineNumber","          });","","          root.push(comment);","        } else {","          result.push(comment);","        }","      }","    }","","    return result;","  }","","  return toComments(root.members.static);","};",""],"l":{"8":1,"9":0,"17":0,"18":0,"20":0,"22":0,"25":0,"29":0,"30":0,"35":0,"40":0,"42":0,"43":0,"47":0,"48":0,"57":0,"60":0,"80":1,"81":0,"83":0,"85":0,"86":0,"88":0,"89":0,"94":0,"95":0,"97":0,"98":0,"99":0,"102":0,"103":0,"106":0,"107":0,"108":0,"110":0,"112":0,"117":0,"119":0,"124":0,"127":0}},"/home/travis/build/npmtest/node-npmtest-documentation/node_modules/documentation/lib/infer/name.js":{"path":"/home/travis/build/npmtest/node-npmtest-documentation/node_modules/documentation/lib/infer/name.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"(anonymous_1)","line":14,"loc":{"start":{"line":14,"column":17},"end":{"line":14,"column":29}}},"2":{"name":"inferName","line":15,"loc":{"start":{"line":15,"column":9},"end":{"line":15,"column":37}}},"3":{"name":"(anonymous_3)","line":53,"loc":{"start":{"line":53,"column":17},"end":{"line":53,"column":40}}},"4":{"name":"(anonymous_4)","line":62,"loc":{"start":{"line":62,"column":17},"end":{"line":62,"column":33}}},"5":{"name":"(anonymous_5)","line":66,"loc":{"start":{"line":66,"column":29},"end":{"line":66,"column":45}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":4,"column":40}},"2":{"start":{"line":14,"column":0},"end":{"line":73,"column":2}},"3":{"start":{"line":15,"column":2},"end":{"line":72,"column":4}},"4":{"start":{"line":18,"column":4},"end":{"line":20,"column":5}},"5":{"start":{"line":19,"column":6},"end":{"line":19,"column":21}},"6":{"start":{"line":22,"column":4},"end":{"line":25,"column":5}},"7":{"start":{"line":23,"column":6},"end":{"line":23,"column":35}},"8":{"start":{"line":24,"column":6},"end":{"line":24,"column":21}},"9":{"start":{"line":27,"column":4},"end":{"line":30,"column":5}},"10":{"start":{"line":28,"column":6},"end":{"line":28,"column":38}},"11":{"start":{"line":29,"column":6},"end":{"line":29,"column":21}},"12":{"start":{"line":32,"column":4},"end":{"line":35,"column":5}},"13":{"start":{"line":33,"column":6},"end":{"line":33,"column":40}},"14":{"start":{"line":34,"column":6},"end":{"line":34,"column":21}},"15":{"start":{"line":37,"column":4},"end":{"line":40,"column":5}},"16":{"start":{"line":38,"column":6},"end":{"line":38,"column":81}},"17":{"start":{"line":39,"column":6},"end":{"line":39,"column":21}},"18":{"start":{"line":42,"column":4},"end":{"line":45,"column":5}},"19":{"start":{"line":43,"column":6},"end":{"line":43,"column":42}},"20":{"start":{"line":44,"column":6},"end":{"line":44,"column":21}},"21":{"start":{"line":52,"column":4},"end":{"line":69,"column":7}},"22":{"start":{"line":54,"column":8},"end":{"line":59,"column":9}},"23":{"start":{"line":55,"column":10},"end":{"line":55,"column":36}},"24":{"start":{"line":56,"column":10},"end":{"line":56,"column":23}},"25":{"start":{"line":58,"column":10},"end":{"line":58,"column":30}},"26":{"start":{"line":63,"column":8},"end":{"line":63,"column":41}},"27":{"start":{"line":67,"column":8},"end":{"line":67,"column":50}},"28":{"start":{"line":71,"column":4},"end":{"line":71,"column":19}}},"branchMap":{"1":{"line":18,"type":"if","locations":[{"start":{"line":18,"column":4},"end":{"line":18,"column":4}},{"start":{"line":18,"column":4},"end":{"line":18,"column":4}}]},"2":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":4},"end":{"line":22,"column":4}},{"start":{"line":22,"column":4},"end":{"line":22,"column":4}}]},"3":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":4},"end":{"line":27,"column":4}},{"start":{"line":27,"column":4},"end":{"line":27,"column":4}}]},"4":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":4},"end":{"line":32,"column":4}},{"start":{"line":32,"column":4},"end":{"line":32,"column":4}}]},"5":{"line":32,"type":"binary-expr","locations":[{"start":{"line":32,"column":8},"end":{"line":32,"column":21}},{"start":{"line":32,"column":25},"end":{"line":32,"column":43}}]},"6":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":4},"end":{"line":37,"column":4}},{"start":{"line":37,"column":4},"end":{"line":37,"column":4}}]},"7":{"line":38,"type":"binary-expr","locations":[{"start":{"line":38,"column":21},"end":{"line":38,"column":40}},{"start":{"line":38,"column":44},"end":{"line":38,"column":80}}]},"8":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":4},"end":{"line":42,"column":4}},{"start":{"line":42,"column":4},"end":{"line":42,"column":4}}]},"9":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":8},"end":{"line":54,"column":8}},{"start":{"line":54,"column":8},"end":{"line":54,"column":8}}]},"10":{"line":54,"type":"binary-expr","locations":[{"start":{"line":54,"column":12},"end":{"line":54,"column":17}},{"start":{"line":54,"column":21},"end":{"line":54,"column":31}}]}},"code":["'use strict';","","var types = require('ast-types'),","  pathParse = require('parse-filepath');","","/**"," * Infers a `name` tag from the context,"," * and adopt `@class` and other other tags as implied name tags."," *"," * @name inferName"," * @param {Object} comment parsed comment"," * @returns {Object} comment with name inferred"," */","module.exports = function () {","  return function inferName(comment) {","    // If this comment is already explicitly named, simply pass it","    // through without doing any inference.","    if (comment.name) {","      return comment;","    }","","    if (comment.event) {","      comment.name = comment.event;","      return comment;","    }","","    if (comment.callback) {","      comment.name = comment.callback;","      return comment;","    }","","    if (comment.class && comment.class.name) {","      comment.name = comment.class.name;","      return comment;","    }","","    if (comment.module) {","      comment.name = comment.module.name || pathParse(comment.context.file).name;","      return comment;","    }","","    if (comment.typedef) {","      comment.name = comment.typedef.name;","      return comment;","    }","","    // The strategy here is to do a depth-first traversal of the AST,","    // looking for nodes with a \"name\" property, with exceptions as needed.","    // For example, name inference for a MemberExpression `foo.bar = baz` will","    // infer the named based on the `property` of the MemberExpression (`bar`)","    // rather than the `object` (`foo`).","    types.visit(comment.context.ast, {","      inferName: function (path, value) {","        if (value && value.name) {","          comment.name = value.name;","          this.abort();","        } else {","          this.traverse(path);","        }","      },","","      visitNode: function (path) {","        this.inferName(path, path.value);","      },","","      visitMemberExpression: function (path) {","        this.inferName(path, path.value.property);","      }","    });","","    return comment;","  };","};",""],"l":{"3":1,"14":1,"15":0,"18":0,"19":0,"22":0,"23":0,"24":0,"27":0,"28":0,"29":0,"32":0,"33":0,"34":0,"37":0,"38":0,"39":0,"42":0,"43":0,"44":0,"52":0,"54":0,"55":0,"56":0,"58":0,"63":0,"67":0,"71":0}},"/home/travis/build/npmtest/node-npmtest-documentation/node_modules/documentation/lib/infer/kind.js":{"path":"/home/travis/build/npmtest/node-npmtest-documentation/node_modules/documentation/lib/infer/kind.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0,0,0],"5":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"(anonymous_1)","line":15,"loc":{"start":{"line":15,"column":17},"end":{"line":15,"column":29}}},"2":{"name":"inferKind","line":16,"loc":{"start":{"line":16,"column":9},"end":{"line":16,"column":37}}},"3":{"name":"(anonymous_3)","line":31,"loc":{"start":{"line":31,"column":29},"end":{"line":31,"column":41}}},"4":{"name":"(anonymous_4)","line":35,"loc":{"start":{"line":35,"column":21},"end":{"line":35,"column":37}}},"5":{"name":"(anonymous_5)","line":44,"loc":{"start":{"line":44,"column":22},"end":{"line":44,"column":34}}},"6":{"name":"(anonymous_6)","line":48,"loc":{"start":{"line":48,"column":32},"end":{"line":48,"column":48}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":33}},"2":{"start":{"line":5,"column":0},"end":{"line":6,"column":67}},"3":{"start":{"line":15,"column":0},"end":{"line":60,"column":2}},"4":{"start":{"line":16,"column":2},"end":{"line":59,"column":4}},"5":{"start":{"line":17,"column":4},"end":{"line":19,"column":5}},"6":{"start":{"line":18,"column":6},"end":{"line":18,"column":21}},"7":{"start":{"line":21,"column":4},"end":{"line":28,"column":5}},"8":{"start":{"line":22,"column":6},"end":{"line":22,"column":35}},"9":{"start":{"line":23,"column":6},"end":{"line":27,"column":7}},"10":{"start":{"line":24,"column":8},"end":{"line":24,"column":28}},"11":{"start":{"line":26,"column":8},"end":{"line":26,"column":23}},"12":{"start":{"line":30,"column":4},"end":{"line":56,"column":7}},"13":{"start":{"line":32,"column":8},"end":{"line":32,"column":31}},"14":{"start":{"line":33,"column":8},"end":{"line":33,"column":21}},"15":{"start":{"line":36,"column":8},"end":{"line":42,"column":9}},"16":{"start":{"line":37,"column":10},"end":{"line":37,"column":33}},"17":{"start":{"line":38,"column":10},"end":{"line":38,"column":23}},"18":{"start":{"line":40,"column":10},"end":{"line":40,"column":36}},"19":{"start":{"line":41,"column":10},"end":{"line":41,"column":23}},"20":{"start":{"line":45,"column":8},"end":{"line":45,"column":33}},"21":{"start":{"line":46,"column":8},"end":{"line":46,"column":21}},"22":{"start":{"line":49,"column":8},"end":{"line":54,"column":9}},"23":{"start":{"line":50,"column":10},"end":{"line":50,"column":36}},"24":{"start":{"line":51,"column":10},"end":{"line":51,"column":23}},"25":{"start":{"line":53,"column":10},"end":{"line":53,"column":30}},"26":{"start":{"line":58,"column":4},"end":{"line":58,"column":19}}},"branchMap":{"1":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":4},"end":{"line":17,"column":4}},{"start":{"line":17,"column":4},"end":{"line":17,"column":4}}]},"2":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":6},"end":{"line":23,"column":6}},{"start":{"line":23,"column":6},"end":{"line":23,"column":6}}]},"3":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":8},"end":{"line":36,"column":8}},{"start":{"line":36,"column":8},"end":{"line":36,"column":8}}]},"4":{"line":36,"type":"binary-expr","locations":[{"start":{"line":36,"column":12},"end":{"line":36,"column":22}},{"start":{"line":36,"column":26},"end":{"line":36,"column":39}},{"start":{"line":36,"column":43},"end":{"line":36,"column":61}},{"start":{"line":36,"column":65},"end":{"line":36,"column":100}}]},"5":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":8},"end":{"line":49,"column":8}},{"start":{"line":49,"column":8},"end":{"line":49,"column":8}}]}},"code":["'use strict';","","var types = require('ast-types');","","var kindShorthands = ['class', 'constant', 'event', 'external', 'file',","  'function', 'member', 'mixin', 'module', 'namespace', 'typedef'];","","/**"," * Infers a `kind` tag from other tags or from the context."," *"," * @name inferKind"," * @param {Object} comment parsed comment"," * @returns {Object} comment with kind inferred"," */","module.exports = function () {","  return function inferKind(comment) {","    if (comment.kind) {","      return comment;","    }","","    for (var i = 0; i < kindShorthands.length; i++) {","      var kind = kindShorthands[i];","      if (kind in comment) {","        comment.kind = kind;","        // only allow a comment to have one kind","        return comment;","      }","    }","","    types.visit(comment.context.ast, {","      visitClassDeclaration: function () {","        comment.kind = 'class';","        this.abort();","      },","      visitFunction: function (path) {","        if (path.value && path.value.id && path.value.id.name && !!/^[A-Z]/.exec(path.value.id.name)) {","          comment.kind = 'class';","          this.abort();","        } else {","          comment.kind = 'function';","          this.abort();","        }","      },","      visitTypeAlias: function () {","        comment.kind = 'typedef';","        this.abort();","      },","      visitVariableDeclaration: function (path) {","        if (path.value.kind === 'const') {","          comment.kind = 'constant';","          this.abort();","        } else {","          this.traverse(path);","        }","      }","    });","","    return comment;","  };","};",""],"l":{"3":1,"5":1,"15":1,"16":0,"17":0,"18":0,"21":0,"22":0,"23":0,"24":0,"26":0,"30":0,"32":0,"33":0,"36":0,"37":0,"38":0,"40":0,"41":0,"45":0,"46":0,"49":0,"50":0,"51":0,"53":0,"58":0}},"/home/travis/build/npmtest/node-npmtest-documentation/node_modules/documentation/lib/infer/params.js":{"path":"/home/travis/build/npmtest/node-npmtest-documentation/node_modules/documentation/lib/infer/params.js","s":{"1":1,"2":1,"3":0,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":1,"11":0,"12":1,"13":0,"14":1,"15":0,"16":0,"17":0,"18":0,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":1,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":15,"loc":{"start":{"line":15,"column":17},"end":{"line":15,"column":29}}},"2":{"name":"inferParams","line":16,"loc":{"start":{"line":16,"column":9},"end":{"line":16,"column":39}}},"3":{"name":"paramWithDefaultToDoc","line":28,"loc":{"start":{"line":28,"column":4},"end":{"line":28,"column":42}}},"4":{"name":"destructuringPropertyToDoc","line":47,"loc":{"start":{"line":47,"column":4},"end":{"line":47,"column":53}}},"5":{"name":"destructuringParamToDoc","line":53,"loc":{"start":{"line":53,"column":4},"end":{"line":53,"column":47}}},"6":{"name":"restParamToDoc","line":61,"loc":{"start":{"line":61,"column":4},"end":{"line":61,"column":35}}},"7":{"name":"paramToDoc","line":76,"loc":{"start":{"line":76,"column":4},"end":{"line":76,"column":34}}},"8":{"name":"abort","line":104,"loc":{"start":{"line":104,"column":4},"end":{"line":104,"column":21}}},"9":{"name":"(anonymous_9)","line":110,"loc":{"start":{"line":110,"column":21},"end":{"line":110,"column":37}}},"10":{"name":"(anonymous_10)","line":114,"loc":{"start":{"line":114,"column":59},"end":{"line":114,"column":82}}},"11":{"name":"(anonymous_11)","line":124,"loc":{"start":{"line":124,"column":19},"end":{"line":124,"column":34}}},"12":{"name":"(anonymous_12)","line":147,"loc":{"start":{"line":147,"column":30},"end":{"line":147,"column":46}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":45}},"2":{"start":{"line":15,"column":0},"end":{"line":158,"column":2}},"3":{"start":{"line":16,"column":2},"end":{"line":157,"column":4}},"4":{"start":{"line":28,"column":4},"end":{"line":45,"column":5}},"5":{"start":{"line":29,"column":6},"end":{"line":29,"column":44}},"6":{"start":{"line":30,"column":6},"end":{"line":35,"column":8}},"7":{"start":{"line":37,"column":6},"end":{"line":42,"column":7}},"8":{"start":{"line":38,"column":8},"end":{"line":41,"column":10}},"9":{"start":{"line":44,"column":6},"end":{"line":44,"column":27}},"10":{"start":{"line":47,"column":4},"end":{"line":51,"column":5}},"11":{"start":{"line":48,"column":6},"end":{"line":50,"column":10}},"12":{"start":{"line":53,"column":4},"end":{"line":59,"column":5}},"13":{"start":{"line":54,"column":6},"end":{"line":58,"column":80}},"14":{"start":{"line":61,"column":4},"end":{"line":74,"column":5}},"15":{"start":{"line":62,"column":6},"end":{"line":69,"column":8}},"16":{"start":{"line":70,"column":6},"end":{"line":72,"column":7}},"17":{"start":{"line":71,"column":8},"end":{"line":71,"column":85}},"18":{"start":{"line":73,"column":6},"end":{"line":73,"column":22}},"19":{"start":{"line":76,"column":4},"end":{"line":102,"column":5}},"20":{"start":{"line":78,"column":6},"end":{"line":80,"column":7}},"21":{"start":{"line":79,"column":8},"end":{"line":79,"column":44}},"22":{"start":{"line":82,"column":6},"end":{"line":84,"column":7}},"23":{"start":{"line":83,"column":8},"end":{"line":83,"column":49}},"24":{"start":{"line":86,"column":6},"end":{"line":88,"column":7}},"25":{"start":{"line":87,"column":8},"end":{"line":87,"column":37}},"26":{"start":{"line":90,"column":6},"end":{"line":94,"column":8}},"27":{"start":{"line":97,"column":6},"end":{"line":99,"column":7}},"28":{"start":{"line":98,"column":8},"end":{"line":98,"column":74}},"29":{"start":{"line":101,"column":6},"end":{"line":101,"column":22}},"30":{"start":{"line":104,"column":4},"end":{"line":106,"column":5}},"31":{"start":{"line":105,"column":6},"end":{"line":105,"column":18}},"32":{"start":{"line":108,"column":4},"end":{"line":154,"column":7}},"33":{"start":{"line":114,"column":8},"end":{"line":117,"column":15}},"34":{"start":{"line":115,"column":10},"end":{"line":115,"column":35}},"35":{"start":{"line":116,"column":10},"end":{"line":116,"column":22}},"36":{"start":{"line":119,"column":8},"end":{"line":119,"column":28}},"37":{"start":{"line":120,"column":8},"end":{"line":120,"column":18}},"38":{"start":{"line":122,"column":8},"end":{"line":141,"column":13}},"39":{"start":{"line":125,"column":12},"end":{"line":139,"column":13}},"40":{"start":{"line":127,"column":14},"end":{"line":129,"column":15}},"41":{"start":{"line":128,"column":16},"end":{"line":128,"column":36}},"42":{"start":{"line":131,"column":14},"end":{"line":131,"column":58}},"43":{"start":{"line":132,"column":19},"end":{"line":139,"column":13}},"44":{"start":{"line":136,"column":14},"end":{"line":138,"column":15}},"45":{"start":{"line":137,"column":16},"end":{"line":137,"column":57}},"46":{"start":{"line":140,"column":12},"end":{"line":140,"column":39}},"47":{"start":{"line":146,"column":8},"end":{"line":150,"column":9}},"48":{"start":{"line":147,"column":10},"end":{"line":149,"column":13}},"49":{"start":{"line":148,"column":12},"end":{"line":148,"column":59}},"50":{"start":{"line":152,"column":8},"end":{"line":152,"column":21}},"51":{"start":{"line":156,"column":4},"end":{"line":156,"column":19}}},"branchMap":{"1":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":6},"end":{"line":37,"column":6}},{"start":{"line":37,"column":6},"end":{"line":37,"column":6}}]},"2":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":6},"end":{"line":70,"column":6}},{"start":{"line":70,"column":6},"end":{"line":70,"column":6}}]},"3":{"line":78,"type":"if","locations":[{"start":{"line":78,"column":6},"end":{"line":78,"column":6}},{"start":{"line":78,"column":6},"end":{"line":78,"column":6}}]},"4":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":6},"end":{"line":82,"column":6}},{"start":{"line":82,"column":6},"end":{"line":82,"column":6}}]},"5":{"line":86,"type":"if","locations":[{"start":{"line":86,"column":6},"end":{"line":86,"column":6}},{"start":{"line":86,"column":6},"end":{"line":86,"column":6}}]},"6":{"line":97,"type":"if","locations":[{"start":{"line":97,"column":6},"end":{"line":97,"column":6}},{"start":{"line":97,"column":6},"end":{"line":97,"column":6}}]},"7":{"line":97,"type":"binary-expr","locations":[{"start":{"line":97,"column":10},"end":{"line":97,"column":30}},{"start":{"line":97,"column":34},"end":{"line":97,"column":69}}]},"8":{"line":114,"type":"binary-expr","locations":[{"start":{"line":114,"column":30},"end":{"line":114,"column":44}},{"start":{"line":114,"column":48},"end":{"line":114,"column":50}}]},"9":{"line":125,"type":"if","locations":[{"start":{"line":125,"column":12},"end":{"line":125,"column":12}},{"start":{"line":125,"column":12},"end":{"line":125,"column":12}}]},"10":{"line":127,"type":"if","locations":[{"start":{"line":127,"column":14},"end":{"line":127,"column":14}},{"start":{"line":127,"column":14},"end":{"line":127,"column":14}}]},"11":{"line":132,"type":"if","locations":[{"start":{"line":132,"column":19},"end":{"line":132,"column":19}},{"start":{"line":132,"column":19},"end":{"line":132,"column":19}}]},"12":{"line":136,"type":"if","locations":[{"start":{"line":136,"column":14},"end":{"line":136,"column":14}},{"start":{"line":136,"column":14},"end":{"line":136,"column":14}}]},"13":{"line":146,"type":"if","locations":[{"start":{"line":146,"column":8},"end":{"line":146,"column":8}},{"start":{"line":146,"column":8},"end":{"line":146,"column":8}}]}},"code":["'use strict';","","var types = require('ast-types'),","  extend = require('extend'),","  flowDoctrine = require('../flow_doctrine');","","","/**"," * Infers param tags by reading function parameter names"," *"," * @name inferParams"," * @param {Object} comment parsed comment"," * @returns {Object} comment with parameters"," */","module.exports = function () {","  return function inferParams(comment) {","","    /**","     * Given a parameter like","     *","     *     function a(b = 1)","     *","     * Format it as an optional parameter in JSDoc land","     *","     * @param {Object} param ESTree node","     * @returns {Object} JSDoc param","     */","    function paramWithDefaultToDoc(param) {","      var newParam = paramToDoc(param.left);","      var optionalParam = {","        title: 'param',","        name: newParam.name,","        'default': comment.context.code.substring(","          param.right.start, param.right.end)","      };","","      if (newParam.type) {","        optionalParam.type = {","          type: 'OptionalType',","          expression: newParam.type","        };","      }","","      return optionalParam;","    }","","    function destructuringPropertyToDoc(i, property) {","      return paramToDoc(extend({}, property, {","        name: '$' + i + '.' + property.key.name","      }));","    }","","    function destructuringParamToDoc(param, i) {","      return [{","        title: 'param',","        name: '$' + i,","        type: flowDoctrine(param)","      }].concat(param.properties.map(destructuringPropertyToDoc.bind(null, i)));","    }","","    function restParamToDoc(param) {","      var newParam = {","        title: 'param',","        name: param.argument.name,","        lineNumber: param.loc.start.name,","        type: {","          type: 'RestType'","        }","      };","      if (param.typeAnnotation) {","        newParam.type.expression = flowDoctrine(param.typeAnnotation.typeAnnotation);","      }","      return newParam;","    }","","    function paramToDoc(param, i) {","      // ES6 default","      if (param.type === 'AssignmentPattern') {","        return paramWithDefaultToDoc(param);","      }","","      if (param.type === 'ObjectPattern') {","        return destructuringParamToDoc(param, i);","      }","","      if (param.type === 'RestElement') {","        return restParamToDoc(param);","      }","","      var newParam = {","        title: 'param',","        name: param.name,","        lineNumber: param.loc.start.line","      };","","      // Flow/TS annotations","      if (param.typeAnnotation && param.typeAnnotation.typeAnnotation) {","        newParam.type = flowDoctrine(param.typeAnnotation.typeAnnotation);","      }","","      return newParam;","    }","","    function abort() {","      return false","    }","","    types.visit(comment.context.ast, {","      visitCallExpression: abort,","      visitFunction: function (path) {","","        // Ensure that explicitly specified parameters are not overridden","        // by inferred parameters","        var existingParams = (comment.params || []).reduce(function (memo, param) {","          memo[param.name] = param;","          return memo;","        }, {});","","        var paramOrder = {};","        var i = 0;","","        path.value.params","          .map(paramToDoc)","          .forEach(function (doc) {","            if (existingParams[doc.name] === undefined) {","              // This type is not explicitly documented","              if (!comment.params) {","                comment.params = [];","              }","","              comment.params = comment.params.concat(doc);","            } else if (!existingParams[doc.name].type) {","              // This param has a description, but potentially it can","              // be have an inferred type. Infer its type without","              // dropping the description.","              if (doc.type) {","                existingParams[doc.name].type = doc.type;","              }","            }","            paramOrder[doc.name] = i++;","          });","","        // Ensure that if params are specified partially or in","        // the wrong order, they'll be output in the order","        // they actually appear in code","        if (comment.params) {","          comment.params.sort(function (a, b) {","            return paramOrder[a.name] - paramOrder[b.name];","          });","        }","","        this.abort();","      }","    });","","    return comment;","  };","};",""],"l":{"3":1,"15":1,"16":0,"28":1,"29":0,"30":0,"37":0,"38":0,"44":0,"47":1,"48":0,"53":1,"54":0,"61":1,"62":0,"70":0,"71":0,"73":0,"76":1,"78":0,"79":0,"82":0,"83":0,"86":0,"87":0,"90":0,"97":0,"98":0,"101":0,"104":1,"105":0,"108":0,"114":0,"115":0,"116":0,"119":0,"120":0,"122":0,"125":0,"127":0,"128":0,"131":0,"132":0,"136":0,"137":0,"140":0,"146":0,"147":0,"148":0,"152":0,"156":0}},"/home/travis/build/npmtest/node-npmtest-documentation/node_modules/documentation/lib/flow_doctrine.js":{"path":"/home/travis/build/npmtest/node-npmtest-documentation/node_modules/documentation/lib/flow_doctrine.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"flowDoctrine","line":14,"loc":{"start":{"line":14,"column":0},"end":{"line":14,"column":28}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":6,"column":2}},"2":{"start":{"line":8,"column":0},"end":{"line":12,"column":2}},"3":{"start":{"line":14,"column":0},"end":{"line":59,"column":1}},"4":{"start":{"line":16,"column":2},"end":{"line":21,"column":3}},"5":{"start":{"line":17,"column":4},"end":{"line":20,"column":6}},"6":{"start":{"line":23,"column":2},"end":{"line":25,"column":3}},"7":{"start":{"line":24,"column":4},"end":{"line":24,"column":31}},"8":{"start":{"line":27,"column":2},"end":{"line":32,"column":3}},"9":{"start":{"line":28,"column":4},"end":{"line":31,"column":6}},"10":{"start":{"line":34,"column":2},"end":{"line":39,"column":3}},"11":{"start":{"line":35,"column":4},"end":{"line":38,"column":6}},"12":{"start":{"line":41,"column":2},"end":{"line":58,"column":3}},"13":{"start":{"line":43,"column":4},"end":{"line":52,"column":5}},"14":{"start":{"line":44,"column":6},"end":{"line":51,"column":8}},"15":{"start":{"line":54,"column":4},"end":{"line":57,"column":6}},"16":{"start":{"line":61,"column":0},"end":{"line":61,"column":30}}},"branchMap":{"1":{"line":16,"type":"if","locations":[{"start":{"line":16,"column":2},"end":{"line":16,"column":2}},{"start":{"line":16,"column":2},"end":{"line":16,"column":2}}]},"2":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":2},"end":{"line":23,"column":2}},{"start":{"line":23,"column":2},"end":{"line":23,"column":2}}]},"3":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":2},"end":{"line":27,"column":2}},{"start":{"line":27,"column":2},"end":{"line":27,"column":2}}]},"4":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":2},"end":{"line":34,"column":2}},{"start":{"line":34,"column":2},"end":{"line":34,"column":2}}]},"5":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":2},"end":{"line":41,"column":2}},{"start":{"line":41,"column":2},"end":{"line":41,"column":2}}]},"6":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":4},"end":{"line":43,"column":4}},{"start":{"line":43,"column":4},"end":{"line":43,"column":4}}]}},"code":["var namedTypes = {","  'NumberTypeAnnotation': 'number',","  'BooleanTypeAnnotation': 'boolean',","  'ObjectTypeAnnotation': 'Object',","  'StringTypeAnnotation': 'string'","};","","var oneToOne = {","  'AnyTypeAnnotation': {","    type: 'AllLiteral'","  }","};","","function flowDoctrine(type) {","","  if (type.type in namedTypes) {","    return {","      type: 'NameExpression',","      name: namedTypes[type.type]","    };","  }","","  if (type.type in oneToOne) {","    return oneToOne[type.type];","  }","","  if (type.type === 'NullableTypeAnnotation') {","    return {","      type: 'OptionalType',","      expression: flowDoctrine(type.typeAnnotation)","    };","  }","","  if (type.type === 'UnionTypeAnnotation') {","    return {","      type: 'UnionType',","      elements: type.types.map(flowDoctrine)","    };","  }","","  if (type.type === 'GenericTypeAnnotation') {","","    if (type.typeParameters) {","      return {","        type: 'TypeApplication',","        expression: {","          type: 'NameExpression',","          name: type.id.name","        },","        applications: type.typeParameters.params.map(flowDoctrine)","      };","    }","","    return {","      type: 'NameExpression',","      name: type.id.name","    };","  }","}","","module.exports = flowDoctrine;",""],"l":{"1":1,"8":1,"14":1,"16":0,"17":0,"23":0,"24":0,"27":0,"28":0,"34":0,"35":0,"41":0,"43":0,"44":0,"54":0,"61":1}},"/home/travis/build/npmtest/node-npmtest-documentation/node_modules/documentation/lib/infer/properties.js":{"path":"/home/travis/build/npmtest/node-npmtest-documentation/node_modules/documentation/lib/infer/properties.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"(anonymous_1)","line":14,"loc":{"start":{"line":14,"column":17},"end":{"line":14,"column":29}}},"2":{"name":"prefixedName","line":16,"loc":{"start":{"line":16,"column":2},"end":{"line":16,"column":38}}},"3":{"name":"propertyToDoc","line":23,"loc":{"start":{"line":23,"column":2},"end":{"line":23,"column":43}}},"4":{"name":"inferProperties","line":33,"loc":{"start":{"line":33,"column":9},"end":{"line":33,"column":43}}},"5":{"name":"(anonymous_5)","line":38,"loc":{"start":{"line":38,"column":63},"end":{"line":38,"column":89}}},"6":{"name":"inferProperties","line":43,"loc":{"start":{"line":43,"column":4},"end":{"line":43,"column":44}}},"7":{"name":"(anonymous_7)","line":45,"loc":{"start":{"line":45,"column":33},"end":{"line":45,"column":53}}},"8":{"name":"(anonymous_8)","line":61,"loc":{"start":{"line":61,"column":22},"end":{"line":61,"column":38}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":4,"column":45}},"2":{"start":{"line":14,"column":0},"end":{"line":69,"column":2}},"3":{"start":{"line":16,"column":2},"end":{"line":21,"column":3}},"4":{"start":{"line":17,"column":4},"end":{"line":19,"column":5}},"5":{"start":{"line":18,"column":6},"end":{"line":18,"column":43}},"6":{"start":{"line":20,"column":4},"end":{"line":20,"column":16}},"7":{"start":{"line":23,"column":2},"end":{"line":31,"column":3}},"8":{"start":{"line":24,"column":4},"end":{"line":29,"column":6}},"9":{"start":{"line":30,"column":4},"end":{"line":30,"column":23}},"10":{"start":{"line":33,"column":2},"end":{"line":68,"column":4}},"11":{"start":{"line":38,"column":4},"end":{"line":41,"column":11}},"12":{"start":{"line":39,"column":6},"end":{"line":39,"column":33}},"13":{"start":{"line":40,"column":6},"end":{"line":40,"column":18}},"14":{"start":{"line":43,"column":4},"end":{"line":58,"column":5}},"15":{"start":{"line":44,"column":6},"end":{"line":57,"column":7}},"16":{"start":{"line":45,"column":8},"end":{"line":56,"column":11}},"17":{"start":{"line":46,"column":10},"end":{"line":55,"column":11}},"18":{"start":{"line":47,"column":12},"end":{"line":49,"column":13}},"19":{"start":{"line":48,"column":14},"end":{"line":48,"column":38}},"20":{"start":{"line":50,"column":12},"end":{"line":50,"column":92}},"21":{"start":{"line":52,"column":12},"end":{"line":54,"column":13}},"22":{"start":{"line":53,"column":14},"end":{"line":53,"column":80}},"23":{"start":{"line":60,"column":4},"end":{"line":65,"column":7}},"24":{"start":{"line":62,"column":8},"end":{"line":62,"column":46}},"25":{"start":{"line":63,"column":8},"end":{"line":63,"column":21}},"26":{"start":{"line":67,"column":4},"end":{"line":67,"column":19}}},"branchMap":{"1":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":4},"end":{"line":17,"column":4}},{"start":{"line":17,"column":4},"end":{"line":17,"column":4}}]},"2":{"line":38,"type":"binary-expr","locations":[{"start":{"line":38,"column":30},"end":{"line":38,"column":48}},{"start":{"line":38,"column":52},"end":{"line":38,"column":54}}]},"3":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":6},"end":{"line":44,"column":6}},{"start":{"line":44,"column":6},"end":{"line":44,"column":6}}]},"4":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":10},"end":{"line":46,"column":10}},{"start":{"line":46,"column":10},"end":{"line":46,"column":10}}]},"5":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":12},"end":{"line":47,"column":12}},{"start":{"line":47,"column":12},"end":{"line":47,"column":12}}]},"6":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":12},"end":{"line":52,"column":12}},{"start":{"line":52,"column":12},"end":{"line":52,"column":12}}]}},"code":["'use strict';","","var types = require('ast-types'),","  flowDoctrine = require('../flow_doctrine');","","","/**"," * Infers param tags by reading function parameter names"," *"," * @name inferParams"," * @param {Object} comment parsed comment"," * @returns {Object} comment with parameters"," */","module.exports = function () {","","  function prefixedName(name, prefix) {","    if (prefix.length) {","      return prefix.join('.') + '.' + name;","    }","    return name;","  }","","  function propertyToDoc(property, prefix) {","    var newProperty = {","      title: 'property',","      name: prefixedName(property.key.name, prefix),","      lineNumber: property.loc.start.line,","      type: flowDoctrine(property.value)","    };","    return newProperty;","  }","","  return function inferProperties(comment) {","","","    // Ensure that explicitly specified properties are not overridden","    // by inferred properties","    var explicitProperties = (comment.properties || []).reduce(function (memo, property) {","      memo[property.name] = true;","      return memo;","    }, {});","","    function inferProperties(value, prefix) {","      if (value.type === 'ObjectTypeAnnotation') {","        value.properties.forEach(function (property) {","          if (explicitProperties[prefixedName(property.key.name, prefix)] === undefined) {","            if (!comment.properties) {","              comment.properties = [];","            }","            comment.properties = comment.properties.concat(propertyToDoc(property, prefix));","            // Nested type parameters","            if (property.value.type === 'ObjectTypeAnnotation') {","              inferProperties(property.value, prefix.concat(property.key.name));","            }","          }","        });","      }","    }","","    types.visit(comment.context.ast, {","      visitTypeAlias: function (path) {","        inferProperties(path.value.right, []);","        this.abort();","      }","    });","","    return comment;","  };","};",""],"l":{"3":1,"14":1,"16":1,"17":0,"18":0,"20":0,"23":1,"24":0,"30":0,"33":0,"38":0,"39":0,"40":0,"43":1,"44":0,"45":0,"46":0,"47":0,"48":0,"50":0,"52":0,"53":0,"60":0,"62":0,"63":0,"67":0}},"/home/travis/build/npmtest/node-npmtest-documentation/node_modules/documentation/lib/infer/membership.js":{"path":"/home/travis/build/npmtest/node-npmtest-documentation/node_modules/documentation/lib/infer/membership.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"27":1,"28":0,"29":1,"30":0,"31":1,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0,0],"9":[0,0,0],"10":[0,0],"11":[0,0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0,0,0],"32":[0,0],"33":[0,0],"34":[0,0,0,0],"35":[0,0],"36":[0,0,0],"37":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"fnMap":{"1":{"name":"findLendsIdentifiers","line":10,"loc":{"start":{"line":10,"column":0},"end":{"line":10,"column":36}}},"2":{"name":"extractIdentifiers","line":34,"loc":{"start":{"line":34,"column":0},"end":{"line":34,"column":34}}},"3":{"name":"(anonymous_3)","line":38,"loc":{"start":{"line":38,"column":15},"end":{"line":38,"column":27}}},"4":{"name":"(anonymous_4)","line":42,"loc":{"start":{"line":42,"column":31},"end":{"line":42,"column":47}}},"5":{"name":"(anonymous_5)","line":46,"loc":{"start":{"line":46,"column":27},"end":{"line":46,"column":43}}},"6":{"name":"(anonymous_6)","line":50,"loc":{"start":{"line":50,"column":21},"end":{"line":50,"column":37}}},"7":{"name":"countModuleIdentifiers","line":65,"loc":{"start":{"line":65,"column":0},"end":{"line":65,"column":54}}},"8":{"name":"(anonymous_8)","line":85,"loc":{"start":{"line":85,"column":17},"end":{"line":85,"column":29}}},"9":{"name":"inferModuleName","line":88,"loc":{"start":{"line":88,"column":2},"end":{"line":88,"column":36}}},"10":{"name":"inferMembershipFromIdentifiers","line":107,"loc":{"start":{"line":107,"column":2},"end":{"line":107,"column":79}}},"11":{"name":"inferMembership","line":136,"loc":{"start":{"line":136,"column":9},"end":{"line":136,"column":43}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":6,"column":37}},"2":{"start":{"line":8,"column":0},"end":{"line":8,"column":25}},"3":{"start":{"line":10,"column":0},"end":{"line":24,"column":1}},"4":{"start":{"line":11,"column":2},"end":{"line":13,"column":3}},"5":{"start":{"line":12,"column":4},"end":{"line":12,"column":11}},"6":{"start":{"line":15,"column":2},"end":{"line":23,"column":3}},"7":{"start":{"line":16,"column":4},"end":{"line":16,"column":42}},"8":{"start":{"line":17,"column":4},"end":{"line":22,"column":5}},"9":{"start":{"line":18,"column":6},"end":{"line":18,"column":45}},"10":{"start":{"line":19,"column":6},"end":{"line":21,"column":7}},"11":{"start":{"line":20,"column":8},"end":{"line":20,"column":32}},"12":{"start":{"line":34,"column":0},"end":{"line":57,"column":1}},"13":{"start":{"line":35,"column":2},"end":{"line":35,"column":23}},"14":{"start":{"line":37,"column":2},"end":{"line":54,"column":5}},"15":{"start":{"line":39,"column":6},"end":{"line":39,"column":19}},"16":{"start":{"line":43,"column":6},"end":{"line":43,"column":26}},"17":{"start":{"line":47,"column":6},"end":{"line":47,"column":26}},"18":{"start":{"line":51,"column":6},"end":{"line":51,"column":39}},"19":{"start":{"line":52,"column":6},"end":{"line":52,"column":19}},"20":{"start":{"line":56,"column":2},"end":{"line":56,"column":21}},"21":{"start":{"line":65,"column":0},"end":{"line":75,"column":1}},"22":{"start":{"line":66,"column":2},"end":{"line":68,"column":3}},"23":{"start":{"line":67,"column":4},"end":{"line":67,"column":13}},"24":{"start":{"line":70,"column":2},"end":{"line":72,"column":3}},"25":{"start":{"line":71,"column":4},"end":{"line":71,"column":13}},"26":{"start":{"line":74,"column":2},"end":{"line":74,"column":11}},"27":{"start":{"line":85,"column":0},"end":{"line":229,"column":1}},"28":{"start":{"line":86,"column":2},"end":{"line":86,"column":20}},"29":{"start":{"line":88,"column":2},"end":{"line":91,"column":3}},"30":{"start":{"line":89,"column":4},"end":{"line":90,"column":43}},"31":{"start":{"line":107,"column":2},"end":{"line":134,"column":3}},"32":{"start":{"line":108,"column":4},"end":{"line":111,"column":5}},"33":{"start":{"line":109,"column":6},"end":{"line":109,"column":63}},"34":{"start":{"line":110,"column":6},"end":{"line":110,"column":13}},"35":{"start":{"line":117,"column":4},"end":{"line":117,"column":77}},"36":{"start":{"line":118,"column":4},"end":{"line":121,"column":5}},"37":{"start":{"line":119,"column":6},"end":{"line":119,"column":61}},"38":{"start":{"line":120,"column":6},"end":{"line":120,"column":69}},"39":{"start":{"line":123,"column":4},"end":{"line":133,"column":5}},"40":{"start":{"line":124,"column":6},"end":{"line":124,"column":60}},"41":{"start":{"line":125,"column":6},"end":{"line":125,"column":33}},"42":{"start":{"line":127,"column":6},"end":{"line":127,"column":47}},"43":{"start":{"line":128,"column":6},"end":{"line":132,"column":7}},"44":{"start":{"line":129,"column":8},"end":{"line":129,"column":38}},"45":{"start":{"line":131,"column":8},"end":{"line":131,"column":33}},"46":{"start":{"line":136,"column":2},"end":{"line":228,"column":4}},"47":{"start":{"line":137,"column":4},"end":{"line":139,"column":5}},"48":{"start":{"line":138,"column":6},"end":{"line":138,"column":30}},"49":{"start":{"line":141,"column":4},"end":{"line":143,"column":5}},"50":{"start":{"line":142,"column":6},"end":{"line":142,"column":13}},"51":{"start":{"line":145,"column":4},"end":{"line":147,"column":5}},"52":{"start":{"line":146,"column":6},"end":{"line":146,"column":21}},"53":{"start":{"line":149,"column":4},"end":{"line":149,"column":35}},"54":{"start":{"line":150,"column":4},"end":{"line":150,"column":20}},"55":{"start":{"line":156,"column":4},"end":{"line":160,"column":5}},"56":{"start":{"line":159,"column":6},"end":{"line":159,"column":48}},"57":{"start":{"line":165,"column":4},"end":{"line":168,"column":5}},"58":{"start":{"line":167,"column":6},"end":{"line":167,"column":29}},"59":{"start":{"line":173,"column":4},"end":{"line":178,"column":5}},"60":{"start":{"line":174,"column":6},"end":{"line":174,"column":45}},"61":{"start":{"line":175,"column":6},"end":{"line":177,"column":7}},"62":{"start":{"line":176,"column":8},"end":{"line":176,"column":74}},"63":{"start":{"line":181,"column":4},"end":{"line":191,"column":5}},"64":{"start":{"line":186,"column":6},"end":{"line":187,"column":70}},"65":{"start":{"line":188,"column":6},"end":{"line":190,"column":7}},"66":{"start":{"line":189,"column":8},"end":{"line":189,"column":61}},"67":{"start":{"line":196,"column":4},"end":{"line":204,"column":5}},"68":{"start":{"line":200,"column":6},"end":{"line":200,"column":66}},"69":{"start":{"line":201,"column":6},"end":{"line":203,"column":7}},"70":{"start":{"line":202,"column":8},"end":{"line":202,"column":61}},"71":{"start":{"line":207,"column":4},"end":{"line":213,"column":5}},"72":{"start":{"line":211,"column":6},"end":{"line":211,"column":61}},"73":{"start":{"line":212,"column":6},"end":{"line":212,"column":59}},"74":{"start":{"line":216,"column":4},"end":{"line":225,"column":5}},"75":{"start":{"line":219,"column":6},"end":{"line":219,"column":54}},"76":{"start":{"line":220,"column":6},"end":{"line":220,"column":29}},"77":{"start":{"line":221,"column":6},"end":{"line":223,"column":7}},"78":{"start":{"line":222,"column":8},"end":{"line":222,"column":25}},"79":{"start":{"line":224,"column":6},"end":{"line":224,"column":66}},"80":{"start":{"line":227,"column":4},"end":{"line":227,"column":19}}},"branchMap":{"1":{"line":11,"type":"if","locations":[{"start":{"line":11,"column":2},"end":{"line":11,"column":2}},{"start":{"line":11,"column":2},"end":{"line":11,"column":2}}]},"2":{"line":11,"type":"binary-expr","locations":[{"start":{"line":11,"column":6},"end":{"line":11,"column":11}},{"start":{"line":11,"column":15},"end":{"line":11,"column":36}}]},"3":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":4},"end":{"line":17,"column":4}},{"start":{"line":17,"column":4},"end":{"line":17,"column":4}}]},"4":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":6},"end":{"line":19,"column":6}},{"start":{"line":19,"column":6},"end":{"line":19,"column":6}}]},"5":{"line":66,"type":"if","locations":[{"start":{"line":66,"column":2},"end":{"line":66,"column":2}},{"start":{"line":66,"column":2},"end":{"line":66,"column":2}}]},"6":{"line":66,"type":"binary-expr","locations":[{"start":{"line":66,"column":6},"end":{"line":66,"column":29}},{"start":{"line":66,"column":33},"end":{"line":66,"column":61}}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":2},"end":{"line":70,"column":2}},{"start":{"line":70,"column":2},"end":{"line":70,"column":2}}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":6},"end":{"line":70,"column":29}},{"start":{"line":70,"column":33},"end":{"line":70,"column":60}},{"start":{"line":70,"column":64},"end":{"line":70,"column":92}}]},"9":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":12},"end":{"line":89,"column":26}},{"start":{"line":89,"column":30},"end":{"line":89,"column":49}},{"start":{"line":90,"column":6},"end":{"line":90,"column":42}}]},"10":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":4},"end":{"line":108,"column":4}},{"start":{"line":108,"column":4},"end":{"line":108,"column":4}}]},"11":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":8},"end":{"line":108,"column":32}},{"start":{"line":108,"column":36},"end":{"line":108,"column":63}},{"start":{"line":108,"column":67},"end":{"line":108,"column":93}}]},"12":{"line":109,"type":"binary-expr","locations":[{"start":{"line":109,"column":37},"end":{"line":109,"column":50}},{"start":{"line":109,"column":54},"end":{"line":109,"column":61}}]},"13":{"line":118,"type":"if","locations":[{"start":{"line":118,"column":4},"end":{"line":118,"column":4}},{"start":{"line":118,"column":4},"end":{"line":118,"column":4}}]},"14":{"line":120,"type":"binary-expr","locations":[{"start":{"line":120,"column":42},"end":{"line":120,"column":55}},{"start":{"line":120,"column":59},"end":{"line":120,"column":66}}]},"15":{"line":123,"type":"if","locations":[{"start":{"line":123,"column":4},"end":{"line":123,"column":4}},{"start":{"line":123,"column":4},"end":{"line":123,"column":4}}]},"16":{"line":128,"type":"if","locations":[{"start":{"line":128,"column":6},"end":{"line":128,"column":6}},{"start":{"line":128,"column":6},"end":{"line":128,"column":6}}]},"17":{"line":137,"type":"if","locations":[{"start":{"line":137,"column":4},"end":{"line":137,"column":4}},{"start":{"line":137,"column":4},"end":{"line":137,"column":4}}]},"18":{"line":141,"type":"if","locations":[{"start":{"line":141,"column":4},"end":{"line":141,"column":4}},{"start":{"line":141,"column":4},"end":{"line":141,"column":4}}]},"19":{"line":145,"type":"if","locations":[{"start":{"line":145,"column":4},"end":{"line":145,"column":4}},{"start":{"line":145,"column":4},"end":{"line":145,"column":4}}]},"20":{"line":156,"type":"if","locations":[{"start":{"line":156,"column":4},"end":{"line":156,"column":4}},{"start":{"line":156,"column":4},"end":{"line":156,"column":4}}]},"21":{"line":156,"type":"binary-expr","locations":[{"start":{"line":156,"column":8},"end":{"line":156,"column":46}},{"start":{"line":157,"column":8},"end":{"line":157,"column":58}},{"start":{"line":158,"column":8},"end":{"line":158,"column":59}}]},"22":{"line":165,"type":"if","locations":[{"start":{"line":165,"column":4},"end":{"line":165,"column":4}},{"start":{"line":165,"column":4},"end":{"line":165,"column":4}}]},"23":{"line":165,"type":"binary-expr","locations":[{"start":{"line":165,"column":8},"end":{"line":165,"column":35}},{"start":{"line":166,"column":8},"end":{"line":166,"column":41}}]},"24":{"line":173,"type":"if","locations":[{"start":{"line":173,"column":4},"end":{"line":173,"column":4}},{"start":{"line":173,"column":4},"end":{"line":173,"column":4}}]},"25":{"line":175,"type":"if","locations":[{"start":{"line":175,"column":6},"end":{"line":175,"column":6}},{"start":{"line":175,"column":6},"end":{"line":175,"column":6}}]},"26":{"line":181,"type":"if","locations":[{"start":{"line":181,"column":4},"end":{"line":181,"column":4}},{"start":{"line":181,"column":4},"end":{"line":181,"column":4}}]},"27":{"line":181,"type":"binary-expr","locations":[{"start":{"line":181,"column":8},"end":{"line":181,"column":37}},{"start":{"line":182,"column":6},"end":{"line":182,"column":40}},{"start":{"line":183,"column":6},"end":{"line":183,"column":55}}]},"28":{"line":186,"type":"binary-expr","locations":[{"start":{"line":186,"column":20},"end":{"line":186,"column":65}},{"start":{"line":187,"column":10},"end":{"line":187,"column":69}}]},"29":{"line":188,"type":"if","locations":[{"start":{"line":188,"column":6},"end":{"line":188,"column":6}},{"start":{"line":188,"column":6},"end":{"line":188,"column":6}}]},"30":{"line":196,"type":"if","locations":[{"start":{"line":196,"column":4},"end":{"line":196,"column":4}},{"start":{"line":196,"column":4},"end":{"line":196,"column":4}}]},"31":{"line":196,"type":"binary-expr","locations":[{"start":{"line":196,"column":8},"end":{"line":196,"column":37}},{"start":{"line":197,"column":8},"end":{"line":197,"column":42}},{"start":{"line":198,"column":8},"end":{"line":198,"column":57}},{"start":{"line":199,"column":8},"end":{"line":199,"column":68}}]},"32":{"line":201,"type":"if","locations":[{"start":{"line":201,"column":6},"end":{"line":201,"column":6}},{"start":{"line":201,"column":6},"end":{"line":201,"column":6}}]},"33":{"line":207,"type":"if","locations":[{"start":{"line":207,"column":4},"end":{"line":207,"column":4}},{"start":{"line":207,"column":4},"end":{"line":207,"column":4}}]},"34":{"line":207,"type":"binary-expr","locations":[{"start":{"line":207,"column":8},"end":{"line":207,"column":37}},{"start":{"line":208,"column":8},"end":{"line":208,"column":42}},{"start":{"line":209,"column":8},"end":{"line":209,"column":57}},{"start":{"line":210,"column":8},"end":{"line":210,"column":66}}]},"35":{"line":216,"type":"if","locations":[{"start":{"line":216,"column":4},"end":{"line":216,"column":4}},{"start":{"line":216,"column":4},"end":{"line":216,"column":4}}]},"36":{"line":216,"type":"binary-expr","locations":[{"start":{"line":216,"column":8},"end":{"line":216,"column":43}},{"start":{"line":217,"column":8},"end":{"line":217,"column":43}},{"start":{"line":218,"column":8},"end":{"line":218,"column":57}}]},"37":{"line":221,"type":"if","locations":[{"start":{"line":221,"column":6},"end":{"line":221,"column":6}},{"start":{"line":221,"column":6},"end":{"line":221,"column":6}}]}},"code":["'use strict';","","var types = require('ast-types'),","  pathParse = require('parse-filepath'),","  isJSDocComment = require('../../lib/is_jsdoc_comment'),","  parse = require('../../lib/parse');","","var n = types.namedTypes;","","function findLendsIdentifiers(node) {","  if (!node || !node.leadingComments) {","    return;","  }","","  for (var i = 0; i < node.leadingComments.length; i++) {","    var comment = node.leadingComments[i];","    if (isJSDocComment(comment)) {","      var lends = parse(comment.value).lends;","      if (lends) {","        return lends.split('.');","      }","    }","  }","}","","/**"," * Extract and return the chain of identifiers from the left hand side of expressions"," * of the forms `Foo = ...`, `Foo.bar = ...`, `Foo.bar.baz = ...`, etc."," *"," * @param {NodePath} path AssignmentExpression, MemberExpression, or Identifier"," * @returns {Array<string>} identifiers"," * @private"," */","function extractIdentifiers(path) {","  var identifiers = [];","","  types.visit(path, {","    visitNode: function () {","      return false;","    },","","    visitAssignmentExpression: function (path) {","      this.traverse(path);","    },","","    visitMemberExpression: function (path) {","      this.traverse(path);","    },","","    visitIdentifier: function (path) {","      identifiers.push(path.node.name);","      return false;","    }","  });","","  return identifiers;","}","","/**"," * Count leading identifiers that refer to a module export (`exports` or `module.exports`)."," * @param {Object} comment parsed comment"," * @param {Array<string>} identifiers array of identifier names"," * @returns {number} number of identifiers referring to a module export (0, 1 or 2)"," */","function countModuleIdentifiers(comment, identifiers) {","  if (identifiers.length >= 1 && identifiers[0] === 'exports') {","    return 1;","  }","","  if (identifiers.length >= 2 && identifiers[0] === 'module' && identifiers[1] === 'exports') {","    return 2;","  }","","  return 0;","}","","/**"," * Uses code structure to infer `memberof`, `instance`, and `static`"," * tags from the placement of JSDoc"," * annotations within a file"," *"," * @param {Object} comment parsed comment"," * @returns {Object} comment with membership inferred"," */","module.exports = function () {","  var currentModule;","","  function inferModuleName(comment) {","    return (comment.module && comment.module.name) ||","      pathParse(comment.context.file).name;","  }","","  /**","   * Set `memberof` and `instance`/`static` tags on `comment` based on the","   * array of `identifiers`. If the last element of the `identifiers` is","   * `\"prototype\"`, it is assumed to be an instance member; otherwise static.","   * If the `identifiers` start with `exports` or `module.exports`, assign","   * membership based on the last seen @module tag or name of the current file.","   *","   * @param {Object} comment comment for which to infer memberships","   * @param {Array<string>} identifiers array of identifier names","   * @param {string} explicitScope if derived from an es6 class, whether or","   * not this method had the static keyword","   * @returns {undefined} mutates `comment`","   * @private","   */","  function inferMembershipFromIdentifiers(comment, identifiers, explicitScope) {","    if (identifiers.length === 1 && identifiers[0] === 'module' && comment.name === 'exports') {","      comment.name = inferModuleName(currentModule || comment);","      return;","    }","","    /*","     * Test whether identifiers start with a module export (`exports` or `module.exports`),","     * and if so replace those identifiers with the name of the current module.","     */","    var moduleIdentifierCount = countModuleIdentifiers(comment, identifiers);","    if (moduleIdentifierCount) {","      identifiers = identifiers.slice(moduleIdentifierCount);","      identifiers.unshift(inferModuleName(currentModule || comment));","    }","","    if (identifiers[identifiers.length - 1] === 'prototype') {","      comment.memberof = identifiers.slice(0, -1).join('.');","      comment.scope = 'instance';","    } else {","      comment.memberof = identifiers.join('.');","      if (explicitScope !== undefined) {","        comment.scope = explicitScope;","      } else {","        comment.scope = 'static';","      }","    }","  }","","  return function inferMembership(comment) {","    if (comment.module) {","      currentModule = comment;","    }","","    if (comment.lends) {","      return;","    }","","    if (comment.memberof) {","      return comment;","    }","","    var path = comment.context.ast;","    var identifiers;","","    /*","     * Deal with an oddity of espree: the jsdoc comment is attached to a different","     * node in the two expressions `a.b = c` vs `a.b = function () {}`.","     */","    if (n.ExpressionStatement.check(path.node) &&","        n.AssignmentExpression.check(path.node.expression) &&","        n.MemberExpression.check(path.node.expression.left)) {","      path = path.get('expression').get('left');","    }","","    /*","     * Same as above but for `b: c` vs `b: function () {}`.","     */","    if (n.Property.check(path.node) &&","        n.Identifier.check(path.node.key)) {","      path = path.get('key');","    }","","    // Foo.bar = ...;","    // Foo.prototype.bar = ...;","    // Foo.bar.baz = ...;","    if (n.MemberExpression.check(path.node)) {","      identifiers = extractIdentifiers(path);","      if (identifiers.length >= 2) {","        inferMembershipFromIdentifiers(comment, identifiers.slice(0, -1));","      }","    }","","    // /** @lends Foo */{ bar: ... }","    if (n.Identifier.check(path.node) &&","      n.Property.check(path.parent.node) &&","      n.ObjectExpression.check(path.parent.parent.node)) {","      // The @lends comment is sometimes attached to the first property rather than","      // the object expression itself.","      identifiers = findLendsIdentifiers(path.parent.parent.node) ||","          findLendsIdentifiers(path.parent.parent.node.properties[0]);","      if (identifiers) {","        inferMembershipFromIdentifiers(comment, identifiers);","      }","    }","","    // Foo = { bar: ... };","    // Foo.prototype = { bar: ... };","    // Foo.bar = { baz: ... };","    if (n.Identifier.check(path.node) &&","        n.Property.check(path.parent.node) &&","        n.ObjectExpression.check(path.parent.parent.node) &&","        n.AssignmentExpression.check(path.parent.parent.parent.node)) {","      identifiers = extractIdentifiers(path.parent.parent.parent);","      if (identifiers.length >= 1) {","        inferMembershipFromIdentifiers(comment, identifiers);","      }","    }","","    // var Foo = { bar: ... }","    if (n.Identifier.check(path.node) &&","        n.Property.check(path.parent.node) &&","        n.ObjectExpression.check(path.parent.parent.node) &&","        n.VariableDeclarator.check(path.parent.parent.parent.node)) {","      identifiers = [path.parent.parent.parent.node.id.name];","      inferMembershipFromIdentifiers(comment, identifiers);","    }","","    // class Foo { bar() { } }","    if (n.MethodDefinition.check(path.node) &&","        n.ClassBody.check(path.parent.node) &&","        n.ClassDeclaration.check(path.parent.parent.node)) {","      identifiers = [path.parent.parent.node.id.name];","      var scope = 'instance';","      if (path.node.static == true) {","        scope = 'static';","      }","      inferMembershipFromIdentifiers(comment, identifiers, scope);","    }","","    return comment;","  };","}",""],"l":{"3":1,"8":1,"10":1,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"34":1,"35":0,"37":0,"39":0,"43":0,"47":0,"51":0,"52":0,"56":0,"65":1,"66":0,"67":0,"70":0,"71":0,"74":0,"85":1,"86":0,"88":1,"89":0,"107":1,"108":0,"109":0,"110":0,"117":0,"118":0,"119":0,"120":0,"123":0,"124":0,"125":0,"127":0,"128":0,"129":0,"131":0,"136":0,"137":0,"138":0,"141":0,"142":0,"145":0,"146":0,"149":0,"150":0,"156":0,"159":0,"165":0,"167":0,"173":0,"174":0,"175":0,"176":0,"181":0,"186":0,"188":0,"189":0,"196":0,"200":0,"201":0,"202":0,"207":0,"211":0,"212":0,"216":0,"219":0,"220":0,"221":0,"222":0,"224":0,"227":0}},"/home/travis/build/npmtest/node-npmtest-documentation/node_modules/documentation/lib/infer/return.js":{"path":"/home/travis/build/npmtest/node-npmtest-documentation/node_modules/documentation/lib/infer/return.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"b":{"1":[0,0],"2":[0,0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":13,"loc":{"start":{"line":13,"column":17},"end":{"line":13,"column":29}}},"2":{"name":"inferReturn","line":14,"loc":{"start":{"line":14,"column":9},"end":{"line":14,"column":39}}},"3":{"name":"(anonymous_3)","line":16,"loc":{"start":{"line":16,"column":21},"end":{"line":16,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":4,"column":45}},"2":{"start":{"line":13,"column":0},"end":{"line":32,"column":2}},"3":{"start":{"line":14,"column":2},"end":{"line":31,"column":4}},"4":{"start":{"line":15,"column":4},"end":{"line":28,"column":7}},"5":{"start":{"line":18,"column":8},"end":{"line":24,"column":9}},"6":{"start":{"line":21,"column":10},"end":{"line":23,"column":13}},"7":{"start":{"line":26,"column":8},"end":{"line":26,"column":21}},"8":{"start":{"line":30,"column":4},"end":{"line":30,"column":19}}},"branchMap":{"1":{"line":18,"type":"if","locations":[{"start":{"line":18,"column":8},"end":{"line":18,"column":8}},{"start":{"line":18,"column":8},"end":{"line":18,"column":8}}]},"2":{"line":18,"type":"binary-expr","locations":[{"start":{"line":18,"column":12},"end":{"line":18,"column":28}},{"start":{"line":19,"column":10},"end":{"line":19,"column":31}},{"start":{"line":20,"column":10},"end":{"line":20,"column":46}}]}},"code":["'use strict';","","var types = require('ast-types'),","  flowDoctrine = require('../flow_doctrine');","","/**"," * Infers returns tags by using Flow return type annotations"," *"," * @name inferReturn"," * @param {Object} comment parsed comment"," * @returns {Object} comment with return tag inferred"," */","module.exports = function () {","  return function inferReturn(comment) {","    types.visit(comment.context.ast, {","      visitFunction: function (path) {","","        if (!comment.returns &&","          path.value.returnType &&","          path.value.returnType.typeAnnotation) {","          comment.returns = [{","            type: flowDoctrine(path.value.returnType.typeAnnotation)","          }];","        }","","        this.abort();","      }","    });","","    return comment;","  };","};",""],"l":{"3":1,"13":1,"14":0,"15":0,"18":0,"21":0,"26":0,"30":0}},"/home/travis/build/npmtest/node-npmtest-documentation/node_modules/documentation/lib/lint.js":{"path":"/home/travis/build/npmtest/node-npmtest-documentation/node_modules/documentation/lib/lint.js","s":{"1":1,"2":1,"3":1,"4":0,"5":1,"6":0,"7":0,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":1,"32":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"lint","line":26,"loc":{"start":{"line":26,"column":0},"end":{"line":26,"column":23}}},"2":{"name":"(anonymous_2)","line":27,"loc":{"start":{"line":27,"column":23},"end":{"line":27,"column":38}}},"3":{"name":"nameInvariant","line":28,"loc":{"start":{"line":28,"column":4},"end":{"line":28,"column":33}}},"4":{"name":"checkCanonical","line":37,"loc":{"start":{"line":37,"column":4},"end":{"line":37,"column":34}}},"5":{"name":"format","line":57,"loc":{"start":{"line":57,"column":0},"end":{"line":57,"column":26}}},"6":{"name":"(anonymous_6)","line":59,"loc":{"start":{"line":59,"column":17},"end":{"line":59,"column":36}}},"7":{"name":"(anonymous_7)","line":60,"loc":{"start":{"line":60,"column":27},"end":{"line":60,"column":44}}},"8":{"name":"(anonymous_8)","line":72,"loc":{"start":{"line":72,"column":42},"end":{"line":72,"column":55}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":7,"column":39}},"2":{"start":{"line":9,"column":0},"end":{"line":17,"column":2}},"3":{"start":{"line":26,"column":0},"end":{"line":55,"column":1}},"4":{"start":{"line":27,"column":2},"end":{"line":53,"column":5}},"5":{"start":{"line":28,"column":4},"end":{"line":35,"column":5}},"6":{"start":{"line":29,"column":6},"end":{"line":34,"column":7}},"7":{"start":{"line":30,"column":8},"end":{"line":33,"column":11}},"8":{"start":{"line":37,"column":4},"end":{"line":48,"column":5}},"9":{"start":{"line":38,"column":6},"end":{"line":47,"column":7}},"10":{"start":{"line":39,"column":8},"end":{"line":39,"column":33}},"11":{"start":{"line":40,"column":13},"end":{"line":47,"column":7}},"12":{"start":{"line":41,"column":8},"end":{"line":41,"column":46}},"13":{"start":{"line":42,"column":13},"end":{"line":47,"column":7}},"14":{"start":{"line":43,"column":8},"end":{"line":43,"column":40}},"15":{"start":{"line":44,"column":13},"end":{"line":47,"column":7}},"16":{"start":{"line":45,"column":8},"end":{"line":45,"column":40}},"17":{"start":{"line":46,"column":8},"end":{"line":46,"column":46}},"18":{"start":{"line":50,"column":4},"end":{"line":52,"column":5}},"19":{"start":{"line":51,"column":6},"end":{"line":51,"column":31}},"20":{"start":{"line":54,"column":2},"end":{"line":54,"column":17}},"21":{"start":{"line":57,"column":0},"end":{"line":75,"column":1}},"22":{"start":{"line":58,"column":2},"end":{"line":58,"column":18}},"23":{"start":{"line":59,"column":2},"end":{"line":71,"column":5}},"24":{"start":{"line":60,"column":4},"end":{"line":70,"column":7}},"25":{"start":{"line":61,"column":6},"end":{"line":61,"column":35}},"26":{"start":{"line":62,"column":6},"end":{"line":62,"column":35}},"27":{"start":{"line":63,"column":6},"end":{"line":66,"column":9}},"28":{"start":{"line":67,"column":6},"end":{"line":69,"column":9}},"29":{"start":{"line":72,"column":2},"end":{"line":74,"column":6}},"30":{"start":{"line":73,"column":4},"end":{"line":73,"column":32}},"31":{"start":{"line":77,"column":0},"end":{"line":77,"column":27}},"32":{"start":{"line":78,"column":0},"end":{"line":78,"column":31}}},"branchMap":{"1":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":6},"end":{"line":29,"column":6}},{"start":{"line":29,"column":6},"end":{"line":29,"column":6}}]},"2":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":6},"end":{"line":38,"column":6}},{"start":{"line":38,"column":6},"end":{"line":38,"column":6}}]},"3":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":13},"end":{"line":40,"column":13}},{"start":{"line":40,"column":13},"end":{"line":40,"column":13}}]},"4":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":13},"end":{"line":42,"column":13}},{"start":{"line":42,"column":13},"end":{"line":42,"column":13}}]},"5":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":13},"end":{"line":44,"column":13}},{"start":{"line":44,"column":13},"end":{"line":44,"column":13}}]},"6":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":4},"end":{"line":50,"column":4}},{"start":{"line":50,"column":4},"end":{"line":50,"column":4}}]},"7":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":8},"end":{"line":50,"column":29}},{"start":{"line":50,"column":33},"end":{"line":50,"column":41}}]},"8":{"line":63,"type":"binary-expr","locations":[{"start":{"line":63,"column":18},"end":{"line":63,"column":27}},{"start":{"line":63,"column":31},"end":{"line":66,"column":8}}]},"9":{"line":68,"type":"binary-expr","locations":[{"start":{"line":68,"column":14},"end":{"line":68,"column":62}},{"start":{"line":68,"column":66},"end":{"line":68,"column":67}}]}},"code":["'use strict';","","var VFile = require('vfile'),","  walk = require('../lib/walk'),","  parseFilepath = require('parse-filepath'),","  vfileSort = require('vfile-sort'),","  reporter = require('vfile-reporter');","","var CANONICAL = {","  'String': 'string',","  'Boolean': 'boolean',","  'Undefined': 'undefined',","  'Number': 'number',","  'array': 'Array',","  'date': 'Date',","  'object': 'Object'","};","","/**"," * Passively lints and checks documentation data."," *"," * @name lint"," * @param {Object} comment parsed comment"," * @returns {Array<Object>} array of errors"," */","function lint(comment) {","  comment.tags.forEach(function (tag) {","    function nameInvariant(name) {","      if (CANONICAL[name]) {","        comment.errors.push({","          message: 'type ' + name + ' found, ' + CANONICAL[name] + ' is standard',","          commentLineNumber: tag.lineNumber","        });","      }","    }","","    function checkCanonical(type) {","      if (type.type === 'NameExpression') {","        nameInvariant(type.name);","      } else if (type.type === 'UnionType') {","        type.elements.forEach(checkCanonical);","      } else if (type.type === 'OptionalType') {","        checkCanonical(type.expression);","      } else if (type.type === 'TypeApplication') {","        checkCanonical(type.expression);","        type.applications.map(checkCanonical);","      }","    }","","    if (tag.title === 'param' && tag.type) {","      checkCanonical(tag.type);","    }","  });","  return comment;","}","","function format(comments) {","  var vFiles = {};","  walk(comments, function (comment) {","    comment.errors.forEach(function (error) {","      var p = comment.context.file;","      var parts = parseFilepath(p);","      vFiles[p] = vFiles[p] || new VFile({","        directory: parts.dirname,","        filename: parts.basename","      });","      vFiles[p].warn(error.message, {","        line: comment.loc.start.line + error.commentLineNumber || 0","      });","    });","  });","  return reporter(Object.keys(vFiles).map(function (p) {","    return vfileSort(vFiles[p]);","  }));","}","","module.exports.lint = lint;","module.exports.format = format;",""],"l":{"3":1,"9":1,"26":1,"27":0,"28":1,"29":0,"30":0,"37":1,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"50":0,"51":0,"54":0,"57":1,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"67":0,"72":0,"73":0,"77":1,"78":1}},"/home/travis/build/npmtest/node-npmtest-documentation/node_modules/documentation/lib/output/html.js":{"path":"/home/travis/build/npmtest/node-npmtest-documentation/node_modules/documentation/lib/output/html.js","s":{"1":1,"2":1,"3":0,"4":1,"5":0,"6":0,"7":0,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"highlightString","line":20,"loc":{"start":{"line":20,"column":0},"end":{"line":20,"column":34}}},"2":{"name":"highlight","line":31,"loc":{"start":{"line":31,"column":0},"end":{"line":31,"column":28}}},"3":{"name":"makeHTML","line":48,"loc":{"start":{"line":48,"column":17},"end":{"line":48,"column":64}}},"4":{"name":"(anonymous_4)","line":59,"loc":{"start":{"line":59,"column":27},"end":{"line":59,"column":46}}},"5":{"name":"(anonymous_5)","line":61,"loc":{"start":{"line":61,"column":12},"end":{"line":61,"column":28}}},"6":{"name":"(anonymous_6)","line":69,"loc":{"start":{"line":69,"column":17},"end":{"line":69,"column":34}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":11,"column":33}},"2":{"start":{"line":20,"column":0},"end":{"line":22,"column":1}},"3":{"start":{"line":21,"column":2},"end":{"line":21,"column":45}},"4":{"start":{"line":31,"column":0},"end":{"line":36,"column":1}},"5":{"start":{"line":32,"column":2},"end":{"line":34,"column":3}},"6":{"start":{"line":33,"column":4},"end":{"line":33,"column":61}},"7":{"start":{"line":35,"column":2},"end":{"line":35,"column":17}},"8":{"start":{"line":48,"column":0},"end":{"line":78,"column":2}},"9":{"start":{"line":49,"column":2},"end":{"line":49,"column":39}},"10":{"start":{"line":51,"column":2},"end":{"line":51,"column":26}},"11":{"start":{"line":53,"column":2},"end":{"line":53,"column":48}},"12":{"start":{"line":54,"column":2},"end":{"line":54,"column":71}},"13":{"start":{"line":56,"column":2},"end":{"line":57,"column":57}},"14":{"start":{"line":59,"column":2},"end":{"line":63,"column":5}},"15":{"start":{"line":60,"column":4},"end":{"line":60,"column":34}},"16":{"start":{"line":62,"column":4},"end":{"line":62,"column":16}},"17":{"start":{"line":65,"column":2},"end":{"line":65,"column":29}},"18":{"start":{"line":68,"column":2},"end":{"line":77,"column":8}},"19":{"start":{"line":70,"column":6},"end":{"line":76,"column":11}}},"branchMap":{"1":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":2},"end":{"line":32,"column":2}},{"start":{"line":32,"column":2},"end":{"line":32,"column":2}}]},"2":{"line":51,"type":"binary-expr","locations":[{"start":{"line":51,"column":12},"end":{"line":51,"column":19}},{"start":{"line":51,"column":23},"end":{"line":51,"column":25}}]}},"code":["'use strict';","","var File = require('vinyl'),","  vfs = require('vinyl-fs'),","  concat = require('concat-stream'),","  Handlebars = require('handlebars'),","  walk = require('../walk'),","  getTemplate = require('../get_template'),","  resolveTheme = require('../resolve_theme'),","  helpers = require('../html_helpers'),","  hljs = require('highlight.js');","","/**"," * Given a string of JavaScript, return a string of HTML representing"," * that JavaScript highlighted."," *"," * @param {string} example string of javascript"," * @returns {string} highlighted html"," */","function highlightString(example) {","  return hljs.highlight('js', example).value;","}","","/**"," * Highlights the contents of the `example` tag."," *"," * @name highlight"," * @param {Object} comment parsed comment"," * @return {Object} comment with highlighted code"," */","function highlight(comment) {","  if (comment.examples) {","    comment.examples = comment.examples.map(highlightString);","  }","  return comment;","}","","/**"," * Formats documentation as HTML."," *"," * @param {Array<Object>} comments parsed comments"," * @param {Object} options Options that can customize the output"," * @param {string} [options.theme] Name of a module used for an HTML theme."," * @param {Function} callback called with array of results as vinyl-fs objects"," * @returns {undefined} calls callback"," * @name html"," */","module.exports = function makeHTML(comments, options, callback) {","  comments = walk(comments, highlight);","","  options = options || {};","","  var themeModule = resolveTheme(options.theme);","  var pageTemplate = getTemplate(Handlebars, themeModule, 'index.hbs');","","  Handlebars.registerPartial('section',","    getTemplate(Handlebars, themeModule, 'section.hbs'));","","  var paths = comments.map(function (comment) {","    return comment.path.join('.');","  }).filter(function (path) {","    return path;","  });","","  helpers(Handlebars, paths);","","  // push assets into the pipeline as well.","  vfs.src([themeModule + '/assets/**'], { base: themeModule })","    .pipe(concat(function (files) {","      callback(null, files.concat(new File({","        path: 'index.html',","        contents: new Buffer(pageTemplate({","          docs: comments,","          options: options","        }), 'utf8')","      })));","    }));","};",""],"l":{"3":1,"20":1,"21":0,"31":1,"32":0,"33":0,"35":0,"48":1,"49":0,"51":0,"53":0,"54":0,"56":0,"59":0,"60":0,"62":0,"65":0,"68":0,"70":0}},"/home/travis/build/npmtest/node-npmtest-documentation/node_modules/documentation/lib/get_template.js":{"path":"/home/travis/build/npmtest/node-npmtest-documentation/node_modules/documentation/lib/get_template.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":1},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"getTemplate","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":52}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":23}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":27}},"3":{"start":{"line":15,"column":0},"end":{"line":22,"column":1}},"4":{"start":{"line":16,"column":2},"end":{"line":21,"column":3}},"5":{"start":{"line":17,"column":4},"end":{"line":18,"column":70}},"6":{"start":{"line":20,"column":4},"end":{"line":20,"column":58}},"7":{"start":{"line":24,"column":0},"end":{"line":24,"column":29}}},"branchMap":{},"code":["'use strict';","","var fs = require('fs');","var path = require('path');","","/**"," * Get a Handlebars template file out of a theme and compile it into"," * a template function"," *"," * @param {Object} Handlebars handlebars instance"," * @param {string} themeModule base directory of themey"," * @param {string} name template name"," * @returns {Function} template function"," */","function getTemplate(Handlebars, themeModule, name) {","  try {","    return Handlebars","      .compile(fs.readFileSync(path.join(themeModule, name), 'utf8'));","  } catch (e) {","    throw new Error('Template file ' + name + ' missing');","  }","}","","module.exports = getTemplate;",""],"l":{"3":1,"4":1,"15":1,"16":0,"17":0,"20":0,"24":1}},"/home/travis/build/npmtest/node-npmtest-documentation/node_modules/documentation/lib/resolve_theme.js":{"path":"/home/travis/build/npmtest/node-npmtest-documentation/node_modules/documentation/lib/resolve_theme.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":1},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"resolveTheme","line":13,"loc":{"start":{"line":13,"column":0},"end":{"line":13,"column":29}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":4,"column":31}},"2":{"start":{"line":13,"column":0},"end":{"line":23,"column":1}},"3":{"start":{"line":14,"column":2},"end":{"line":14,"column":50}},"4":{"start":{"line":16,"column":2},"end":{"line":16,"column":49}},"5":{"start":{"line":18,"column":2},"end":{"line":22,"column":3}},"6":{"start":{"line":19,"column":4},"end":{"line":19,"column":67}},"7":{"start":{"line":21,"column":4},"end":{"line":21,"column":53}},"8":{"start":{"line":25,"column":0},"end":{"line":25,"column":30}}},"branchMap":{"1":{"line":14,"type":"cond-expr","locations":[{"start":{"line":14,"column":24},"end":{"line":14,"column":37}},{"start":{"line":14,"column":40},"end":{"line":14,"column":49}}]},"2":{"line":16,"type":"binary-expr","locations":[{"start":{"line":16,"column":10},"end":{"line":16,"column":15}},{"start":{"line":16,"column":19},"end":{"line":16,"column":48}}]}},"code":["'use strict';","","var path = require('path'),","  resolve = require('resolve');","","/**"," * Given the name of a theme as a module, return the directory it"," * resides in, or throw an error if it is not found"," * @param {string} [theme='documentation-theme-default'] the module name"," * @throws {Error} if theme is not found"," * @returns {string} directory"," */","function resolveTheme(theme) {","  var basedir = theme ? process.cwd() : __dirname;","","  theme = theme || 'documentation-theme-default';","","  try {","    return path.dirname(resolve.sync(theme, { basedir: basedir }));","  } catch (e) {","    throw new Error('Theme ' + theme + ' not found');","  }","}","","module.exports = resolveTheme;",""],"l":{"3":1,"13":1,"14":0,"16":0,"18":0,"19":0,"21":0,"25":1}},"/home/travis/build/npmtest/node-npmtest-documentation/node_modules/documentation/lib/html_helpers.js":{"path":"/home/travis/build/npmtest/node-npmtest-documentation/node_modules/documentation/lib/html_helpers.js","s":{"1":1,"2":1,"3":0,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1,"25":0,"26":0,"27":1,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":1,"38":0,"39":1,"40":0,"41":0,"42":0,"43":0,"44":1,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0,0,0,0,0,0],"9":[0,0],"10":[0,0],"11":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"fnMap":{"1":{"name":"markdownLink","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":41}}},"2":{"name":"formatInlineTags","line":28,"loc":{"start":{"line":28,"column":0},"end":{"line":28,"column":32}}},"3":{"name":"autolink","line":56,"loc":{"start":{"line":56,"column":0},"end":{"line":56,"column":31}}},"4":{"name":"formatType","line":78,"loc":{"start":{"line":78,"column":0},"end":{"line":78,"column":33}}},"5":{"name":"recurse","line":82,"loc":{"start":{"line":82,"column":2},"end":{"line":82,"column":28}}},"6":{"name":"formatParameter","line":112,"loc":{"start":{"line":112,"column":0},"end":{"line":112,"column":32}}},"7":{"name":"formatParameters","line":124,"loc":{"start":{"line":124,"column":0},"end":{"line":124,"column":28}}},"8":{"name":"(anonymous_8)","line":128,"loc":{"start":{"line":128,"column":31},"end":{"line":128,"column":48}}},"9":{"name":"htmlHelpers","line":140,"loc":{"start":{"line":140,"column":0},"end":{"line":140,"column":40}}},"10":{"name":"(anonymous_10)","line":141,"loc":{"start":{"line":141,"column":41},"end":{"line":141,"column":53}}},"11":{"name":"formatMarkdown","line":162,"loc":{"start":{"line":162,"column":34},"end":{"line":162,"column":66}}},"12":{"name":"(anonymous_12)","line":166,"loc":{"start":{"line":166,"column":43},"end":{"line":166,"column":59}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":6,"column":42}},"2":{"start":{"line":15,"column":0},"end":{"line":17,"column":1}},"3":{"start":{"line":16,"column":2},"end":{"line":16,"column":49}},"4":{"start":{"line":28,"column":0},"end":{"line":48,"column":1}},"5":{"start":{"line":29,"column":2},"end":{"line":29,"column":18}},"6":{"start":{"line":30,"column":2},"end":{"line":30,"column":31}},"7":{"start":{"line":32,"column":2},"end":{"line":45,"column":3}},"8":{"start":{"line":33,"column":4},"end":{"line":44,"column":5}},"9":{"start":{"line":34,"column":6},"end":{"line":34,"column":37}},"10":{"start":{"line":35,"column":11},"end":{"line":44,"column":5}},"11":{"start":{"line":36,"column":6},"end":{"line":36,"column":54}},"12":{"start":{"line":37,"column":6},"end":{"line":41,"column":7}},"13":{"start":{"line":38,"column":8},"end":{"line":38,"column":75}},"14":{"start":{"line":40,"column":8},"end":{"line":40,"column":67}},"15":{"start":{"line":42,"column":11},"end":{"line":44,"column":5}},"16":{"start":{"line":43,"column":6},"end":{"line":43,"column":73}},"17":{"start":{"line":47,"column":2},"end":{"line":47,"column":16}},"18":{"start":{"line":56,"column":0},"end":{"line":63,"column":1}},"19":{"start":{"line":57,"column":2},"end":{"line":61,"column":3}},"20":{"start":{"line":58,"column":4},"end":{"line":58,"column":54}},"21":{"start":{"line":59,"column":9},"end":{"line":61,"column":3}},"22":{"start":{"line":60,"column":4},"end":{"line":60,"column":76}},"23":{"start":{"line":62,"column":2},"end":{"line":62,"column":14}},"24":{"start":{"line":78,"column":0},"end":{"line":102,"column":1}},"25":{"start":{"line":79,"column":2},"end":{"line":81,"column":3}},"26":{"start":{"line":80,"column":4},"end":{"line":80,"column":14}},"27":{"start":{"line":82,"column":2},"end":{"line":84,"column":3}},"28":{"start":{"line":83,"column":4},"end":{"line":83,"column":38}},"29":{"start":{"line":85,"column":2},"end":{"line":101,"column":3}},"30":{"start":{"line":87,"column":4},"end":{"line":87,"column":61}},"31":{"start":{"line":89,"column":4},"end":{"line":89,"column":51}},"32":{"start":{"line":91,"column":4},"end":{"line":91,"column":17}},"33":{"start":{"line":93,"column":4},"end":{"line":93,"column":54}},"34":{"start":{"line":95,"column":4},"end":{"line":95,"column":71}},"35":{"start":{"line":97,"column":4},"end":{"line":98,"column":54}},"36":{"start":{"line":100,"column":4},"end":{"line":100,"column":23}},"37":{"start":{"line":112,"column":0},"end":{"line":115,"column":1}},"38":{"start":{"line":113,"column":2},"end":{"line":114,"column":40}},"39":{"start":{"line":124,"column":0},"end":{"line":131,"column":1}},"40":{"start":{"line":125,"column":2},"end":{"line":127,"column":3}},"41":{"start":{"line":126,"column":4},"end":{"line":126,"column":14}},"42":{"start":{"line":128,"column":2},"end":{"line":130,"column":22}},"43":{"start":{"line":129,"column":4},"end":{"line":129,"column":34}},"44":{"start":{"line":140,"column":0},"end":{"line":169,"column":1}},"45":{"start":{"line":141,"column":2},"end":{"line":143,"column":5}},"46":{"start":{"line":142,"column":4},"end":{"line":142,"column":31}},"47":{"start":{"line":145,"column":2},"end":{"line":145,"column":72}},"48":{"start":{"line":147,"column":2},"end":{"line":147,"column":63}},"49":{"start":{"line":162,"column":2},"end":{"line":164,"column":5}},"50":{"start":{"line":163,"column":4},"end":{"line":163,"column":90}},"51":{"start":{"line":166,"column":2},"end":{"line":168,"column":5}},"52":{"start":{"line":167,"column":4},"end":{"line":167,"column":35}},"53":{"start":{"line":171,"column":0},"end":{"line":171,"column":29}}},"branchMap":{"1":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":4},"end":{"line":33,"column":4}},{"start":{"line":33,"column":4},"end":{"line":33,"column":4}}]},"2":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":11},"end":{"line":35,"column":11}},{"start":{"line":35,"column":11},"end":{"line":35,"column":11}}]},"3":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":6},"end":{"line":37,"column":6}},{"start":{"line":37,"column":6},"end":{"line":37,"column":6}}]},"4":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":11},"end":{"line":42,"column":11}},{"start":{"line":42,"column":11},"end":{"line":42,"column":11}}]},"5":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":2},"end":{"line":57,"column":2}},{"start":{"line":57,"column":2},"end":{"line":57,"column":2}}]},"6":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":9},"end":{"line":59,"column":9}},{"start":{"line":59,"column":9},"end":{"line":59,"column":9}}]},"7":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":2},"end":{"line":79,"column":2}},{"start":{"line":79,"column":2},"end":{"line":79,"column":2}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":86,"column":2},"end":{"line":87,"column":61}},{"start":{"line":88,"column":2},"end":{"line":89,"column":51}},{"start":{"line":90,"column":2},"end":{"line":91,"column":17}},{"start":{"line":92,"column":2},"end":{"line":93,"column":54}},{"start":{"line":94,"column":2},"end":{"line":95,"column":71}},{"start":{"line":96,"column":2},"end":{"line":98,"column":54}},{"start":{"line":99,"column":2},"end":{"line":100,"column":23}}]},"9":{"line":113,"type":"cond-expr","locations":[{"start":{"line":114,"column":4},"end":{"line":114,"column":26}},{"start":{"line":114,"column":29},"end":{"line":114,"column":39}}]},"10":{"line":113,"type":"binary-expr","locations":[{"start":{"line":113,"column":10},"end":{"line":113,"column":20}},{"start":{"line":113,"column":24},"end":{"line":113,"column":58}}]},"11":{"line":125,"type":"if","locations":[{"start":{"line":125,"column":2},"end":{"line":125,"column":2}},{"start":{"line":125,"column":2},"end":{"line":125,"column":2}}]}},"code":["'use strict';","","var getGlobalExternalLink = require('globals-docs').getDoc,","  mdast = require('mdast'),","  html = require('mdast-html'),","  inlineLex = require('jsdoc-inline-lex');","","/**"," * Format a description and target as a Markdown link."," *"," * @param {string} description the text seen as the link"," * @param {string} href where the link goes"," * @return {string} markdown formatted link"," */","function markdownLink(description, href) {","  return '[`' + description + '`](' + href + ')';","}","","/**"," * Format link & tutorial tags with simple code inline tags."," *"," * @param {string} text input - typically a description"," * @returns {string} markdown-friendly output"," * @private"," * @example"," * formatInlineTags('{@link Foo}'); // \"[Foo](#foo)\""," */","function formatInlineTags(text) {","  var output = '';","  var tokens = inlineLex(text);","","  for (var i = 0; i < tokens.length; i++) {","    if (tokens[i].type === 'text') {","      output += tokens[i].capture[0];","    } else if (tokens[i].type === 'link') {","      var parts = tokens[i].capture[1].split(/\\s|\\|/);","      if (parts.length === 1) {","        output += markdownLink(tokens[i].capture[1], tokens[i].capture[1]);","      } else {","        output += markdownLink(parts.slice(1).join(' '), parts[0]);","      }","    } else if (tokens[i].type === 'prefixLink') {","      output += markdownLink(tokens[i].capture[1], tokens[i].capture[2]);","    }","  }","","  return output;","}","","/**"," * Link text to this page or to a central resource."," * @param {Array<string>} paths list of valid namespace paths that are linkable"," * @param {string} text inner text of the link"," * @returns {string} potentially linked HTML"," */","function autolink(paths, text) {","  if (paths.indexOf(text) !== -1) {","    return '<a href=\"#' + text + '\">' + text + '</a>';","  } else if (getGlobalExternalLink(text)) {","    return '<a href=\"' + getGlobalExternalLink(text) + '\">' + text + '</a>';","  }","  return text;","}","","/**"," * Helper used to format JSDoc-style type definitions into HTML."," *"," * @name formatType"," * @param {Object} type type object in doctrine style"," * @param {Array<string>} paths valid namespace paths that can be linked"," * @returns {string} string"," * @example"," * var x = { type: 'NameExpression', name: 'String' };"," * // in template"," * // {{ type x }}"," * // generates String"," */","function formatType(type, paths) {","  if (!type) {","    return '';","  }","  function recurse(element) {","    return formatType(element, paths);","  }","  switch (type.type) {","  case 'NameExpression':","    return '<code>' + autolink(paths, type.name) + '</code>';","  case 'UnionType':","    return type.elements.map(recurse).join(' or ');","  case 'AllLiteral':","    return 'Any';","  case 'RestType':","    return '...' + formatType(type.expression, paths);","  case 'OptionalType':","    return '<code>[' + formatType(type.expression, paths) + ']</code>';","  case 'TypeApplication':","    return formatType(type.expression, paths) + '<' +","      type.applications.map(recurse).join(', ') + '>';","  case 'UndefinedLiteral':","    return 'undefined';","  }","}","","/**"," * Format a parameter name. This is used in formatParameters"," * and just needs to be careful about differentiating optional"," * parameters"," *"," * @param {Object} param a param as a type spec"," * @returns {string} formatted parameter representation."," */","function formatParameter(param) {","  return (param.type && param.type.type === 'OptionalType') ?","    '[' + param.name + ']' : param.name;","}","","/**"," * Format the parameters of a function into a quickly-readable"," * summary that resembles how you would call the function"," * initially."," *"," * @returns {string} formatted parameters"," */","function formatParameters() {","  if (!this.params) {","    return '';","  }","  return '(' + this.params.map(function (param) {","    return formatParameter(param);","  }).join(', ') + ')';","}","","/**"," * Given a Handlebars instance, register helpers"," *"," * @param {Object} Handlebars template instance"," * @param {Array<string>} paths list of valid namespace paths that are linkable"," * @returns {undefined} invokes side effects on Handlebars"," */","function htmlHelpers(Handlebars, paths) {","  Handlebars.registerHelper('permalink', function () {","    return this.path.join('.');","  });","","  Handlebars.registerHelper('autolink', autolink.bind(autolink, paths));","","  Handlebars.registerHelper('format_params', formatParameters);","","  /**","   * This helper is exposed in templates as `md` and is useful for showing","   * Markdown-formatted text as proper HTML.","   *","   * @name formatMarkdown","   * @param {string} string","   * @returns {string} string","   * @example","   * var x = '## foo';","   * // in template","   * // {{ md x }}","   * // generates <h2>foo</h2>","   */","  Handlebars.registerHelper('md', function formatMarkdown(string) {","    return new Handlebars.SafeString(mdast().use(html).process(formatInlineTags(string)));","  });","","  Handlebars.registerHelper('format_type', function (type) {","    return formatType(type, paths);","  });","}","","module.exports = htmlHelpers;",""],"l":{"3":1,"15":1,"16":0,"28":1,"29":0,"30":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"40":0,"42":0,"43":0,"47":0,"56":1,"57":0,"58":0,"59":0,"60":0,"62":0,"78":1,"79":0,"80":0,"82":1,"83":0,"85":0,"87":0,"89":0,"91":0,"93":0,"95":0,"97":0,"100":0,"112":1,"113":0,"124":1,"125":0,"126":0,"128":0,"129":0,"140":1,"141":0,"142":0,"145":0,"147":0,"162":0,"163":0,"166":0,"167":0,"171":1}},"/home/travis/build/npmtest/node-npmtest-documentation/node_modules/documentation/lib/output/markdown.js":{"path":"/home/travis/build/npmtest/node-npmtest-documentation/node_modules/documentation/lib/output/markdown.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":17,"loc":{"start":{"line":17,"column":17},"end":{"line":17,"column":53}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":30},"end":{"line":19,"column":50}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":42}},"2":{"start":{"line":17,"column":0},"end":{"line":23,"column":2}},"3":{"start":{"line":18,"column":2},"end":{"line":18,"column":35}},"4":{"start":{"line":19,"column":2},"end":{"line":22,"column":5}},"5":{"start":{"line":20,"column":4},"end":{"line":20,"column":42}},"6":{"start":{"line":21,"column":4},"end":{"line":21,"column":61}}},"branchMap":{},"code":["'use strict';","","var mdast = require('mdast'),","  toc = require('mdast-toc'),","  markdownAST = require('./markdown_ast');","","/**"," * Formats documentation as"," * [Markdown](http://daringfireball.net/projects/markdown/)."," *"," * @param {Array<Object>} comments parsed comments"," * @param {Object} opts Options that can customize the output"," * @param {Function} callback called with null, string"," * @name markdown"," * @return {undefined} calls callback"," */","module.exports = function (comments, opts, callback) {","  var processor = mdast().use(toc);","  markdownAST(comments, opts, function (err, ast) {","    var processedAST = processor.run(ast);","    return callback(null, processor.stringify(processedAST));","  });","};",""],"l":{"3":1,"17":1,"18":0,"19":0,"20":0,"21":0}},"/home/travis/build/npmtest/node-npmtest-documentation/node_modules/documentation/lib/output/markdown_ast.js":{"path":"/home/travis/build/npmtest/node-npmtest-documentation/node_modules/documentation/lib/output/markdown_ast.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":1,"8":0,"9":1,"10":0,"11":1,"12":0,"13":0,"14":1,"15":0,"16":0,"17":1,"18":0,"19":0,"20":1,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0},"fnMap":{"1":{"name":"commentsToAST","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":49}}},"2":{"name":"generate","line":25,"loc":{"start":{"line":25,"column":2},"end":{"line":25,"column":36}}},"3":{"name":"paramList","line":27,"loc":{"start":{"line":27,"column":4},"end":{"line":27,"column":31}}},"4":{"name":"(anonymous_4)","line":28,"loc":{"start":{"line":28,"column":54},"end":{"line":28,"column":71}}},"5":{"name":"paramSection","line":48,"loc":{"start":{"line":48,"column":4},"end":{"line":48,"column":35}}},"6":{"name":"propertySection","line":55,"loc":{"start":{"line":55,"column":4},"end":{"line":55,"column":38}}},"7":{"name":"propertyList","line":62,"loc":{"start":{"line":62,"column":4},"end":{"line":62,"column":38}}},"8":{"name":"(anonymous_8)","line":64,"loc":{"start":{"line":64,"column":23},"end":{"line":64,"column":43}}},"9":{"name":"examplesSection","line":79,"loc":{"start":{"line":79,"column":4},"end":{"line":79,"column":38}}},"10":{"name":"(anonymous_10)","line":81,"loc":{"start":{"line":81,"column":37},"end":{"line":81,"column":56}}},"11":{"name":"returnsSection","line":86,"loc":{"start":{"line":86,"column":4},"end":{"line":86,"column":37}}},"12":{"name":"(anonymous_12)","line":87,"loc":{"start":{"line":87,"column":54},"end":{"line":87,"column":73}}},"13":{"name":"githubLink","line":96,"loc":{"start":{"line":96,"column":4},"end":{"line":96,"column":33}}},"14":{"name":"(anonymous_14)","line":115,"loc":{"start":{"line":115,"column":38},"end":{"line":115,"column":61}}},"15":{"name":"(anonymous_15)","line":119,"loc":{"start":{"line":119,"column":36},"end":{"line":119,"column":59}}},"16":{"name":"(anonymous_16)","line":125,"loc":{"start":{"line":125,"column":50},"end":{"line":125,"column":75}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":4,"column":54}},"2":{"start":{"line":15,"column":0},"end":{"line":128,"column":1}},"3":{"start":{"line":25,"column":2},"end":{"line":123,"column":3}},"4":{"start":{"line":27,"column":4},"end":{"line":46,"column":5}},"5":{"start":{"line":28,"column":6},"end":{"line":45,"column":10}},"6":{"start":{"line":29,"column":8},"end":{"line":44,"column":26}},"7":{"start":{"line":48,"column":4},"end":{"line":53,"column":5}},"8":{"start":{"line":49,"column":6},"end":{"line":52,"column":8}},"9":{"start":{"line":55,"column":4},"end":{"line":60,"column":5}},"10":{"start":{"line":56,"column":6},"end":{"line":59,"column":8}},"11":{"start":{"line":62,"column":4},"end":{"line":77,"column":5}},"12":{"start":{"line":63,"column":6},"end":{"line":76,"column":12}},"13":{"start":{"line":65,"column":10},"end":{"line":75,"column":28}},"14":{"start":{"line":79,"column":4},"end":{"line":84,"column":5}},"15":{"start":{"line":80,"column":6},"end":{"line":83,"column":12}},"16":{"start":{"line":82,"column":10},"end":{"line":82,"column":60}},"17":{"start":{"line":86,"column":4},"end":{"line":94,"column":5}},"18":{"start":{"line":87,"column":6},"end":{"line":93,"column":9}},"19":{"start":{"line":88,"column":8},"end":{"line":92,"column":78}},"20":{"start":{"line":96,"column":4},"end":{"line":105,"column":5}},"21":{"start":{"line":97,"column":6},"end":{"line":104,"column":9}},"22":{"start":{"line":107,"column":4},"end":{"line":122,"column":21}},"23":{"start":{"line":116,"column":8},"end":{"line":116,"column":55}},"24":{"start":{"line":120,"column":8},"end":{"line":120,"column":55}},"25":{"start":{"line":125,"column":2},"end":{"line":127,"column":11}},"26":{"start":{"line":126,"column":4},"end":{"line":126,"column":45}},"27":{"start":{"line":130,"column":0},"end":{"line":130,"column":31}}},"branchMap":{"1":{"line":33,"type":"binary-expr","locations":[{"start":{"line":33,"column":12},"end":{"line":33,"column":24}},{"start":{"line":33,"column":28},"end":{"line":33,"column":76}}]},"2":{"line":37,"type":"binary-expr","locations":[{"start":{"line":37,"column":12},"end":{"line":37,"column":27}},{"start":{"line":37,"column":31},"end":{"line":41,"column":14}}]},"3":{"line":43,"type":"binary-expr","locations":[{"start":{"line":43,"column":17},"end":{"line":43,"column":33}},{"start":{"line":43,"column":37},"end":{"line":43,"column":64}}]},"4":{"line":49,"type":"binary-expr","locations":[{"start":{"line":49,"column":13},"end":{"line":49,"column":29}},{"start":{"line":49,"column":33},"end":{"line":52,"column":7}}]},"5":{"line":56,"type":"binary-expr","locations":[{"start":{"line":56,"column":13},"end":{"line":56,"column":33}},{"start":{"line":56,"column":37},"end":{"line":59,"column":7}}]},"6":{"line":74,"type":"binary-expr","locations":[{"start":{"line":74,"column":12},"end":{"line":74,"column":31}},{"start":{"line":74,"column":35},"end":{"line":74,"column":68}}]},"7":{"line":80,"type":"binary-expr","locations":[{"start":{"line":80,"column":13},"end":{"line":80,"column":31}},{"start":{"line":80,"column":35},"end":{"line":83,"column":11}}]},"8":{"line":87,"type":"binary-expr","locations":[{"start":{"line":87,"column":13},"end":{"line":87,"column":30}},{"start":{"line":87,"column":34},"end":{"line":93,"column":8}}]},"9":{"line":97,"type":"binary-expr","locations":[{"start":{"line":97,"column":13},"end":{"line":97,"column":35}},{"start":{"line":97,"column":39},"end":{"line":104,"column":8}}]},"10":{"line":114,"type":"binary-expr","locations":[{"start":{"line":114,"column":12},"end":{"line":114,"column":45}},{"start":{"line":115,"column":6},"end":{"line":117,"column":12}}]},"11":{"line":118,"type":"binary-expr","locations":[{"start":{"line":118,"column":12},"end":{"line":118,"column":43}},{"start":{"line":119,"column":6},"end":{"line":121,"column":12}}]}},"code":["var mdast = require('mdast'),","  u = require('unist-builder'),","  formatType = require('../markdown_format_type'),","  formatInlineTags = require('../format_inline_tags');","","/**"," * Given a hierarchy-nested set of comments, generate an mdast-compatible"," * Abstract Syntax Tree usable for generating Markdown output"," *"," * @param {Array<Object>} comments nested comment"," * @param {Object} opts currently none accepted"," * @param {Function} callback called with AST"," * @returns {undefined} calls callback"," */","function commentsToAST(comments, opts, callback) {","","  /**","   * Generate an AST chunk for a comment at a given depth: this is","   * split from the main function to handle hierarchially nested comments","   *","   * @param {number} depth nesting of the comment, starting at 1","   * @param {Object} comment a single comment","   * @returns {Object} mdast-compatible AST","   */","  function generate(depth, comment) {","","    function paramList(params) {","      return u('list', { ordered: false }, params.map(function (param) {","        return u('listItem', [","          u('paragraph', [","            u('inlineCode', param.name),","            u('text', ' '),","            !!param.type && u('strong', [u('text', formatType(param.type))]),","            u('text', ' ')","          ].concat(mdast.parse(formatInlineTags(param.description)).children)","          .concat([","            !!param.default && u('paragraph', [","              u('text', ' (optional, default '),","              u('inlineCode', param.default),","              u('text', ')')","            ])","          ]).filter(Boolean))","        ].concat(param.properties && paramList(param.properties))","        .filter(Boolean));","      }));","    }","","    function paramSection(comment) {","      return !!comment.params && [","        u('strong', [u('text', 'Parameters')]),","        paramList(comment.params)","      ];","    }","","    function propertySection(comment) {","      return !!comment.properties && [","        u('strong', [u('text', 'Properties')]),","        propertyList(comment.properties)","      ];","    }","","    function propertyList(properties) {","      return u('list', { ordered: false },","        properties.map(function (property) {","          return u('listItem', [","            u('paragraph', [","              u('inlineCode', property.name),","              u('text', ' '),","              u('strong', [u('text', formatType(property.type))]),","              u('text', ' ')","            ]","            .concat(mdast.parse(formatInlineTags(property.description)).children)","            .filter(Boolean)),","            property.properties && propertyList(property.properties)","          ].filter(Boolean))","        }));","    }","","    function examplesSection(comment) {","      return !!comment.examples && [u('strong', [u('text', 'Examples')])]","        .concat(comment.examples.map(function (example) {","          return u('code', { lang: 'javascript' }, example);","        }));","    }","","    function returnsSection(comment) {","      return !!comment.returns && comment.returns.map(function (returns) {","        return u('paragraph', [","          u('text', 'Returns '),","          u('strong', [u('text', formatType(returns.type))]),","          u('text', ' ')","        ].concat(mdast.parse(formatInlineTags(returns.description)).children))","      });","    }","","    function githubLink(comment) {","      return comment.context.github && u('paragraph', [","        u('link', {","          title: 'Source code on GitHub',","          href: comment.context.github","        }, [u('text', comment.context.path + ':' +","          comment.context.loc.start.line + '-' +","          comment.context.loc.end.line)])","      ]);","    }","","    return [u('heading', { depth: depth }, [u('text', comment.name)])]","    .concat(githubLink(comment))","    .concat(mdast.parse(formatInlineTags(comment.description)).children)","    .concat(paramSection(comment))","    .concat(propertySection(comment))","    .concat(examplesSection(comment))","    .concat(returnsSection(comment))","    .concat(!!comment.members.instance.length &&","      comment.members.instance.reduce(function (memo, child) {","        return memo.concat(generate(depth + 1, child));","      }, []))","    .concat(!!comment.members.static.length &&","      comment.members.static.reduce(function (memo, child) {","        return memo.concat(generate(depth + 1, child));","      }, []))","    .filter(Boolean);","  }","","  return callback(null, u('root', comments.reduce(function (memo, comment) {","    return memo.concat(generate(1, comment));","  }, [])));","}","","module.exports = commentsToAST;",""],"l":{"1":1,"15":1,"25":1,"27":1,"28":0,"29":0,"48":1,"49":0,"55":1,"56":0,"62":1,"63":0,"65":0,"79":1,"80":0,"82":0,"86":1,"87":0,"88":0,"96":1,"97":0,"107":0,"116":0,"120":0,"125":0,"126":0,"130":1}},"/home/travis/build/npmtest/node-npmtest-documentation/node_modules/documentation/lib/markdown_format_type.js":{"path":"/home/travis/build/npmtest/node-npmtest-documentation/node_modules/documentation/lib/markdown_format_type.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":1},"b":{"1":[0,0],"2":[0,0,0,0,0,0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"formatType","line":1,"loc":{"start":{"line":1,"column":0},"end":{"line":1,"column":26}}},"2":{"name":"(anonymous_2)","line":9,"loc":{"start":{"line":9,"column":29},"end":{"line":9,"column":48}}},"3":{"name":"(anonymous_3)","line":20,"loc":{"start":{"line":20,"column":28},"end":{"line":20,"column":51}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":26,"column":1}},"2":{"start":{"line":2,"column":2},"end":{"line":4,"column":3}},"3":{"start":{"line":3,"column":4},"end":{"line":3,"column":14}},"4":{"start":{"line":5,"column":2},"end":{"line":25,"column":3}},"5":{"start":{"line":7,"column":4},"end":{"line":7,"column":21}},"6":{"start":{"line":9,"column":4},"end":{"line":11,"column":20}},"7":{"start":{"line":10,"column":6},"end":{"line":10,"column":33}},"8":{"start":{"line":13,"column":4},"end":{"line":13,"column":17}},"9":{"start":{"line":15,"column":4},"end":{"line":15,"column":51}},"10":{"start":{"line":17,"column":4},"end":{"line":17,"column":47}},"11":{"start":{"line":19,"column":4},"end":{"line":22,"column":29}},"12":{"start":{"line":21,"column":8},"end":{"line":21,"column":39}},"13":{"start":{"line":24,"column":4},"end":{"line":24,"column":23}},"14":{"start":{"line":28,"column":0},"end":{"line":28,"column":28}}},"branchMap":{"1":{"line":2,"type":"if","locations":[{"start":{"line":2,"column":2},"end":{"line":2,"column":2}},{"start":{"line":2,"column":2},"end":{"line":2,"column":2}}]},"2":{"line":5,"type":"switch","locations":[{"start":{"line":6,"column":2},"end":{"line":7,"column":21}},{"start":{"line":8,"column":2},"end":{"line":11,"column":20}},{"start":{"line":12,"column":2},"end":{"line":13,"column":17}},{"start":{"line":14,"column":2},"end":{"line":15,"column":51}},{"start":{"line":16,"column":2},"end":{"line":17,"column":47}},{"start":{"line":18,"column":2},"end":{"line":22,"column":29}},{"start":{"line":23,"column":2},"end":{"line":24,"column":23}}]}},"code":["function formatType(type) {","  if (!type) {","    return '';","  }","  switch (type.type) {","  case 'NameExpression':","    return type.name;","  case 'UnionType':","    return type.elements.map(function (element) {","      return formatType(element);","    }).join(' or ');","  case 'AllLiteral':","    return 'Any';","  case 'OptionalType':","    return '[' + formatType(type.expression) + ']';","  case 'RestType':","    return '...' + formatType(type.expression);","  case 'TypeApplication':","    return formatType(type.expression) + '&lt;' +","      type.applications.map(function (application) {","        return formatType(application);","      }).join(', ') + '&gt;';","  case 'UndefinedLiteral':","    return 'undefined';","  }","}","","module.exports = formatType;",""],"l":{"1":1,"2":0,"3":0,"5":0,"7":0,"9":0,"10":0,"13":0,"15":0,"17":0,"19":0,"21":0,"24":0,"28":1}},"/home/travis/build/npmtest/node-npmtest-documentation/node_modules/documentation/lib/format_inline_tags.js":{"path":"/home/travis/build/npmtest/node-npmtest-documentation/node_modules/documentation/lib/format_inline_tags.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":1},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"formatInlineTags","line":12,"loc":{"start":{"line":12,"column":0},"end":{"line":12,"column":32}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":12,"column":0},"end":{"line":25,"column":1}},"3":{"start":{"line":13,"column":2},"end":{"line":13,"column":18}},"4":{"start":{"line":14,"column":2},"end":{"line":14,"column":31}},"5":{"start":{"line":16,"column":2},"end":{"line":22,"column":3}},"6":{"start":{"line":17,"column":4},"end":{"line":21,"column":5}},"7":{"start":{"line":18,"column":6},"end":{"line":18,"column":37}},"8":{"start":{"line":20,"column":6},"end":{"line":20,"column":49}},"9":{"start":{"line":24,"column":2},"end":{"line":24,"column":16}},"10":{"start":{"line":27,"column":0},"end":{"line":27,"column":34}}},"branchMap":{"1":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":4},"end":{"line":17,"column":4}},{"start":{"line":17,"column":4},"end":{"line":17,"column":4}}]}},"code":["var inlineLex = require('jsdoc-inline-lex');","","/**"," * Format link & tutorial tags with simple code inline tags."," *"," * @param {string} text input - typically a description"," * @returns {string} markdown-friendly output"," * @private"," * @example"," * formatInlineTags('{@link Foo}'); // \"`Foo`\""," */","function formatInlineTags(text) {","  var output = '';","  var tokens = inlineLex(text);","","  for (var i = 0; i < tokens.length; i++) {","    if (tokens[i].type === 'text') {","      output += tokens[i].capture[0];","    } else {","      output += '`' + tokens[i].capture[1] + '`';","    }","  }","","  return output;","}","","module.exports = formatInlineTags;",""],"l":{"1":1,"12":1,"13":0,"14":0,"16":0,"17":0,"18":0,"20":0,"24":0,"27":1}},"/home/travis/build/npmtest/node-npmtest-documentation/node_modules/documentation/lib/output/json.js":{"path":"/home/travis/build/npmtest/node-npmtest-documentation/node_modules/documentation/lib/output/json.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":14,"loc":{"start":{"line":14,"column":17},"end":{"line":14,"column":53}}},"2":{"name":"(anonymous_2)","line":16,"loc":{"start":{"line":16,"column":17},"end":{"line":16,"column":36}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":30}},"2":{"start":{"line":14,"column":0},"end":{"line":21,"column":2}},"3":{"start":{"line":16,"column":2},"end":{"line":18,"column":5}},"4":{"start":{"line":17,"column":4},"end":{"line":17,"column":26}},"5":{"start":{"line":20,"column":2},"end":{"line":20,"column":59}}},"branchMap":{},"code":["'use strict';","","var walk = require('../walk');","","/**"," * Formats documentation as a JSON string."," *"," * @param {Array<Object>} comments parsed comments"," * @param {Object} opts Options that can customize the output"," * @param {Function} callback called with null, string"," * @name json"," * @return {undefined} calls callback"," */","module.exports = function (comments, opts, callback) {","","  walk(comments, function (comment) {","    delete comment.errors;","  });","","  return callback(null, JSON.stringify(comments, null, 2));","};",""],"l":{"3":1,"14":1,"16":0,"17":0,"20":0}},"/home/travis/build/npmtest/node-npmtest-documentation/node_modules/documentation/lib/args.js":{"path":"/home/travis/build/npmtest/node-npmtest-documentation/node_modules/documentation/lib/args.js","s":{"1":1,"2":1,"3":0,"4":0,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"parse","line":5,"loc":{"start":{"line":5,"column":0},"end":{"line":5,"column":21}}},"2":{"name":"(anonymous_2)","line":29,"loc":{"start":{"line":29,"column":11},"end":{"line":29,"column":23}}},"3":{"name":"(anonymous_3)","line":75,"loc":{"start":{"line":75,"column":17},"end":{"line":75,"column":33}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":3,"column":48}},"2":{"start":{"line":5,"column":0},"end":{"line":68,"column":1}},"3":{"start":{"line":8,"column":2},"end":{"line":66,"column":14}},"4":{"start":{"line":30,"column":4},"end":{"line":30,"column":41}},"5":{"start":{"line":75,"column":0},"end":{"line":130,"column":1}},"6":{"start":{"line":76,"column":2},"end":{"line":76,"column":25}},"7":{"start":{"line":78,"column":2},"end":{"line":81,"column":14}},"8":{"start":{"line":83,"column":2},"end":{"line":98,"column":3}},"9":{"start":{"line":84,"column":4},"end":{"line":84,"column":20}},"10":{"start":{"line":86,"column":4},"end":{"line":97,"column":5}},"11":{"start":{"line":87,"column":6},"end":{"line":87,"column":52}},"12":{"start":{"line":88,"column":6},"end":{"line":88,"column":38}},"13":{"start":{"line":89,"column":6},"end":{"line":89,"column":28}},"14":{"start":{"line":90,"column":6},"end":{"line":90,"column":37}},"15":{"start":{"line":91,"column":6},"end":{"line":93,"column":7}},"16":{"start":{"line":92,"column":8},"end":{"line":92,"column":43}},"17":{"start":{"line":95,"column":6},"end":{"line":95,"column":23}},"18":{"start":{"line":96,"column":6},"end":{"line":96,"column":96}},"19":{"start":{"line":100,"column":2},"end":{"line":103,"column":3}},"20":{"start":{"line":101,"column":4},"end":{"line":101,"column":21}},"21":{"start":{"line":102,"column":4},"end":{"line":102,"column":89}},"22":{"start":{"line":105,"column":2},"end":{"line":105,"column":18}},"23":{"start":{"line":107,"column":2},"end":{"line":109,"column":3}},"24":{"start":{"line":108,"column":4},"end":{"line":108,"column":37}},"25":{"start":{"line":111,"column":2},"end":{"line":129,"column":3}}},"branchMap":{"1":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":2},"end":{"line":83,"column":2}},{"start":{"line":83,"column":2},"end":{"line":83,"column":2}}]},"2":{"line":88,"type":"binary-expr","locations":[{"start":{"line":88,"column":16},"end":{"line":88,"column":22}},{"start":{"line":88,"column":26},"end":{"line":88,"column":36}}]},"3":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":13},"end":{"line":89,"column":17}},{"start":{"line":89,"column":21},"end":{"line":89,"column":27}}]},"4":{"line":90,"type":"binary-expr","locations":[{"start":{"line":90,"column":16},"end":{"line":90,"column":23}},{"start":{"line":90,"column":27},"end":{"line":90,"column":36}}]},"5":{"line":91,"type":"if","locations":[{"start":{"line":91,"column":6},"end":{"line":91,"column":6}},{"start":{"line":91,"column":6},"end":{"line":91,"column":6}}]},"6":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":10},"end":{"line":91,"column":22}},{"start":{"line":91,"column":26},"end":{"line":91,"column":48}}]},"7":{"line":100,"type":"if","locations":[{"start":{"line":100,"column":2},"end":{"line":100,"column":2}},{"start":{"line":100,"column":2},"end":{"line":100,"column":2}}]},"8":{"line":100,"type":"binary-expr","locations":[{"start":{"line":100,"column":6},"end":{"line":100,"column":23}},{"start":{"line":100,"column":27},"end":{"line":100,"column":46}}]},"9":{"line":107,"type":"if","locations":[{"start":{"line":107,"column":2},"end":{"line":107,"column":2}},{"start":{"line":107,"column":2},"end":{"line":107,"column":2}}]},"10":{"line":119,"type":"binary-expr","locations":[{"start":{"line":119,"column":13},"end":{"line":119,"column":25}},{"start":{"line":119,"column":29},"end":{"line":119,"column":31}}]}},"code":["var path = require('path'),","  yargs = require('yargs'),","  loadConfig = require('../lib/load_config.js');","","function parse(args) {","  // reset() needs to be called at parse time because the yargs module uses an","  // internal global variable to hold option state","  return yargs.reset()","  .usage('Usage: $0 <command> [options]')","","  .option('f', {","    alias: 'format',","    default: 'json',","    choices: ['json', 'md', 'html']","  })","","  .option('lint', {","    describe: 'check output for common style and uniformity mistakes',","    type: 'boolean'","  })","","  .describe('t', 'specify a theme: this must be a valid theme module')","  .alias('t', 'theme')","","  .boolean('p')","  .describe('p', 'generate documentation tagged as private')","  .alias('p', 'private')","","  .version(function () {","    return require('../package').version;","  })","","  .describe('name', 'project name. by default, inferred from package.json')","  .describe('project-version', 'project version. by default, inferred from package.json')","","  .option('shallow', {","    describe: 'shallow mode turns off dependency resolution, ' +","    'only processing the specified files (or the main script specified in package.json)',","    default: false,","    type: 'boolean'","  })","","  .boolean('polyglot')","  .describe('polyglot', 'polyglot mode turns off dependency resolution and ' +","            'enables multi-language support. use this to document c++')","","  .boolean('g')","  .describe('g', 'infer links to github in documentation')","  .alias('g', 'github')","","  .option('o', {","    describe: 'output location. omit for stdout, otherwise is a filename ' +","      'for single-file outputs and a directory name for multi-file outputs like html',","    alias: 'output',","    default: 'stdout'","  })","","  .describe('c', 'configuration file. an array defining explicit sort order')","  .alias('c', 'config')","","  .help('h')","  .alias('h', 'help')","","  .example('$0 foo.js', 'parse documentation in a given file')","","  .parse(args)","","}","/**"," * Parse and validate command-line options for documentation."," * @param {Array} args The array of arguments to parse; e.g. process.argv.slice(2)."," * @return {object} {inputs, options, formatter, formatterOptions, output}"," * @private"," */","module.exports = function (args) {","  var argv = parse(args);","","  var inputs,","    name = argv.name,","    version = argv['project-version'],","    transform;","","  if (argv._.length > 0) {","    inputs = argv._;","  } else {","    try {","      var p = require(path.resolve('package.json'));","      inputs = [p.main || 'index.js'];","      name = name || p.name;","      version = version || p.version;","      if (p.browserify && p.browserify.transform) {","        transform = p.browserify.transform;","      }","    } catch (e) {","      yargs.showHelp();","      throw new Error('documentation was given no files and was not run in a module directory');","    }","  }","","  if (argv.f === 'html' && argv.o === 'stdout') {","    yargs.showHelp();","    throw new Error('The HTML output mode requires a destination directory set with -o');","  }","","  var config = {};","","  if (argv.config) {","    config = loadConfig(argv.config);","  }","","  return {","    inputs: inputs,","    options: {","      private: argv.private,","      transform: transform,","      lint: argv.lint,","      github: argv.github,","      polyglot: argv.polyglot,","      order: config.order || [],","      shallow: argv.shallow","    },","    formatter: argv.f,","    formatterOptions: {","      name: name,","      version: version,","      theme: argv.theme","    },","    output: argv.o","  }","}","","",""],"l":{"1":1,"5":1,"8":0,"30":0,"75":1,"76":0,"78":0,"83":0,"84":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"95":0,"96":0,"100":0,"101":0,"102":0,"105":0,"107":0,"108":0,"111":0}},"/home/travis/build/npmtest/node-npmtest-documentation/node_modules/documentation/lib/load_config.js":{"path":"/home/travis/build/npmtest/node-npmtest-documentation/node_modules/documentation/lib/load_config.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":1},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"loadConfig","line":17,"loc":{"start":{"line":17,"column":0},"end":{"line":17,"column":30}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":6,"column":49}},"2":{"start":{"line":17,"column":0},"end":{"line":30,"column":1}},"3":{"start":{"line":18,"column":2},"end":{"line":29,"column":3}},"4":{"start":{"line":19,"column":4},"end":{"line":22,"column":59}},"5":{"start":{"line":24,"column":4},"end":{"line":27,"column":16}},"6":{"start":{"line":28,"column":4},"end":{"line":28,"column":12}},"7":{"start":{"line":32,"column":0},"end":{"line":32,"column":28}}},"branchMap":{},"code":["'use strict';","","var yaml = require('js-yaml'),","  fs = require('fs'),","  path = require('path'),","  stripComments = require('strip-json-comments');","","/**"," * Try to load a configuration file: since this is configuration, we're"," * lenient with respect to its structure. It can be JSON or YAML,"," * and can contain comments, unlike normal JSON."," *"," * @param {string} filePath the user-provided path to configuration"," * @returns {Object} configuration, if it can be parsed"," * @throws {Error} if the file cannot be read."," */","function loadConfig(filePath) {","  try {","    return yaml.safeLoad(","      stripComments(","        fs.readFileSync(","          path.resolve(process.cwd(), filePath), 'utf8')));","  } catch (e) {","    e.message = 'Cannot read config file: ' +","      filePath +","      '\\nError: ' +","      e.message;","    throw e;","  }","}","","module.exports = loadConfig;",""],"l":{"3":1,"17":1,"18":0,"19":0,"24":0,"28":0,"32":1}}}